-- MySQL dump 10.13  Distrib 5.7.26, for linux-glibc2.12 (x86_64)
--
-- Host: localhost    Database: my_blog
-- ------------------------------------------------------
-- Server version	5.7.26

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `article`
--

DROP TABLE IF EXISTS `article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `article` (
  `id` bigint(20) NOT NULL,
  `author_id` int(11) DEFAULT NULL COMMENT '作者id',
  `article_category_id` int(11) DEFAULT NULL COMMENT '文章分类id',
  `tag_id` varchar(255) DEFAULT NULL COMMENT 'tag_id',
  `title` varchar(255) DEFAULT NULL COMMENT '文章标题',
  `content` longtext COMMENT '文章内容',
  `created_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `browse_num` int(11) DEFAULT NULL COMMENT '浏览数',
  `like_num` int(11) DEFAULT NULL COMMENT '点赞数',
  `is_public` int(4) DEFAULT '1' COMMENT '是否公开 默认公开1 and 私有0',
  `publish_states` int(4) DEFAULT NULL COMMENT '0 is not, 1 is 0k',
  `is_del` int(4) DEFAULT '0' COMMENT '删除1 and 默认0',
  `keywords` varchar(255) DEFAULT NULL COMMENT '文章关键字',
  `abstract_content` varchar(500) DEFAULT NULL COMMENT '摘要',
  `markdown_doc` longtext COMMENT 'Markdown Doc',
  `allow_comment` int(4) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article`
--

LOCK TABLES `article` WRITE;
/*!40000 ALTER TABLE `article` DISABLE KEYS */;
INSERT INTO `article` VALUES (1561911293772922,0,1,'1561910658515056,1561910658528091,1561910658552046','爬楼梯','<h2 id=\"h2-u9898u76EEu63CFu8FF0\"><a name=\"题目描述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>题目描述</h2><p>假设你正在爬楼梯。需要 n 阶你才能到达楼顶。<br>每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？<br>注意：给定 n 是一个正整数。</p>\n<p>示例 1：<br>输入： 2<br>输出： 2<br>解释： 有两种方法可以爬到楼顶。<br>1 阶 + 1 阶<br>2 阶</p>\n<p>示例 2：<br>输入： 3<br>输出： 3<br>解释： 有三种方法可以爬到楼顶。<br>1 阶 + 1 阶 + 1 阶<br>1 阶 + 2 阶<br>2 阶 + 1 阶</p>\n<h3 id=\"h3-u89E3u51B3\"><a name=\"解决\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>解决</h3><pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"com\">/*方法一：暴力法</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"com\">算法</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"com\">在暴力法中，我们将会把所有可能爬的阶数进行组合，也就是 1 和 2 。而在每一步中我们都会继续调用 climbStairsclimbStairs 这个函数模拟爬 11 阶和 22 阶的情形，并返回两个函数的返回值之和。</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"com\">climbStairs(i,n)=(i+1,n)+climbStairs(i+2,n)</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"com\">其中 i 定义了当前阶数，而 n 定义了目标阶数。</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"com\">*/</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Solution</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"kwd\">public</span><span class=\"pun\">:</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> climbStairs</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> n</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> climb</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\">n</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> climb</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> i</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">int</span><span class=\"pln\"> n</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">&gt;</span><span class=\"pln\">n</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">==</span><span class=\"pln\">n</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> climb</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">n</span><span class=\"pun\">)+</span><span class=\"pln\">climb</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\">n</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pun\">};</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"com\">/*方法1: 当输入数据为44时，运行需要8秒,out time limit*/</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"com\">/*</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"com\">使用递归斐波那契，结果一样 out time limit</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"com\">*/</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Solution</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"kwd\">public</span><span class=\"pun\">:</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> climbStairs</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> n</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> climb</span><span class=\"pun\">(</span><span class=\"pln\">n</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> climb</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> n</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">n </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> n </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> climb</span><span class=\"pun\">(</span><span class=\"pln\">n</span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">)+</span><span class=\"pln\">climb</span><span class=\"pun\">(</span><span class=\"pln\">n</span><span class=\"pun\">-</span><span class=\"lit\">2</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"pun\">};</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"com\">/*方法2 动态规划</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"com\">不难发现，这个问题可以被分解为一些包含最优子结构的子问题，</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"com\">即它的最优解可以从其子问题的最优解来有效地构建，</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"com\">我们可以使用动态规划来解决这一问题。</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"com\">第 i阶可以由以下两种方法得到：</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"com\">在第 (i-1) 阶后向上爬一阶。</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"com\">在第 (i-2) 阶后向上爬 2 阶。</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"com\">所以到达第 i 阶的方法总数就是到第 (i-1)阶和第 (i-2) 阶的方法数之和。</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"com\">令 dp[i] 表示能到达第 i 阶的方法总数：</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"com\">dp[i]=dp[i−1]+dp[i−2]</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"com\">参考：https://leetcode-cn.com/problems/climbing-stairs/solution/pa-lou-ti-by-leetcode/</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"com\">*/</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Solution</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"kwd\">public</span><span class=\"pun\">:</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> climbStairs</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> n</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"pln\">       </span><span class=\"typ\">vector</span><span class=\"str\">&lt;int&gt;</span><span class=\"pln\"> va</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"pln\">       va</span><span class=\"pun\">.</span><span class=\"pln\">push_back</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"pln\">       va</span><span class=\"pun\">.</span><span class=\"pln\">push_back</span><span class=\"pun\">(</span><span class=\"lit\">2</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"pln\">       </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> i</span><span class=\"pun\">=</span><span class=\"lit\">2</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">&lt;</span><span class=\"pln\">n</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">            </span><span class=\"typ\">int</span><span class=\"pln\"> a </span><span class=\"pun\">=</span><span class=\"pln\"> va</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">]+</span><span class=\"pln\">va</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">-</span><span class=\"lit\">2</span><span class=\"pun\">];</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pln\">            va</span><span class=\"pun\">.</span><span class=\"pln\">push_back</span><span class=\"pun\">(</span><span class=\"pln\">a</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">       </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> va</span><span class=\"pun\">[</span><span class=\"pln\">n</span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">];</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"pun\">};</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"com\">/*方法2通过*/</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"com\">/*</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"com\">再来看这个斐波那契 要比上面那个更优秀</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"com\">*/</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Solution</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"kwd\">public</span><span class=\"pun\">:</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> climbStairs</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> n</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">n </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">n </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> first</span><span class=\"pun\">=</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">second</span><span class=\"pun\">=</span><span class=\"lit\">2</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> i</span><span class=\"pun\">=</span><span class=\"lit\">2</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">&lt;</span><span class=\"pln\">n</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"pln\">            </span><span class=\"typ\">int</span><span class=\"pln\"> three </span><span class=\"pun\">=</span><span class=\"pln\"> first </span><span class=\"pun\">+</span><span class=\"pln\"> second</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">            first </span><span class=\"pun\">=</span><span class=\"pln\"> second</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pln\">            second </span><span class=\"pun\">=</span><span class=\"pln\"> three</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> second</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"pun\">};</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"com\">/***</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"com\">*Fib 公式法</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"com\">*/</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"typ\">int</span><span class=\"pln\"> </span><span class=\"typ\">Fib</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> n</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"com\">//公式计算Fib数列</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"kwd\">double</span><span class=\"pln\"> gh5</span><span class=\"pun\">=</span><span class=\"pln\">sqrt</span><span class=\"pun\">((</span><span class=\"kwd\">double</span><span class=\"pun\">)</span><span class=\"lit\">5</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">pow</span><span class=\"pun\">((</span><span class=\"lit\">1</span><span class=\"pun\">+</span><span class=\"pln\">gh5</span><span class=\"pun\">),</span><span class=\"pln\">n</span><span class=\"pun\">)-</span><span class=\"pln\">pow</span><span class=\"pun\">((</span><span class=\"lit\">1</span><span class=\"pun\">-</span><span class=\"pln\">gh5</span><span class=\"pun\">),</span><span class=\"pln\">n</span><span class=\"pun\">))/(</span><span class=\"pln\">pow</span><span class=\"pun\">((</span><span class=\"kwd\">double</span><span class=\"pun\">)</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\">n</span><span class=\"pun\">)*</span><span class=\"pln\">gh5</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pun\">}</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Solution</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"kwd\">public</span><span class=\"pun\">:</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> climbStairs</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> n</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">n </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">n </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">n </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"typ\">Fib</span><span class=\"pun\">(</span><span class=\"pln\">n</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pun\">};</span></code></li></ol></pre>\n','2019-07-01 00:14:53','2019-10-05 21:50:41',1,0,1,1,0,'C++,算法,刷题','假设你正在爬楼梯。需要 n 阶你才能到达楼顶。\n每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？\n注意：给定 n 是一个正整数。','##题目描述\n假设你正在爬楼梯。需要 n 阶你才能到达楼顶。\n每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？\n注意：给定 n 是一个正整数。\n\n示例 1：\n输入： 2\n输出： 2\n解释： 有两种方法可以爬到楼顶。\n1 阶 + 1 阶\n2 阶\n\n示例 2：\n输入： 3\n输出： 3\n解释： 有三种方法可以爬到楼顶。\n1 阶 + 1 阶 + 1 阶\n1 阶 + 2 阶\n2 阶 + 1 阶\n\n###解决\n```cpp\n/*方法一：暴力法\n算法\n在暴力法中，我们将会把所有可能爬的阶数进行组合，也就是 1 和 2 。而在每一步中我们都会继续调用 climbStairsclimbStairs 这个函数模拟爬 11 阶和 22 阶的情形，并返回两个函数的返回值之和。\nclimbStairs(i,n)=(i+1,n)+climbStairs(i+2,n)\n其中 i 定义了当前阶数，而 n 定义了目标阶数。\n*/\nclass Solution {\npublic:\n    int climbStairs(int n) {\n        return climb(0,n);\n    }\n    int climb(int i, int n) {\n        if(i>n) return 0;\n        if(i==n) return 1;\n\n        return climb(i+1,n)+climb(i+2,n);\n    }\n};\n/*方法1: 当输入数据为44时，运行需要8秒,out time limit*/\n\n/*\n使用递归斐波那契，结果一样 out time limit\n*/\nclass Solution {\npublic:\n    int climbStairs(int n) {\n        return climb(n);\n    }\n    int climb(int n) {\n        if(n == 0 || n == 1) return 1;\n        return climb(n-1)+climb(n-2);\n    }\n};\n\n/*方法2 动态规划\n不难发现，这个问题可以被分解为一些包含最优子结构的子问题，\n即它的最优解可以从其子问题的最优解来有效地构建，\n我们可以使用动态规划来解决这一问题。\n第 i阶可以由以下两种方法得到：\n在第 (i-1) 阶后向上爬一阶。\n在第 (i-2) 阶后向上爬 2 阶。\n所以到达第 i 阶的方法总数就是到第 (i-1)阶和第 (i-2) 阶的方法数之和。\n令 dp[i] 表示能到达第 i 阶的方法总数：\ndp[i]=dp[i−1]+dp[i−2]\n\n参考：https://leetcode-cn.com/problems/climbing-stairs/solution/pa-lou-ti-by-leetcode/\n*/\nclass Solution {\npublic:\n    int climbStairs(int n) {\n       vector<int> va;\n       va.push_back(1);\n       va.push_back(2);\n\n       for(int i=2; i<n; i++) {\n            int a = va[i-1]+va[i-2];\n            va.push_back(a);\n       }\n        return va[n-1];\n    }\n};\n/*方法2通过*/\n\n/*\n再来看这个斐波那契 要比上面那个更优秀\n*/\nclass Solution {\npublic:\n    int climbStairs(int n) {\n        if(n == 1) return 1;\n        if(n == 2) return 2;\n\n        int first=1,second=2;\n        for(int i=2; i<n; i++) {\n            int three = first + second;\n            first = second;\n            second = three;\n        }\n\n        return second;\n    }\n};\n\n/***\n*Fib 公式法\n*/\nint Fib(int n) {//公式计算Fib数列\n    double gh5=sqrt((double)5);\n    return (pow((1+gh5),n)-pow((1-gh5),n))/(pow((double)2,n)*gh5);\n}\nclass Solution {\npublic:\n    int climbStairs(int n) {\n        if(n == 0) return 0;\n        if(n == 1) return 1;\n        if(n == 2) return 2;\n        return Fib(n+1);\n    }\n};\n```',1),(1561913712138354,0,2,'1561910658515056,1561910658528091,1561913712258076,1561913712282076','最大子序和','<h2 id=\"h2-u9898u76EEu63CFu8FF0\"><a name=\"题目描述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>题目描述</h2><p>给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。</p>\n<p>示例:</p>\n<p>输入: [-2,1,-3,4,-1,2,1,-5,4],<br>输出: 6<br>解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。</p>\n<p>进阶:<br>如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的分治法求解。</p>\n<h3 id=\"h3-solution\"><a name=\"Solution\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>Solution</h3><p>这道题用动态规划的思路并不难解决，比较难的是后文提出的用分治法求解，但由于其不是最优解法，所以先不列出来<br>动态规划的是首先对数组进行遍历，当前最大连续子序列和为 sum，结果为 ans<br>如果 sum &gt; 0，则说明 sum 对结果有增益效果，则 sum 保留并加上当前遍历数字<br>如果 sum &lt;= 0，则说明 sum 对结果无增益效果，需要舍弃，则 sum 直接更新为当前遍历数字<br>每次比较 sum 和 ans的大小，将最大值置为ans，遍历结束返回结果</p>\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Solution</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"kwd\">public</span><span class=\"pun\">:</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> maxSubArray</span><span class=\"pun\">(</span><span class=\"typ\">vector</span><span class=\"str\">&lt;int&gt;</span><span class=\"pun\">&amp;</span><span class=\"pln\"> nums</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> len </span><span class=\"pun\">=</span><span class=\"pln\"> nums</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">();</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">len </span><span class=\"pun\">&lt;</span><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> sum</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\">ans</span><span class=\"pun\">=</span><span class=\"pln\">nums</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">];</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> i</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">&lt;</span><span class=\"pln\">len</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">            </span><span class=\"typ\">int</span><span class=\"pln\"> num </span><span class=\"pun\">=</span><span class=\"pln\"> nums</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">];</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">sum </span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"pln\">                sum</span><span class=\"pun\">+=</span><span class=\"pln\">num</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"pln\">                sum </span><span class=\"pun\">=</span><span class=\"pln\"> num</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"pln\">            ans </span><span class=\"pun\">=</span><span class=\"pln\"> max</span><span class=\"pun\">(</span><span class=\"pln\">sum</span><span class=\"pun\">,</span><span class=\"pln\">ans</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> ans</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pun\">};</span></code></li></ol></pre>\n','2019-07-01 00:55:12','2019-10-05 21:50:33',37,0,1,1,0,'C++,算法,二分,遍历','这道题用动态规划的思路并不难解决，比较难的是后文提出的用分治法求解，但由于其不是最优解法，所以先不列出来\n动态规划的是首先对数组进行遍历，当前最大连续子序列和为 sum，结果为 ans\n如果 sum > 0，则说明 sum 对结果有增益效果，则 sum 保留并加上当前遍历数字\n如果 sum <= 0，则说明 sum 对结果无增益效果，需要舍弃，则 sum 直接更新为当前遍历数字','##题目描述\n给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。\n\n示例:\n\n输入: [-2,1,-3,4,-1,2,1,-5,4],\n输出: 6\n解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。\n\n进阶:\n如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的分治法求解。\n\n###Solution\n这道题用动态规划的思路并不难解决，比较难的是后文提出的用分治法求解，但由于其不是最优解法，所以先不列出来\n动态规划的是首先对数组进行遍历，当前最大连续子序列和为 sum，结果为 ans\n如果 sum > 0，则说明 sum 对结果有增益效果，则 sum 保留并加上当前遍历数字\n如果 sum <= 0，则说明 sum 对结果无增益效果，需要舍弃，则 sum 直接更新为当前遍历数字\n每次比较 sum 和 ans的大小，将最大值置为ans，遍历结束返回结果\n```cpp\nclass Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        int len = nums.size();\n        if(len <1) return 0;\n\n        int sum=0,ans=nums[0];\n        for(int i=0; i<len; i++) {\n            int num = nums[i];\n            if(sum > 0) {\n                sum+=num;\n            } else {\n                sum = num;\n            }\n            ans = max(sum,ans);\n        }\n\n        return ans;\n    }\n};\n```',1),(1561913821619104,0,2,'1561910658515056,1561910658528091,1561913821636049,1561913712282076,1561913821677061','区域和检索','<h2 id=\"h2-u9898u76EEu63CFu8FF0\"><a name=\"题目描述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>题目描述</h2><p>给定一个整数数组  nums，求出数组从索引 i 到 j  (i ≤ j) 范围内元素的总和，包含 i,  j 两点。</p>\n<p>示例：<br>给定 nums = [-2, 0, 3, -5, 2, -1]，求和函数为 sumRange()<br>sumRange(0, 2) -&gt; 1<br>sumRange(2, 5) -&gt; -1<br>sumRange(0, 5) -&gt; -3</p>\n<h3 id=\"h3--\"><a name=\"说明:\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>说明:</h3><p>你可以假设数组不可变。<br>会多次调用 sumRange 方法。</p>\n<h3 id=\"h3--\"><a name=\"解决思路：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>解决思路：</h3><pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"com\">/***</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"com\">1.常规思路</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"com\">****/</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">NumArray</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"kwd\">public</span><span class=\"pun\">:</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">vector</span><span class=\"str\">&lt;int&gt;</span><span class=\"pln\"> nums</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">NumArray</span><span class=\"pun\">(</span><span class=\"typ\">vector</span><span class=\"str\">&lt;int&gt;</span><span class=\"pun\">&amp;</span><span class=\"pln\"> nums</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">-&gt;</span><span class=\"pln\">nums</span><span class=\"pun\">=</span><span class=\"pln\">nums</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> sumRange</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> i</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">int</span><span class=\"pln\"> j</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> sum</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> x</span><span class=\"pun\">=</span><span class=\"pln\">i</span><span class=\"pun\">;</span><span class=\"pln\">x</span><span class=\"pun\">&lt;=</span><span class=\"pln\">j</span><span class=\"pun\">;</span><span class=\"pln\">x</span><span class=\"pun\">++)</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"pln\">            sum</span><span class=\"pun\">+=</span><span class=\"kwd\">this</span><span class=\"pun\">-&gt;</span><span class=\"pln\">nums</span><span class=\"pun\">[</span><span class=\"pln\">x</span><span class=\"pun\">];</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> sum</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pun\">};</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"com\">/*****</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"com\">2.动态规划</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"com\">******/</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">NumArray</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"kwd\">private</span><span class=\"pun\">:</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">vector</span><span class=\"str\">&lt;int&gt;</span><span class=\"pln\"> sums</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"kwd\">public</span><span class=\"pun\">:</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">NumArray</span><span class=\"pun\">(</span><span class=\"typ\">vector</span><span class=\"str\">&lt;int&gt;</span><span class=\"pun\">&amp;</span><span class=\"pln\"> nums</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"pln\">nums</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">())</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">        sums</span><span class=\"pun\">.</span><span class=\"pln\">push_back</span><span class=\"pun\">(</span><span class=\"pln\">nums</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">]);</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> i</span><span class=\"pun\">=</span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">&lt;</span><span class=\"pln\">nums</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">();</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pln\">            sums</span><span class=\"pun\">.</span><span class=\"pln\">push_back</span><span class=\"pun\">(</span><span class=\"pln\">nums</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]+</span><span class=\"pln\">sums</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">]);</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> sumRange</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> i</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">int</span><span class=\"pln\"> j</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> a </span><span class=\"pun\">=</span><span class=\"pln\"> i</span><span class=\"pun\">&gt;</span><span class=\"lit\">0</span><span class=\"pun\">?</span><span class=\"pln\">sums</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">]:</span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> b </span><span class=\"pun\">=</span><span class=\"pln\"> sums</span><span class=\"pun\">[</span><span class=\"pln\">j</span><span class=\"pun\">];</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> b</span><span class=\"pun\">-</span><span class=\"pln\">a</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pun\">};</span></code></li></ol></pre>\n','2019-07-01 00:57:01','2019-10-05 21:50:25',0,0,1,1,0,'C++,算法,树,遍历,二叉树','给定一个整数数组  nums，求出数组从索引 i 到 j  (i ≤ j) 范围内元素的总和，包含 i,  j 两点。','##题目描述\n给定一个整数数组  nums，求出数组从索引 i 到 j  (i ≤ j) 范围内元素的总和，包含 i,  j 两点。\n\n示例：\n给定 nums = [-2, 0, 3, -5, 2, -1]，求和函数为 sumRange()\nsumRange(0, 2) -> 1\nsumRange(2, 5) -> -1\nsumRange(0, 5) -> -3\n\n###说明:\n你可以假设数组不可变。\n会多次调用 sumRange 方法。\n###解决思路：\n```cpp\n/***\n1.常规思路\n****/\nclass NumArray {\npublic:\n    vector<int> nums;\n    NumArray(vector<int>& nums) {\n        this->nums=nums;\n    }\n    \n    int sumRange(int i, int j) {\n        int sum=0;\n        for(int x=i;x<=j;x++)\n            sum+=this->nums[x];\n        return sum;\n    }\n};\n\n/*****\n2.动态规划\n******/\nclass NumArray {\nprivate:\n    vector<int> sums;\npublic:\n    NumArray(vector<int>& nums) {\n        if(!nums.size()) return ;\n        sums.push_back(nums[0]);\n        for(int i=1; i<nums.size(); i++) {\n            sums.push_back(nums[i]+sums[i-1]);\n        }\n    }\n\n    int sumRange(int i, int j) {\n        int a = i>0?sums[i-1]:0;\n        int b = sums[j];\n        return b-a;\n    }\n};\n```',1),(1561913855573644,0,2,'1570025913174092,1570025913186047','面试50个常见问题回答（包括入坑题必答题！！）','<h3 id=\"h3--50-\"><a name=\"面试50个常见问题回答（包括入坑题必答题！！）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>面试50个常见问题回答（包括入坑题必答题！！）</h3><p>▲基本信息类（21道题）<br><strong>1.自我介绍（看评论区大家聊自我介绍最难）</strong><br>问题分析：这道题主要考察应聘者的逻辑思维、语言表达、自我认知等能力。<br>参考回答：<br>第一，条理清晰，层次分明，突出与岗位要求相吻合的技能、个人所长、行为风格、实际经验等。<br>第二，现场表达必须与个人简历所写保持一致。<br>第三，控制时间，一般不超过 3 分钟。<br>第四，尽量口语化，语言平实可信。<br>▲根据以上的关键点，参考回复：<br>首先，我叫xxx，xxx大学xxx专业毕业，我在学校获得xxx荣誉（或者证书）……这样的信息（基本信息介绍）<br>其次，在工作方面，我在xxx公司实习（或者学校活动），我负责xx工作，为了完成这个工作，我做了xxx努力，最后取得xxx成果，结尾，还可以总结一下通过这次活动或者项目有什么收获。<br>关键点，在做了什么努力这部分要体现做的深度。（利用STAR法则）<br>第三，在大型比赛中取得xxx的成绩，如果没有，可以讲自己参加过的公益类活动，例如支教，敬老院看望爷爷奶奶。(特殊经历亮点加分项)<br>（ps:最好准备一个1分钟自我介绍，一个3-5 分钟自我介绍，多手准备!!）<br>Tips：虽然在这里告诉大家怎么应对的技巧，但是我们不知道面试会发生的情况，所以在面试前一天，一定一定要熟记自我介绍，自己也可以对着镜子模拟面试情景反复刻意练习自我介绍。这样才能保证面试从容，不紧张。</p>\n<p><strong>2.为什么申请这个职位？</strong><br>问题分析：考察候选人的求职动机、求职意向及对岗位的认知能力。<br>参考回答：<br>第一 ，是要突出个人经验和技能与该职位的匹配度相对比较高。<br>第二，提前做功课，仔细查阅用人单位的网站和视频资料，最好是要在应答中提到招聘单位的规模、品牌、知名度、规范性、愿景等等。<br>第三，强调用人单位是适合个人职业发展的平台。<br>Tips：重点突出个人经验和技能与该职位的匹配度。如果之前有与这个单位有直接交往的正面案例，也可以顺便提出来，这是个加分项，说明对方是自己心仪的单位，希望能够加盟这个优秀的团队。</p>\n<p><strong>3.这个职位包括哪些主要职责？</strong><br>问题分析：考察候选人对岗位的认知，如果候选人回答的内容与招聘单位的职责出入较大，说明候选人的经验与该职位不符。<br>参考回答：<br>第一，提前了解招聘岗位的主要职责，如看到的要求比较模糊，则结合以往工作经验，简明扼要来回答。<br>第二，控制时间，一般不超过 3 分钟。<br>第三，回答要逻辑清晰，主次分明，突出重点。<br>Tips：这个时候你如果你分析过岗位职责，熟读岗位职责的话，你会很清楚，有条理，有逻辑的表述出来的。<br>4.对我们单位了解多少？<br>问题分析：考察候选人的求职意愿是否强烈。<br>参考答案：<br>第一，了解招聘单位的历史、规模、品牌、主要的产品或服务，这样才能做到心中有数。<br>第二，还可以加上一句，说自己了解的内容可能不是最新或者最全，希望面试官不要介意，往往能够获得好感。<br>Tips：一定要提前做功课，尽可能地通过招聘单位的官网或个人人际关系等渠道。展示你的长处和公司文化，愿景相匹配，看到你的诚意及加入意愿度。<br>5.最大的优点和弱点<br>问题分析：考察候选人的自我认知能力，个人优点是否符合岗位要求<br>参考建议：<br>第一，不宜说自己没什么优点，恰恰要借这个机会，让面试官了解您的突出优势和长处。<br>第二，不宜说自己没有缺点，只要是人就有缺点，这么说一定会令人反感。<br>第三，介绍优点时，要适当谦虚，可以利用量化的业绩证明自己的优点。<br>介绍缺点时，年轻经验不足、有些着急、对待效率低下的人缺乏耐心等<br>根据以上的关键点，缺点参考回复：<br>首先，我刚毕业，经验方面不足，我会在工作中积极完成工作，积累各方面经验<br>其次，性子急，对待效率低下的人缺乏耐心，但是我平时和别人聊天的时候会控制自己语速和讲话，慢慢培养自己耐心，避免浮躁。（遵循一个原则避重就轻）<br>Tips：利用你的优点改正你的缺点，比如，工作追求细节极致，导致项目无法按时完成，通过时间管理，得以解决。一定不能说对应聘岗位的硬伤的缺点，以及无法弥补的缺点。<br>6.您对经常出差怎么看？<br>问题分析：考察候选人的动力适配度，个人的家庭和身体是否能够配合到强度较大的出差工作。<br>参考答案：<br>第一，如果年纪轻，没有家庭的负累和牵绊，经常出差没有问题，就直接回答没问题，可以接受频繁出差。<br>第二，如果家人需要照顾，不方便经常出差，都可以提前说明困难，大概可以接受怎样的出差频率，不要隐瞒，否则日后难以应对。<br>作者：职研社De圆圆<br>链接：<a href=\"https://www.zhihu.com/question/35953016/answer/611429251\">https://www.zhihu.com/question/35953016/answer/611429251</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n<p>7.三个词语来描述自己（也是评论区讨论的问题！）<br>问题分析：考察候选人自我认知能力等<br>参考回答：<br>适应性强 谦虚好学 责任感强<br>稳重开朗 勤奋努力 结果导向<br>▲根据以上的关键点，参考回复：<br>首先，描述词搭配案例说明，增强说服力<br>eg:<br>责任感强，在做xxx活动或项目，我帮助团队小伙伴，完成工作;为完成工作付出额外的努力等等（关键有事例佐证）<br>Tips：一个诀窍，描述自己的词语时，要说和岗位需要的品质，每个品质后面有案例佐证，加分。<br>8.简要介绍一下最近在读什么书吗？<br>问题分析：考察候选人主动学习的能力和意愿<br>参考回答：<br>第一：简要介绍书名，作者，主要梗概，个人收获及如何运用这个收获于实际工作中，取得了良好的效果，不止一本会更好。<br>第二，直接回答没读过什么书的候选人，基本上不被看好。平时还真应该多多读书，否则真的很容易被淘汰。<br>Tips：不能说假话，假如你说，读了xx书，那么HR会接着问读了这本书的作者及相关介绍，再接着你的收获。有些事真的是你真干过，不然你再多的技巧套路都没用。<br>9.您有哪些业余爱好？<br>问题分析：了解候选人的心态、性格、价值观、责任感等<br>当HR问到兴趣爱好，这时大脑一片空白，一时想不到，拍脑袋回答没什么爱好，或者随便回答，那你就会掉进坑里了。<br>参考回答：<br>第一，常见的爱好无外乎运动、旅游、听音乐、读书等，比如篮球：团队精神，古典音乐、阅读、书法：细心耐心，旅游：适应能力学习能力，演讲：沟通能力，唱歌、舞蹈：性格外向，沟通能力<br>第二，如果有表现突出的文体爱好，例如书法、羽毛球、小提琴、写文章等获得过有关奖项，可以适当加分<br>第三，如果热衷社会公益，参与过某些公益组织，为困难人群提供过无私、积极的帮助的，可以突出介绍，可以给面试官留下更好地印象。<br>▲根据以上的关键点，参考回复：<br>eg1：写与岗位匹配的爱好，假如是应聘文案类（编辑）岗位，你说你喜欢写文章，发表过文章，还获得奖，加分！加分！（没得奖也不怕给HR看写过的文章，体现你是有潜力的）<br>eg2：我喜欢读书，一年读了xx本，收获xxx。<br>Tips：说岗位需求匹配的爱好，有助于工作的爱好；回答要真实，否则HR接着深入一问，容易露馅。<br>10.请您介绍一次失败的经历可以吗？<br>问题分析：了解候选人的情商、韧劲、抗挫折能力、问题分析与解决的能力、组织协调能力、团队协作能力。<br>参考答案：<br>第一，介绍一个最终的确是失败的案例，说明自己是如何认真准备，后来由于不可控的原因。<br>第二，虽采取了很多补救措施，最后还是没能达成目标，但自己认真总结了哪些经验，吸取了哪些教训，如果下次再面对这类问题，就不再会失败了。<br>Tips：在这里重点强调，你的经验总结，可以为下一次提供指导，HR也希望看到你的成长。<br>——————————<br>11.自己在学校属于好学生吗？<br>问题分析：考察候选人如何看待成绩与实际能力。<br>参考答案：<br>第一，如果求职者学习成绩好，可以说：“应该说是的，我的成绩不错，全班排名始终前十。判断一个学生是不是好学生有很多标准，在学校期间我认为成绩是最重要的，思想道德、实践经验、团队精神、沟通能力，其他方面包括也都是很重要的。<br>第二，如果求职者成绩不尽理想，便会说：“我认为是不是一个好学生的标准是多元化的，我的学习成绩还可以，在其他方面我的表现也很突出，比如你实习经历，社会实践 都可以，有经验的招聘者一听就会明白，单位喜欢诚实的求职者。<br>Tips：单位喜欢诚实的求职者，实话实说。<br>12.介意介绍一下您的家庭？<br>问题分析：了解候选人的家庭背景和家庭氛围，以判断候选人的性格、行为方式、工作心态以及家庭的负担。<br>参考回答：<br>第一，简要列举家庭成员，强调家庭和睦，温馨融洽，是自己工作的强大动力。<br>第二，突出家庭成员的良好状态，他们对自己工作的全力支持及自己对家庭的强烈责任感。<br>Tips：强调自己的稳定性，因为HR从求职者家庭背景可以判断出其稳定性和确定性，是否愿意在公司长久发展。<br>13.您怎样看待加班？（入坑题！送命题！！）<br>问题分析：考察候选人的责任心和职业道德。<br>答案五花八门的回答：<br>“我接受一定强度加班”<br>“我不愿意接受无意义加班”<br>“没问题，随时都可以加班”<br>参考回答：<br>第一，任何一家单位都有可能要加班。<br>第二，自身的工作任务没有完成，加班是理所当然的，当然，自己会不断提高专业技能，以尽量减少不必要的加班，之前也是这么做的。<br>第三，如果遇到紧急任务或突发情况时，需要加班，自己会尽己所能，希望能够尽快顺利地完成团队面临的任务。<br>Tips：表现出自己愿意牺牲自己的一部分个人时间，提升个人能力，为公司创造更多利益；明确岗位是否需要经常加班，表明自己态度。<br>14.最欣赏那种性格的人？<br>问题分析：欣赏的性格要么是互补，要么是同类，由此验证候选人的性格特点、行为风格。<br>参考回答：<br>诚实守信、谦虚好学、执行力强。<br>15.您的性格特点能简单介绍一下吗？<br>问题分析：考察候选人的性格是否开朗。<br>参考回答：<br>性格稳重、为人开朗，崇尚合作，强调执行。<br>Tips：描述特点，最好加上事例证明；还要贴合岗位需求的特点来说。<br>作者：职研社De圆圆<br>链接：<a href=\"https://www.zhihu.com/question/35953016/answer/611429251\">https://www.zhihu.com/question/35953016/answer/611429251</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n<p>16.您的座右铭是什么？<br>问题分析：考察候选人的性格是否开朗、观念与心态积极程度。<br>参考回答：<br>最好能反映出自己某种优秀品质。<br>eg:<br>天道酬勤，业精于勤等；行胜于言，知行合一；千里之行始于足下；努力未必成功，但成功需要努力。<br>17.朋友们对你的评价？<br>问题分析：想从侧面了解一下你的性格特点及人际交往能力。<br>参考回答：<br>第一，我的朋友都说我是一个可以信赖的人。因为，我一旦答应别人的事情，就一定会尽力做到。<br>第二，如果很有可能由于各种原因限制做不到，我一般不会轻易许诺。或他们普遍认为我是一个比较随和的人，喜欢换位思考，与不同性格的人都可以友好相处。<br>18.在校担任过干部吗？<br>问题分析：考察候选人社会实践经验，领导力，事业心。<br>参考回答：<br>第一，如果确实有，那就介绍自己带领的团队，自己的主要职责，成功举办了哪些大型活动，受到怎样的好评。<br>第二，如果仅仅是参与了一些活动，没有担任干部，那就可以强调自己如何尽心尽力完成自己的任务的。<br>第三，如果完全没有，就强调自己是如何参与校外社会实践的，或者是在学习方面勤下功夫，获得了那些成绩。<br>19.若我们录用怎样开展工作？<br>问题分析：了解候选人的工作思路。<br>参考回答：<br>第一，首先要尽快熟悉工作环境，确定工作职责和工作任务；<br>第二，明确领导的工作要求，就有关情况开展调研后，制定详细的工作计划并报领导批准；<br>第三，根据工作计划开展工作，并随时向领导请示，发生问题及时协调解决。<br>Tips:不宜回答过于详细和明确。<br>20.怎样看待学历和能力？<br>问题分析:考察候选人的认知能力，尤其是高学历人才对学历的自我认识，不过分自以为是的候选人才会被加分。<br>参考回答：<br>第一，一个人工作能力的高低直接决定其职业发展。<br>第二，学历不是看学了多少知识，而是看你在这个领域上发挥了什么作用，也就是所说的具备什么样的能力，为单位创造了怎样的价值。<br>第三，我会尽快提升自己的专业能力去为单位的发展做出自己的贡献。<br>21.如何适应新环境？<br>问题分析：考察候选人的主动适应能力。<br>参考回答：<br>第一，根据领导指示和工作安排，制定工作计划，提前预备，并按计划完成。<br>第二，多请示并及时汇报，遇到不明白的要虚心向领导和同事请教。抓紧间隙时间，多学习<br>第三，努力提高自己的综合素质和业务水平。可以举例说明，以增加可信度。</p>\n<p>来源：<a href=\"https://www.zhihu.com/question/35953016/answer/611429251\">https://www.zhihu.com/question/35953016/answer/611429251</a></p>\n','2019-07-01 00:57:35','2019-10-05 21:50:18',2,0,1,1,0,'面试,HR','面试50个常见问题回答（包括入坑题必答题！！）\n▲基本信息类（21道题）\n1.自我介绍（看评论区大家聊自我介绍最难）\n问题分析：这道题主要考察应聘者的逻辑思维、语言表达、自我认知等能力。\n参考回答：\n第一，条理清晰，层次分明，突出与岗位要求相吻合的技能、个人所长、行为风格、实际经验等。\n第二，现场表达必须与个人简历所写保持一致。','###面试50个常见问题回答（包括入坑题必答题！！）\n▲基本信息类（21道题）\n**1.自我介绍（看评论区大家聊自我介绍最难）**\n问题分析：这道题主要考察应聘者的逻辑思维、语言表达、自我认知等能力。\n参考回答：\n第一，条理清晰，层次分明，突出与岗位要求相吻合的技能、个人所长、行为风格、实际经验等。\n第二，现场表达必须与个人简历所写保持一致。\n第三，控制时间，一般不超过 3 分钟。\n第四，尽量口语化，语言平实可信。\n▲根据以上的关键点，参考回复：\n首先，我叫xxx，xxx大学xxx专业毕业，我在学校获得xxx荣誉（或者证书）……这样的信息（基本信息介绍）\n其次，在工作方面，我在xxx公司实习（或者学校活动），我负责xx工作，为了完成这个工作，我做了xxx努力，最后取得xxx成果，结尾，还可以总结一下通过这次活动或者项目有什么收获。\n关键点，在做了什么努力这部分要体现做的深度。（利用STAR法则）\n第三，在大型比赛中取得xxx的成绩，如果没有，可以讲自己参加过的公益类活动，例如支教，敬老院看望爷爷奶奶。(特殊经历亮点加分项)\n（ps:最好准备一个1分钟自我介绍，一个3-5 分钟自我介绍，多手准备!!）\nTips：虽然在这里告诉大家怎么应对的技巧，但是我们不知道面试会发生的情况，所以在面试前一天，一定一定要熟记自我介绍，自己也可以对着镜子模拟面试情景反复刻意练习自我介绍。这样才能保证面试从容，不紧张。\n\n**2.为什么申请这个职位？**\n问题分析：考察候选人的求职动机、求职意向及对岗位的认知能力。\n参考回答：\n第一 ，是要突出个人经验和技能与该职位的匹配度相对比较高。\n第二，提前做功课，仔细查阅用人单位的网站和视频资料，最好是要在应答中提到招聘单位的规模、品牌、知名度、规范性、愿景等等。\n第三，强调用人单位是适合个人职业发展的平台。\nTips：重点突出个人经验和技能与该职位的匹配度。如果之前有与这个单位有直接交往的正面案例，也可以顺便提出来，这是个加分项，说明对方是自己心仪的单位，希望能够加盟这个优秀的团队。\n\n**3.这个职位包括哪些主要职责？**\n问题分析：考察候选人对岗位的认知，如果候选人回答的内容与招聘单位的职责出入较大，说明候选人的经验与该职位不符。\n参考回答：\n第一，提前了解招聘岗位的主要职责，如看到的要求比较模糊，则结合以往工作经验，简明扼要来回答。\n第二，控制时间，一般不超过 3 分钟。\n第三，回答要逻辑清晰，主次分明，突出重点。\nTips：这个时候你如果你分析过岗位职责，熟读岗位职责的话，你会很清楚，有条理，有逻辑的表述出来的。\n4.对我们单位了解多少？\n问题分析：考察候选人的求职意愿是否强烈。\n参考答案：\n第一，了解招聘单位的历史、规模、品牌、主要的产品或服务，这样才能做到心中有数。\n第二，还可以加上一句，说自己了解的内容可能不是最新或者最全，希望面试官不要介意，往往能够获得好感。\nTips：一定要提前做功课，尽可能地通过招聘单位的官网或个人人际关系等渠道。展示你的长处和公司文化，愿景相匹配，看到你的诚意及加入意愿度。\n5.最大的优点和弱点\n问题分析：考察候选人的自我认知能力，个人优点是否符合岗位要求\n参考建议：\n第一，不宜说自己没什么优点，恰恰要借这个机会，让面试官了解您的突出优势和长处。\n第二，不宜说自己没有缺点，只要是人就有缺点，这么说一定会令人反感。\n第三，介绍优点时，要适当谦虚，可以利用量化的业绩证明自己的优点。\n介绍缺点时，年轻经验不足、有些着急、对待效率低下的人缺乏耐心等\n根据以上的关键点，缺点参考回复：\n首先，我刚毕业，经验方面不足，我会在工作中积极完成工作，积累各方面经验\n其次，性子急，对待效率低下的人缺乏耐心，但是我平时和别人聊天的时候会控制自己语速和讲话，慢慢培养自己耐心，避免浮躁。（遵循一个原则避重就轻）\nTips：利用你的优点改正你的缺点，比如，工作追求细节极致，导致项目无法按时完成，通过时间管理，得以解决。一定不能说对应聘岗位的硬伤的缺点，以及无法弥补的缺点。\n6.您对经常出差怎么看？\n问题分析：考察候选人的动力适配度，个人的家庭和身体是否能够配合到强度较大的出差工作。\n参考答案：\n第一，如果年纪轻，没有家庭的负累和牵绊，经常出差没有问题，就直接回答没问题，可以接受频繁出差。\n第二，如果家人需要照顾，不方便经常出差，都可以提前说明困难，大概可以接受怎样的出差频率，不要隐瞒，否则日后难以应对。\n作者：职研社De圆圆\n链接：https://www.zhihu.com/question/35953016/answer/611429251\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n7.三个词语来描述自己（也是评论区讨论的问题！）\n问题分析：考察候选人自我认知能力等\n参考回答：\n适应性强 谦虚好学 责任感强\n稳重开朗 勤奋努力 结果导向\n▲根据以上的关键点，参考回复：\n首先，描述词搭配案例说明，增强说服力\neg:\n责任感强，在做xxx活动或项目，我帮助团队小伙伴，完成工作;为完成工作付出额外的努力等等（关键有事例佐证）\nTips：一个诀窍，描述自己的词语时，要说和岗位需要的品质，每个品质后面有案例佐证，加分。\n8.简要介绍一下最近在读什么书吗？\n问题分析：考察候选人主动学习的能力和意愿\n参考回答：\n第一：简要介绍书名，作者，主要梗概，个人收获及如何运用这个收获于实际工作中，取得了良好的效果，不止一本会更好。\n第二，直接回答没读过什么书的候选人，基本上不被看好。平时还真应该多多读书，否则真的很容易被淘汰。\nTips：不能说假话，假如你说，读了xx书，那么HR会接着问读了这本书的作者及相关介绍，再接着你的收获。有些事真的是你真干过，不然你再多的技巧套路都没用。\n9.您有哪些业余爱好？\n问题分析：了解候选人的心态、性格、价值观、责任感等\n当HR问到兴趣爱好，这时大脑一片空白，一时想不到，拍脑袋回答没什么爱好，或者随便回答，那你就会掉进坑里了。\n参考回答：\n第一，常见的爱好无外乎运动、旅游、听音乐、读书等，比如篮球：团队精神，古典音乐、阅读、书法：细心耐心，旅游：适应能力学习能力，演讲：沟通能力，唱歌、舞蹈：性格外向，沟通能力\n第二，如果有表现突出的文体爱好，例如书法、羽毛球、小提琴、写文章等获得过有关奖项，可以适当加分\n第三，如果热衷社会公益，参与过某些公益组织，为困难人群提供过无私、积极的帮助的，可以突出介绍，可以给面试官留下更好地印象。\n▲根据以上的关键点，参考回复：\neg1：写与岗位匹配的爱好，假如是应聘文案类（编辑）岗位，你说你喜欢写文章，发表过文章，还获得奖，加分！加分！（没得奖也不怕给HR看写过的文章，体现你是有潜力的）\neg2：我喜欢读书，一年读了xx本，收获xxx。\nTips：说岗位需求匹配的爱好，有助于工作的爱好；回答要真实，否则HR接着深入一问，容易露馅。\n10.请您介绍一次失败的经历可以吗？\n问题分析：了解候选人的情商、韧劲、抗挫折能力、问题分析与解决的能力、组织协调能力、团队协作能力。\n参考答案：\n第一，介绍一个最终的确是失败的案例，说明自己是如何认真准备，后来由于不可控的原因。\n第二，虽采取了很多补救措施，最后还是没能达成目标，但自己认真总结了哪些经验，吸取了哪些教训，如果下次再面对这类问题，就不再会失败了。\nTips：在这里重点强调，你的经验总结，可以为下一次提供指导，HR也希望看到你的成长。\n——————————\n11.自己在学校属于好学生吗？\n问题分析：考察候选人如何看待成绩与实际能力。\n参考答案：\n第一，如果求职者学习成绩好，可以说：“应该说是的，我的成绩不错，全班排名始终前十。判断一个学生是不是好学生有很多标准，在学校期间我认为成绩是最重要的，思想道德、实践经验、团队精神、沟通能力，其他方面包括也都是很重要的。\n第二，如果求职者成绩不尽理想，便会说：“我认为是不是一个好学生的标准是多元化的，我的学习成绩还可以，在其他方面我的表现也很突出，比如你实习经历，社会实践 都可以，有经验的招聘者一听就会明白，单位喜欢诚实的求职者。\nTips：单位喜欢诚实的求职者，实话实说。\n12.介意介绍一下您的家庭？\n问题分析：了解候选人的家庭背景和家庭氛围，以判断候选人的性格、行为方式、工作心态以及家庭的负担。\n参考回答：\n第一，简要列举家庭成员，强调家庭和睦，温馨融洽，是自己工作的强大动力。\n第二，突出家庭成员的良好状态，他们对自己工作的全力支持及自己对家庭的强烈责任感。\nTips：强调自己的稳定性，因为HR从求职者家庭背景可以判断出其稳定性和确定性，是否愿意在公司长久发展。\n13.您怎样看待加班？（入坑题！送命题！！）\n问题分析：考察候选人的责任心和职业道德。\n答案五花八门的回答：\n“我接受一定强度加班”\n“我不愿意接受无意义加班”\n“没问题，随时都可以加班”\n参考回答：\n第一，任何一家单位都有可能要加班。\n第二，自身的工作任务没有完成，加班是理所当然的，当然，自己会不断提高专业技能，以尽量减少不必要的加班，之前也是这么做的。\n第三，如果遇到紧急任务或突发情况时，需要加班，自己会尽己所能，希望能够尽快顺利地完成团队面临的任务。\nTips：表现出自己愿意牺牲自己的一部分个人时间，提升个人能力，为公司创造更多利益；明确岗位是否需要经常加班，表明自己态度。\n14.最欣赏那种性格的人？\n问题分析：欣赏的性格要么是互补，要么是同类，由此验证候选人的性格特点、行为风格。\n参考回答：\n诚实守信、谦虚好学、执行力强。\n15.您的性格特点能简单介绍一下吗？\n问题分析：考察候选人的性格是否开朗。\n参考回答：\n性格稳重、为人开朗，崇尚合作，强调执行。\nTips：描述特点，最好加上事例证明；还要贴合岗位需求的特点来说。\n作者：职研社De圆圆\n链接：https://www.zhihu.com/question/35953016/answer/611429251\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n16.您的座右铭是什么？\n问题分析：考察候选人的性格是否开朗、观念与心态积极程度。\n参考回答：\n最好能反映出自己某种优秀品质。\neg:\n天道酬勤，业精于勤等；行胜于言，知行合一；千里之行始于足下；努力未必成功，但成功需要努力。\n17.朋友们对你的评价？\n问题分析：想从侧面了解一下你的性格特点及人际交往能力。\n参考回答：\n第一，我的朋友都说我是一个可以信赖的人。因为，我一旦答应别人的事情，就一定会尽力做到。\n第二，如果很有可能由于各种原因限制做不到，我一般不会轻易许诺。或他们普遍认为我是一个比较随和的人，喜欢换位思考，与不同性格的人都可以友好相处。\n18.在校担任过干部吗？\n问题分析：考察候选人社会实践经验，领导力，事业心。\n参考回答：\n第一，如果确实有，那就介绍自己带领的团队，自己的主要职责，成功举办了哪些大型活动，受到怎样的好评。\n第二，如果仅仅是参与了一些活动，没有担任干部，那就可以强调自己如何尽心尽力完成自己的任务的。\n第三，如果完全没有，就强调自己是如何参与校外社会实践的，或者是在学习方面勤下功夫，获得了那些成绩。\n19.若我们录用怎样开展工作？\n问题分析：了解候选人的工作思路。\n参考回答：\n第一，首先要尽快熟悉工作环境，确定工作职责和工作任务；\n第二，明确领导的工作要求，就有关情况开展调研后，制定详细的工作计划并报领导批准；\n第三，根据工作计划开展工作，并随时向领导请示，发生问题及时协调解决。\nTips:不宜回答过于详细和明确。\n20.怎样看待学历和能力？\n问题分析:考察候选人的认知能力，尤其是高学历人才对学历的自我认识，不过分自以为是的候选人才会被加分。\n参考回答：\n第一，一个人工作能力的高低直接决定其职业发展。\n第二，学历不是看学了多少知识，而是看你在这个领域上发挥了什么作用，也就是所说的具备什么样的能力，为单位创造了怎样的价值。\n第三，我会尽快提升自己的专业能力去为单位的发展做出自己的贡献。\n21.如何适应新环境？\n问题分析：考察候选人的主动适应能力。\n参考回答：\n第一，根据领导指示和工作安排，制定工作计划，提前预备，并按计划完成。\n第二，多请示并及时汇报，遇到不明白的要虚心向领导和同事请教。抓紧间隙时间，多学习\n第三，努力提高自己的综合素质和业务水平。可以举例说明，以增加可信度。\n\n来源：https://www.zhihu.com/question/35953016/answer/611429251',1),(1561913932979080,0,2,'1570025913174092','HR通常提的一些面试问题是什么？怎么回答？','<p>1.你最大的缺点<br>问题分析：考察候选人的自我认知能力，个人优点是否符合岗位要求。<br>参考建议：<br>第一，不宜说自己没有缺点，只要是人就有缺点，这么说一定会令人反感。<br>第二，年轻经验不足、缺乏磨炼、有些着急、对待效率低下的人缺乏耐心等<br>根据以上的关键点，缺点参考回复：<br>首先，我刚毕业，经验方面不足，我会在工作中积极完成工作，积累各方面经验<br>其次，性子急，对待效率低下的人缺乏耐心，但是我平时和别人聊天的时候会控制自己语速和讲话，慢慢培养自己耐心，避免浮躁。（遵循一个原则避重就轻）<br>Tips：利用你的优点改正你的缺点，比如，工作追求细节极致，导致项目无法按时完成，通过时间管理，得以解决。一定不能说对应聘岗位的硬伤的缺点，以及无法弥补的缺点。</p>\n<p>2.面试最难：自我介绍<br>问题分析：这道题主要考察应聘者的逻辑思维、语言表达、自我认知等能力。<br>参考建议：<br>第一，条理清晰，层次分明，突出与岗位要求相吻合的技能、个人所长、行为风格、实际经验等。<br>第二，现场表达必须与个人简历所写保持一致。<br>第三，控制时间，一般不超过 3 分钟。<br>第四，尽量口语化，语言平实可信。<br>▲根据以上的关键点，参考回复：<br>首先，我叫xxx，xxx大学xxx专业毕业，我在学校获得xxx荣誉（或者证书）……这样的信息（基本信息介绍）<br>其次，在工作方面，我在xxx公司实习（或者学校活动），我负责xx工作，为了完成这个工作，我做了xxx努力，最后取得xxx成果，结尾，还可以总结一下通过这次活动或者项目有什么收获。<br>关键点，在做了什么努力这部分要体现做的深度。（利用STAR法则）<br>第三，在大型比赛中取得xxx的成绩，如果没有，可以讲自己参加过的公益类活动，例如支教，敬老院看望爷爷奶奶。(特殊经历亮点加分项)<br>（ps:最好准备一个1分钟自我介绍，一个3-5 分钟自我介绍，多手准备!!）<br>Tips：在面试前一天，一定一定要熟记自我介绍，自己也可以对着镜子模拟面试情景反复刻意练习自我介绍。这样才能保证面试从容，不紧张。</p>\n<p>3.面试必答题：谈谈薪酬待遇？<br>问题分析：判断候选人对薪资待遇的要求是否与单位能够提供的标准相匹配。<br>写到这里我就想起自己第一次面试这道问题，我是这样回答的:<br>Q:你期望薪资多少？<br>A:都可以，够在这个城市生活就好……<br>参考建议：<br>第一，每家单位都有自己的薪酬标准。<br>第二，可以先提交一个薪酬区间，一旦被录用，人力资源部一定会有专人与您进行薪酬沟通，到时再友好协商也不晚。<br>Tips：每个单位都有薪资宽带就最低最高界限,评估自己能力及自己生活所需，可以先提交一个薪酬区间，如果你能力强可以往上限靠，如果一般取中间值。<br>▲提示：关于正确提问薪资待遇<br>方法一：不能谈薪资，为什么说不能谈薪资呢？作为一个毕业生，一个初入职场的人的时候，我们不能跟谈薪资，我们只能听薪资，适合我就做，不适合我就走。<br>方法二：谈薪资，首先，你要证明自己的价值。第二，你要让HR认可你的价值。这两点做到了，就可以谈薪资了。</p>\n<p>4.你的兴趣爱好？<br>问题分析：了解候选人的心态、性格、价值观、责任感等<br>当HR问到兴趣爱好，这时大脑一片空白，一时想不到，拍脑袋回答没什么爱好，或者随便回答，那你就会掉进坑里了。<br>参考建议：<br>第一，常见的爱好无外乎运动、旅游、听音乐、读书等，比如篮球：团队精神，古典音乐、阅读、书法：细心耐心，旅游：适应能力学习能力，演讲：沟通能力，唱歌、舞蹈：性格外向，沟通能力<br>第二，如果有表现突出的文体爱好，例如书法、羽毛球、小提琴、写文章等获得过有关奖项，可以适当加分<br>第三，如果热衷社会公益，参与过某些公益组织，为困难人群提供过无私、积极的帮助的，可以突出介绍，可以给面试官留下更好地印象。<br>▲根据以上的关键点，参考回复：<br>eg1：写与岗位匹配的爱好，假如是应聘文案类（编辑）岗位，你说你喜欢写文章，发表过文章，还获得奖，加分！加分！（没得奖也不怕给HR看写过的文章，体现你是有潜力的）<br>eg2：我喜欢读书，一年读了xx本，收获xxx。<br>Tips：说岗位需求匹配的爱好，有助于工作的爱好；回答要真实，否则HR接着深入一问，容易露馅。</p>\n<p>5.介绍未来5年职业规划（必考题！！!）<br>问题分析：考察候选人对自己未来发展的设想、职业生涯的规划能力。<br>除非是目标非常明确的人，或者有多年工作经验的职场人，不然很难回答清楚，那么怎么说才能回答好这个问题呢？<br>不要说“几年当主管”，”几年当经理”毫无意义。<br>参考建议：<br>第一，介绍自己认真思考过这个问题，自己的规划是基于目前的实际情况来设计的。<br>第二，在工作方面，突出自己打算通过积极完成工作任务，积累各方面的经验，让自己成为这个领域的专业人士，也希望有机会能够带领团队，成为优秀的管理者，为单位做出更大贡献，获得双赢。<br>第三，在学习方面，打算在专业领域做进一步学习和研究，将实践经验与专业知识相结合，为自己的职业成长做好铺垫，打好基础。<br>Tips：回答这个问题强调你稳定性，踏实工作的态度，重点在工作技能方面的提升与内在积累，不要描述外在的东西，比如职位，薪资。</p>\n<p>6.面试入坑题：怎样看待加班？<br>问题分析：考察候选人的责任心和职业道德。五花八门的回答：<br>“我不愿意接受无意义加班”<br>“没问题，随时都可以加班”<br>参考建议：<br>第一，任何一家单位都有可能要加班。<br>第二，自身的工作任务没有完成，加班是理所当然的，当然，自己会不断提高专业技能，以尽量减少不必要的加班，之前也是这么做的。<br>第三，如果遇到紧急任务或突发情况时，需要加班，自己会尽己所能，希望能够尽快顺利地完成团队面临的任务。<br>Tips：表现出自己愿意牺牲自己的一部分个人时间，提升个人能力，为公司创造更多利益；明确岗位是否需要经常加班，表明自己态度。</p>\n<p>7.面试陷阱题：希望与怎样的领导共事？<br>一类题：希望与怎样的领导合作？怎样处理与领导的关系？<br>问题分析：考察候选人的人际交往能力、主动适应能力。如果你回答：我希望我的上级比较有经验，能够给饿哦一些帮助，陷阱！这样会暴露自己短处。<br>参考建议：<br>第一，尽量不要提及对领导的具体要求，而应该突出自己会认真向领导学习，尽快熟悉和适应工作环境，主动向领导请教，保质保量完成本职工作。<br>第二，如果有做得不到的地方，会诚恳地向领导请教，可以在哪些地方多多改善。这才是一位职业人作为下属应该秉持的工作态度。<br>Tips：切忌一切围绕工作进行，着重谈论对自己有要求，自身努力的方向，千万不要提及前任领导的缺点。</p>\n<p>8.若领导布置了大量的工作，而完成时间又十分有限，为了完成任务，您怎么办？<br>问题分析：考察候选人的时间管理能力。<br>参考建议：<br>第一，分清任务的轻重缓急，紧急又重要的任务先完成。<br>第二，发动团队其他成员，借力完成。<br>第三，鼓励老人带新人，提高工作效率。<br>Tips：实在是过重，以上方法全部用上了都不行，可以与领导协商，先完成几成，其他不重要的任务可以缓办。</p>\n<p>9.为什么应聘这个岗位？<br>问题分析：考察候选人的求职动机、求职意向及对岗位的认知能力。<br>参考建议：<br>第一 ，是要突出个人经验和技能与该职位的匹配度相对比较高。<br>第二，提前做功课，仔细查阅用人单位的网站和视频资料，最好是要在应答中提到招聘单位的规模、品牌、知名度、规范性、愿景等等。<br>第三，强调用人单位是适合个人职业发展的平台。<br>Tips：重点突出个人经验和技能与该职位的匹配度。如果之前有与这个单位有直接交往的正面案例，也可以顺便提出来，这是个加分项，说明对方是自己心仪的单位，希望能够加盟这个优秀的团队。</p>\n<p>10.面试终极必杀问题：还有什么要问的吗？<br>问题分析：考察候选人的情商，是否对这个公司或者行业很了解，是否用心准备。<br>参考建议：<br>第一，可以问本职岗位工作要求、职责。例如，这个部门人员设置是怎么样的。<br>第二，可以问公司、公司的业务、体系、行业、客户。<br>eg：为了胜任该职位，需要我提前学习哪些技术知识？<br>eg：贵公司业务及战略的未来发展？<br>eg：团队、公司现在面临的最大挑战是什么？<br>Tips：切忌纠缠薪资，如果回答没问题，HR会误会，你对岗位没有太大兴趣。<br>在每道题回答之后，加两字，谢谢！</p>\n<p>来源：<a href=\"https://www.zhihu.com/question/24192778\">https://www.zhihu.com/question/24192778</a></p>\n','2019-07-01 00:58:53','2019-10-05 21:50:09',0,0,1,1,0,'面试','首先，我刚毕业，经验方面不足，我会在工作中积极完成工作，积累各方面经验\n其次，性子急，对待效率低下的人缺乏耐心，但是我平时和别人聊天的时候会控制自己语速和讲话，慢慢培养自己耐心，避免浮躁。（遵循一个原则避重就轻）\nTips：利用你的优点改正你的缺点，比如，工作追求细节极致，导致项目无法按时完成，通过时间管理，得以解决。一定不能说对应聘岗位的硬伤的缺点，以及无法弥补的缺点。','1.你最大的缺点\n问题分析：考察候选人的自我认知能力，个人优点是否符合岗位要求。\n参考建议：\n第一，不宜说自己没有缺点，只要是人就有缺点，这么说一定会令人反感。\n第二，年轻经验不足、缺乏磨炼、有些着急、对待效率低下的人缺乏耐心等\n根据以上的关键点，缺点参考回复：\n首先，我刚毕业，经验方面不足，我会在工作中积极完成工作，积累各方面经验\n其次，性子急，对待效率低下的人缺乏耐心，但是我平时和别人聊天的时候会控制自己语速和讲话，慢慢培养自己耐心，避免浮躁。（遵循一个原则避重就轻）\nTips：利用你的优点改正你的缺点，比如，工作追求细节极致，导致项目无法按时完成，通过时间管理，得以解决。一定不能说对应聘岗位的硬伤的缺点，以及无法弥补的缺点。\n\n\n2.面试最难：自我介绍\n问题分析：这道题主要考察应聘者的逻辑思维、语言表达、自我认知等能力。\n参考建议：\n第一，条理清晰，层次分明，突出与岗位要求相吻合的技能、个人所长、行为风格、实际经验等。\n第二，现场表达必须与个人简历所写保持一致。\n第三，控制时间，一般不超过 3 分钟。\n第四，尽量口语化，语言平实可信。\n▲根据以上的关键点，参考回复：\n首先，我叫xxx，xxx大学xxx专业毕业，我在学校获得xxx荣誉（或者证书）……这样的信息（基本信息介绍）\n其次，在工作方面，我在xxx公司实习（或者学校活动），我负责xx工作，为了完成这个工作，我做了xxx努力，最后取得xxx成果，结尾，还可以总结一下通过这次活动或者项目有什么收获。\n关键点，在做了什么努力这部分要体现做的深度。（利用STAR法则）\n第三，在大型比赛中取得xxx的成绩，如果没有，可以讲自己参加过的公益类活动，例如支教，敬老院看望爷爷奶奶。(特殊经历亮点加分项)\n（ps:最好准备一个1分钟自我介绍，一个3-5 分钟自我介绍，多手准备!!）\nTips：在面试前一天，一定一定要熟记自我介绍，自己也可以对着镜子模拟面试情景反复刻意练习自我介绍。这样才能保证面试从容，不紧张。\n\n\n3.面试必答题：谈谈薪酬待遇？\n问题分析：判断候选人对薪资待遇的要求是否与单位能够提供的标准相匹配。\n写到这里我就想起自己第一次面试这道问题，我是这样回答的:\nQ:你期望薪资多少？\nA:都可以，够在这个城市生活就好……\n参考建议：\n第一，每家单位都有自己的薪酬标准。\n第二，可以先提交一个薪酬区间，一旦被录用，人力资源部一定会有专人与您进行薪酬沟通，到时再友好协商也不晚。\nTips：每个单位都有薪资宽带就最低最高界限,评估自己能力及自己生活所需，可以先提交一个薪酬区间，如果你能力强可以往上限靠，如果一般取中间值。\n▲提示：关于正确提问薪资待遇\n方法一：不能谈薪资，为什么说不能谈薪资呢？作为一个毕业生，一个初入职场的人的时候，我们不能跟谈薪资，我们只能听薪资，适合我就做，不适合我就走。\n方法二：谈薪资，首先，你要证明自己的价值。第二，你要让HR认可你的价值。这两点做到了，就可以谈薪资了。\n\n\n4.你的兴趣爱好？\n问题分析：了解候选人的心态、性格、价值观、责任感等\n当HR问到兴趣爱好，这时大脑一片空白，一时想不到，拍脑袋回答没什么爱好，或者随便回答，那你就会掉进坑里了。\n参考建议：\n第一，常见的爱好无外乎运动、旅游、听音乐、读书等，比如篮球：团队精神，古典音乐、阅读、书法：细心耐心，旅游：适应能力学习能力，演讲：沟通能力，唱歌、舞蹈：性格外向，沟通能力\n第二，如果有表现突出的文体爱好，例如书法、羽毛球、小提琴、写文章等获得过有关奖项，可以适当加分\n第三，如果热衷社会公益，参与过某些公益组织，为困难人群提供过无私、积极的帮助的，可以突出介绍，可以给面试官留下更好地印象。\n▲根据以上的关键点，参考回复：\neg1：写与岗位匹配的爱好，假如是应聘文案类（编辑）岗位，你说你喜欢写文章，发表过文章，还获得奖，加分！加分！（没得奖也不怕给HR看写过的文章，体现你是有潜力的）\neg2：我喜欢读书，一年读了xx本，收获xxx。\nTips：说岗位需求匹配的爱好，有助于工作的爱好；回答要真实，否则HR接着深入一问，容易露馅。\n\n\n5.介绍未来5年职业规划（必考题！！!）\n问题分析：考察候选人对自己未来发展的设想、职业生涯的规划能力。\n除非是目标非常明确的人，或者有多年工作经验的职场人，不然很难回答清楚，那么怎么说才能回答好这个问题呢？\n不要说“几年当主管”，\"几年当经理\"毫无意义。\n参考建议：\n第一，介绍自己认真思考过这个问题，自己的规划是基于目前的实际情况来设计的。\n第二，在工作方面，突出自己打算通过积极完成工作任务，积累各方面的经验，让自己成为这个领域的专业人士，也希望有机会能够带领团队，成为优秀的管理者，为单位做出更大贡献，获得双赢。\n第三，在学习方面，打算在专业领域做进一步学习和研究，将实践经验与专业知识相结合，为自己的职业成长做好铺垫，打好基础。\nTips：回答这个问题强调你稳定性，踏实工作的态度，重点在工作技能方面的提升与内在积累，不要描述外在的东西，比如职位，薪资。\n\n\n6.面试入坑题：怎样看待加班？\n问题分析：考察候选人的责任心和职业道德。五花八门的回答：\n“我不愿意接受无意义加班”\n“没问题，随时都可以加班”\n参考建议：\n第一，任何一家单位都有可能要加班。\n第二，自身的工作任务没有完成，加班是理所当然的，当然，自己会不断提高专业技能，以尽量减少不必要的加班，之前也是这么做的。\n第三，如果遇到紧急任务或突发情况时，需要加班，自己会尽己所能，希望能够尽快顺利地完成团队面临的任务。\nTips：表现出自己愿意牺牲自己的一部分个人时间，提升个人能力，为公司创造更多利益；明确岗位是否需要经常加班，表明自己态度。\n\n\n7.面试陷阱题：希望与怎样的领导共事？\n一类题：希望与怎样的领导合作？怎样处理与领导的关系？\n问题分析：考察候选人的人际交往能力、主动适应能力。如果你回答：我希望我的上级比较有经验，能够给饿哦一些帮助，陷阱！这样会暴露自己短处。\n参考建议：\n第一，尽量不要提及对领导的具体要求，而应该突出自己会认真向领导学习，尽快熟悉和适应工作环境，主动向领导请教，保质保量完成本职工作。\n第二，如果有做得不到的地方，会诚恳地向领导请教，可以在哪些地方多多改善。这才是一位职业人作为下属应该秉持的工作态度。\nTips：切忌一切围绕工作进行，着重谈论对自己有要求，自身努力的方向，千万不要提及前任领导的缺点。\n\n\n8.若领导布置了大量的工作，而完成时间又十分有限，为了完成任务，您怎么办？\n问题分析：考察候选人的时间管理能力。\n参考建议：\n第一，分清任务的轻重缓急，紧急又重要的任务先完成。\n第二，发动团队其他成员，借力完成。\n第三，鼓励老人带新人，提高工作效率。\nTips：实在是过重，以上方法全部用上了都不行，可以与领导协商，先完成几成，其他不重要的任务可以缓办。\n\n\n9.为什么应聘这个岗位？\n问题分析：考察候选人的求职动机、求职意向及对岗位的认知能力。\n参考建议：\n第一 ，是要突出个人经验和技能与该职位的匹配度相对比较高。\n第二，提前做功课，仔细查阅用人单位的网站和视频资料，最好是要在应答中提到招聘单位的规模、品牌、知名度、规范性、愿景等等。\n第三，强调用人单位是适合个人职业发展的平台。\nTips：重点突出个人经验和技能与该职位的匹配度。如果之前有与这个单位有直接交往的正面案例，也可以顺便提出来，这是个加分项，说明对方是自己心仪的单位，希望能够加盟这个优秀的团队。\n\n\n10.面试终极必杀问题：还有什么要问的吗？\n问题分析：考察候选人的情商，是否对这个公司或者行业很了解，是否用心准备。\n参考建议：\n第一，可以问本职岗位工作要求、职责。例如，这个部门人员设置是怎么样的。\n第二，可以问公司、公司的业务、体系、行业、客户。\neg：为了胜任该职位，需要我提前学习哪些技术知识？\neg：贵公司业务及战略的未来发展？\neg：团队、公司现在面临的最大挑战是什么？\nTips：切忌纠缠薪资，如果回答没问题，HR会误会，你对岗位没有太大兴趣。\n在每道题回答之后，加两字，谢谢！\n\n来源：https://www.zhihu.com/question/24192778',1),(1561914017428453,0,2,'1570025913174092','HR面必问的18个问题，这些问题你都会答吗？','<p>1.你有什么兴趣爱好？<br>分析：你以为面试官问你兴趣爱好只是想跟你闲聊找话题吗?Too Simple!从兴趣爱好入手可以对人才进行全面的评估。表现出一个工作狂形象，或者只是喜欢刷微博微信等对工作毫无帮助的社交狂人，是很难获得好感的。</p>\n<p>✕ 错误回答：<br>范例1：我工作太忙了，实在没时间发展什么兴趣爱好。<br>范例2：我喜欢看电视剧，和闺蜜喝下午茶，还喜欢研究星座……</p>\n<p>✔正确回答：<br>根据你应聘的职位酌情回答你的爱好。如果你应聘设计师，那你肯定热爱画画和与艺术有关的活动;如果你应聘一个高管职位，那么在徒步旅行的团体中充当积极活跃的角色，肯定证明你具有团队号召力。当然，这些都要建立在实话实说的基础上。</p>\n<p>2.你未来五年的职业规划是什么？<br>分析：类似这样职场规划类的问题，HR最核心的关注点有三个：1.自我认识：你对自己是否了解，了解的靠谱吗?2.动机和价值观：你是否能接受我们并不一定能给你公平的职业发展机会这个现实？3.组织承诺：你到底能在我们这踏实干几年？</p>\n<p>✕ 错误回答：<br>我不知道。我想养活自己先，尽力做好本职工作，希望在<em>年内达到什么职位，</em>年内做到管理层，收入要翻几倍（虽然说得都是实在话，不过并不是hr想要的回答）</p>\n<p>✔正确回答：<br>范例1：“先做好本职工作，争取让自己的专业水平得到提升，同时多学习管理知识，等待公司有合适机会的时候争取得到职位职级的提升。长远来看，希望自己的工作能为公司创造价值，并在自己擅长的领域实现自我的职业理想。”</p>\n<p>范例2：“感谢你提出这么深刻的问题。我的兴趣是×××，优势是×××，因此我选择了×××行业职位，这是一个可以把我的兴趣和工作结合起来的行业，是我非常喜欢的，所以会很用心对待×××岗位，持续学到更多的知识，后续可以在XXX行业/XXX岗位独当一面独立负责XXXX事务,解决XXXX问题。”</p>\n<p>评论：求职者要综合考虑到自己的兴趣、技能，职业的目标，以及为实现目标所需要的计划。关于未来的规划，不要说外在的职位和收入，尽量说内在的积累和成长。好的回答，既能看到你有事业心(成就动机)，又能看到你有平和的心态，不用担心你一言不合就裸辞。</p>\n<p>3 .你觉得自己有什么缺点？<br>分析：这个问题在各行各业的面试中经常出现，尤其是注重与人打交道的行业，出现频率还是比较高的，这个问题主要是考察应聘者的自我认知以及性格是否适合公司文化。同时，这类问题也是需要大家提前准备的，千万不要在临场的时候不经大脑的说出一些让自己追悔莫及的答案。</p>\n<p>✕ 错误回答：<br>范例1：我觉得自己没什么缺点，一定要说的话就是特别爱加班，不注意身体……<br>范例2：我最大的缺点是太拼了，不懂得平衡工作和生活，之前熬夜加班，身体吃不消就病倒了……<br>范例3：我最大的缺点是智商有余情商不足，不太会察言观色<br>范例4：我觉得我最大的缺点就是善良，比较容易心软……</p>\n<p>评论：太老实和太虚伪的都出局!HR问你的缺点，并非是要你深刻剖析自己痛定思痛，而是为了考察这个人才是否具有自知之明的同时又有扬长避短的能力，换句话说，就是看你“够不够机智”。</p>\n<p>首先，要知道哪些是雷区，是一定不能说的缺点，比如：懒、脾气古怪、不喜欢合作等等;在大雷区下，还有一些小雷区，就是针对特定职业的。如果你应聘的是会计，你就不能说自己不拘小节;如果你应聘销售，就不能说自己缺点是内向、不善言辞;如果你是设计师，不能说自己缺乏创新精神等等。其次，不要去谈和工作不相关的缺点，比如洁癖、厨艺不好、挑食等等。最后，不要说那些无法改善的缺点，比如一看书就困、算数必须用计算器，这种缺点本身很正常，要是每个人的缺点都能改善都成完人了，但是在面试里拿出来说就是你的不对了。</p>\n<p>✔正确回答：<br>范例1： 喜欢追求细节导致项目/作业未能按期完成。通过时间管理能力改变工作方式，先完成框架再改善细节得以解决。</p>\n<p>范例2：不知如何拒绝，同事要求帮忙一概揽下，影响自身工作进度。通过多任务处理能力设定优先顺序，以该优先顺序表向求助同事展示自己手上工作，并给其一个自己在何时可以给予帮助的时间估计，让求助人自行决定是否求助，问题解决。</p>\n<p>范例3：我做任何事情都需要提前规划好，我也会按照自己的项目日程开展工作，这样的工作方式让我做事情的时候很有信心，而不会有焦虑感。(开始说缺点了:)但是如果一个任务的目标过于模糊，或者我的项目团队其他成员过于缺乏计划性，也会让我受不了。无论是工作中还是生活中，所以我的一些没有计划性的朋友往往说我是活在日历上的人，我的男(女)朋友也会觉得有时候我过于苛求，有时候这也给我带来很多烦恼，比如出行计划的安排他们往往觉得我安排的过细和缺乏弹性。</p>\n<p>范例4：自己的成就动机比较高，让你总有冲动去调整更高的挑战与目标。当领导交给你一份工作，无论因为组织内部如流程、授权的原因，还是个人的能力原因，没有完成的，(开始说缺点了:)你就会很沮丧，很不开心，感觉到很受挫。你就很羡慕那些在工作中无论遇到什么挫败感，总能保持心如止水的人，我希望自己努力掌握心理自我调适的能力。(这里要说的适度，不要太过分说)</p>\n<p>评论：建议实话实说你确实存在的缺点，同时表明这个缺点正在改正中，最好的方式是说缺点的同时能带出一个优点。举个例子，说自己凡事爱钻牛角尖，有的时候会因为一个项目策划和同事争论很久(带出优点：爱工作，有坚持)，但是后来发现其实各有各的道理，现在正在努力学习加强和其他同事的沟通(缺点正在改正)。</p>\n<p>4.你觉得自己有什么优点？<br>分析：对这个问题，没经验的应届生求职者往往急于表现自己的优点，恨不得把从小到大所获取的荣誉奖项统统报出来。其实，考官对求职者的回答只关注两点。第一，求职者没有撒谎，而是真实地阐述了自己的优点。第二，他所阐述的优点，恰好是这个职位所需要的素质。</p>\n<p>✕ 错误回答：<br>范例1：我好像没什么优点……</p>\n<p>范例2：我有很强的时间管理能力，做事有条理，效率很高，并能出色的完成工作，我对此充满自豪感。</p>\n<p>范例3：我最大的优点就是有耐心，对于枯燥的工作能够耐心地一遍又一遍重复做。</p>\n<p>范例4：我最大的优点就是认真负责，领导交给我的任务我都能按时完成，并且得到领导的表扬与认可。</p>\n<p>评论：优点是一个相对好回答的问题，每一个人身上都有很多优点，比如细心、适应能力强、善于学习等等。需要提醒大家的是，要尽可能说一些和工作相关的优点，比如孝顺、体贴之类的就不要说了; 切记的是，一定要举例子啊同学们。觉得自己还不错的优点，然后讲一段别太长又让人感觉还算真实的故事，就OK了，不需要多出彩，但至少不要为自己减分就好。</p>\n<p>✔正确回答：<br>范例1：我比较有条理。<br>上大学时别的同学都喜欢借我的笔记，我的个人物品和工作文件都很有规律，我不在办公室的时候，同事们很容易就能找到他们想要的文件，包括电脑上的文件。我觉得有条理是一种习惯，只要坚持每个人都可以做到。</p>\n<p>范例2：我做事很有计划性。<br>在生活方面，比如说，在要去超市买东西之前，我一定会列一个购物清单，把需要买的东西全记在纸上。以后每买一样就勾掉一样，这样不会忘记要买的物品，也不会在超市里面瞎逛，而且还能够节约很多时间和金钱。在工作方面，在每一天的早晨，我都会思考今天该做些什么，然后列一张日程表，之后，就按这些表来做事，生活就会变得井然有序了。我有一本形影不离的工作日记，每天早晨，我都会把前一天写好的工作计划再翻看一遍，而在一天的工作结束后，他要对这一天的工作进行总结，同时把下一天的计划再做出来。</p>\n<p>范例3：我真的觉得自己人缘很好。<br>我喜欢帮助别人，让别人快乐。我和陌生人沟通毫无障碍，因为我知道如何与陌生人谈论他们感兴趣的话题。这也是这个岗位吸引我的地方之一，因为我知道这个岗位十分注重对客户的服务，我相信自己可以胜任。</p>\n<p>范例4：我比较善于带领别人一起工作。<br>我担任过班长，学生会干部，从无到有创建了系青年志愿者组织，还创建了一个很大的IT社团萤火虫俱乐部。同学们都说和我一起工作干劲很高，我想最主要的原因是因为我善于调动每个人的积极性。我觉得一个人无论才能大小，都希望能肩负一定的责任，所以在团队工作中，我十分重视让每个人都能展示自己的才能。</p>\n<p>评论：在回答这个问题的时候，要遵从以下步骤：(1)找出自己的三至五个优点;(2)每个优点找出N多个例子， 举例最好来自学习、工作和生活等三个方面， 而不是仅只来自一个方面;(3)在这三到五个优点之中， 精选出一两个和所申请职位最吻合的优点。</p>\n<p> 5.你在工作中遇到最困难的是什么？如何解决的？<br>分析：这是考察人的实际问题解决的能力及流程。工作遇到问题是常见的现象，不遇到问题才不正常。我们应该冷静合理的分析问题，才能更好的解决问题。</p>\n<p>✕ 错误回答：<br>暂时还没遇到过。</p>\n<p>✔正确回答：<br>曾经我遇到过×××问题。首先，我会对这个困难工作进行适当的分析，找出难的原因是什么?然后，我会向身边有经验的同事或朋友请教，如果是原理方面的问题的话，同时也会向书本求知。这是其一途径。其二的话，我也会向我的领导请教，领导之所以会成为我的领导，就是因为在处理问题方面的经验、方式和方法比较出色，我会虚心学习。最后，对待这个困难问题，我会及时总结。以备下次碰到类似的问题能够予以很好的解决。</p>\n<p>评论：很多工作究竟怎么执行，只有真正投入进去才会知道，很多障碍也是只有执行者才能了解。这个问题要怎么回答呢?最好的方式就是跟其他涉及到具体工作的问题一起，别太夸张，诚实一点。做过什么，结果如何，遇到过什么困难，如何克服，不要讲任何自己没有把握的东西。</p>\n<p>6.公司为什么要聘用你？<br>分析：HR的目的：考核求职者换位思考的能力，能否站在公司的立场考虑问题，也进一步考核求职者对岗位和自我的认知程度。</p>\n<p>回答要点：<br>根据岗位要求和面试官之前的问题分析岗位需要什么样的人;<br>强调自己基本符合要求;<br>强调自己非常想加入公司，可以适当地恭维一下公司;<br>可以说如果我应聘成功，我将带给公司带来什么(具体结合岗位和个人说)。</p>\n<p>✔正确回答：<br>我认为公司需要一个xx的人。我具备xxx能力，符合公司的岗位要求，我非常期待能加入公司，通过自己的努力与公司一起成长。成为公司xx领域未来的专家!</p>\n<p>评论：任何公司都希望找到一个符合岗位要求的人，同时也希望求职者对公司有足够的了解。</p>\n<p>7.作为应届毕业生，你将如何胜任工作？<br>分析：HR的目的：这是典型的下马威题，也算是简单的压力面试。重点考核的是求职者的心态，有无胜任工作的思路和自信度，以及责任心。</p>\n<p>回答要点：<br>正视自己没有经验，但这并不是劣势;<br>集合岗位要求强调自己的能力以及责任心;<br>强调自己的拥有其他人没有的优势;<br>强调自己是潜力股。</p>\n<p>✔正确回答：<br>的确如您所说我确实欠缺经验，但这也会是我的优势，我会毫无保留的学习，投入我的热情，大学期间我争取到两次机会在这个行业里实习，结合理论知识，通过实践积累一定的经验，诚然这经验不足以和工作过的人比，但我确定喜欢这份工作，我做了充足的准备。同时我的责任心和学习能力以及较勤奋，会帮助我更好的胜任岗位，请您放心，我一定能胜任这个职位，和公司一起成长。</p>\n<p>评论：对于刚毕业的学生，主考官往往会提出这样的问题，面试问题你是应届毕业生，缺乏经验，怎样胜任这项工作。明明知道应届毕业生没有工作经验，却还要问这样的问题，说明主考官并不真正在乎“经验”，而是想考察求职者的应变能力。 求职者在回答这个问题的时候，要告诉主考官这样的信息：你是个诚恳、果敢和敬业的人。工作经验的不足，可以通过发挥你的积极、勤奋的工作态度在最短的时间内弥补。</p>\n<p>8.你期望的薪酬是多少？<br>分析：这个问题只会出现在HR面当中，有可能是第一面，也有可能是最后一面。前者没什么，就是随便问问;后者就表示你已经通过了面试，大概没什么问题了，咱们来聊聊钱这件小事吧，谈得拢就过来上班。但无论是哪一种，很多人都会遇到一个问题：不知道怎么开口。</p>\n<p>回答要点：<br>首先是你要了解这个行业，这个职位的大概工资是多少，最好能知道这家公司的工资是多少;然后根据自己的实力、你对这家公司这份工作的期望值，报价给一个范围。</p>\n<p>评论：怎么开价，取决于你对自己的定位，也取决于你对面试表现的判断。如果你觉得公司正好处于要人的紧迫阶段，而且负责人对你很满意，大可开得高一些。如果不够自信，那按照招聘启事上面的价格开就好了。不要害羞，谈价钱没有什么可害羞的，要捍卫好自己的利益。</p>\n<p> 9.你对加班的看法？<br>分析：实际上好多公司问这个问题，并不证明一定要加班，只是想测试你是否愿意为公司奉献。</p>\n<p>✔正确回答：<br>如果是工作需要我会义不容辞加班，但同时，我也会提高工作效率，减少不必要的加班。</p>\n<p>10.你希望与什么样的上级共事？<br>分析：通过应聘者对上级的“希望”可以判断出应聘者对自我要求的意识，这既上一个陷阱，又是一次机会。最好回避对上级具体的希望，多谈对自己的要求。</p>\n<p>✔正确回答：<br>做为刚步入社会的新人，我应该多要求自己尽快熟悉环境、适应环境，而不应该对环境提出什么要求，只要能发挥我的专长就可以了。</p>\n<p>11.你为什么觉得自己能够在这个职位上取得成就？<br>分析：这是一个相当宽泛的问题，它给求职者提供了一个机会，可以让求职者表明自己的热情和挑战欲。对这个问题的回答将为面试人在判断求职者是否对这个职位有足够的动力和自信心方面提供关键信息。</p>\n<p>✕ 错误回答：<br>我不知道。我擅长做很多事情。如果我能得到并且决定接受这份工作，我确信自己可以把它做得相当好,因为我过去一直都很成功。</p>\n<p>评论：尽管表面上听起来这种回答可以接受，但是它在几个方面都有欠缺。首先，这种语言很无力。像“擅长做很多事情”以及“相当好”之类的话，都无法反映你的进取心，而如果不能表现出足够的进取心，你就很难进入最好的企业。另外，将过去做过的所有事情同这个职位联系起来，这意味着求职者对这一特定职位没有足够的成就欲望和真正的热情。</p>\n<p>✔正确回答：<br>从我的经历来看，这是我的职业生涯中最适合我的一份工作。几年来，我一直在研究这个领域并且关注贵公司，一直希望能有这样的面试机会。我拥有必备的技能（简单讲述一个故事来加以说明），我非常适合这一职位，也确实能做好这份工作。</p>\n<p>评论：这是一个很有说服力的回答，因为它可以告诉面试人，这个求职者拥有足够的技能和知识来完成这项工作。他所讲的故事表明了求职者的技能，也验证了他最初的陈述。最后，求职者表示了“做好这份工作”的愿望，这证明了他具备对这份工作的热情和进取心。</p>\n<p> 12.你最大的长处和弱点分别是什么?这些长处和弱点对你在企业的业绩会有什么样的影响？<br>分析：这个问题的最大陷阱在于，第一个问题实际上是两个问题，而且还要加上一个后续问题。这两个问题的陷阱并不在于你是否能认真地看待自己的长处，也不在于你是否能正确认识自己的弱点。记住，你的回答不仅是向面试人说明你的优势和劣势，也能在总体上表现你的价值观和对自身价值的看法。<br>　　<br>✕ 错误回答：<br>从长处来说，我实在找不出什么突出的方面，我认为我的技能是非常广泛的。至于弱点，我想，如果某个项目时间拖得太久，我可能会感到厌倦。</p>\n<p>评论：这种回答的最大问题在于，求职者实际上是拒绝回答问题的第一部分。对第二部分的回答暗示了求职者可能缺乏热情。另外，基于对这一问题前两个部分的回答，求职者对后面的问题很难再做出令人满意的回答。</p>\n<p>✔ 正确回答：<br>从长处来说，我相信我最大的优点是我有一个高度理性的头脑，能够从混乱中整理出头绪来。我最大的弱点是，对那些没有秩序感的人，可能缺乏足够的耐心。我相信我的组织才能可以帮助企业更快地实现目标，而且有时候，我处理复杂问题的能力也能影响我的同事。<br>　　　<br>评论：这个回答做到了“一箭三雕”。首先，它确实表明了求职者的最大长处。其次，它所表达的弱点实际上很容易被理解为长处。最后，它指出了这个求职者的长处和弱点对企业和其他员工的好处。</p>\n<p>13.你曾经参加过哪些竞争活动？这些活动值得吗？<br>分析：通过调查你经历过的实际竞争场景，可以反映你对竞争环境的适应程度，也可以反映你的自信心。当竞争成为关键因素时，正是讨论小组活动或企业业务的一个绝好机会。</p>\n<p>✕ 错误回答：<br>从本质上说，我是一个竞争性很强的人。我认为，在所有我做过的事情中，我实际上都采取了一种竞争性的态度。毕竟，只有这样你才能在竞争激烈的企业界生存，对吧？　　</p>\n<p>评论： 这样的求职者阅读了太多关于鲨鱼和汉斯之类的故事，他这样回答让人感觉在企业界不是你死就是我活。尽管企业界是高度竞争的，但是企业中的人憎恨别人把自己看成是凶猛的梭子鱼。　</p>\n<p>✔ 正确回答：<br>我喜欢小组运动，我一直都尽我所能参加这些活动。我过去经常打篮球，现在有时候也打。同小组一起工作、为实现共同目标而努力、在竞争中争取胜利……这些事情确实非常令人兴奋。<br>　<br>评论：这种回答表明，求职者能够正确看待竞争。这意味着他（她）能够利用竞争力量在竞争中取胜，而不会毁掉同事的工作成果。　</p>\n<p>14.你怎样影响其他人接受你的看法？</p>\n<p>分析：你的回答将告诉面试人，首先，你对影响别人有什么看法。其次，你影响别人的能力究竟有多大。</p>\n<p>✕ 错误回答：<br>一般情况下，这取决于这种想法的价值。如果这是一个好想法而且我所交往的人是通情达理的，那么，一般情况下，让别人接受我的想法不会太难。　<br>　<br>评论： 这种回答的问题在于，它并没有解决实际问题。这个问题实质上问的是你怎样对待那些不赞同你的看法的人。这个回答表明，你愿意在一种和谐的工作环境中工作，不喜欢不和谐的工作氛围。　</p>\n<p>✔ 正确回答：<br>这是多年来我一直非常努力探索的一个领域。对于好的想法，甚至是伟大的想法，人们有时并不接受。我现在认识到这样一个事实，那就是你表达想法的方式同想法本身一样重要。当我试图影响别人时，我一般会假设自己处在他们的位置上，让自己从他们的角度来看待问题。然后我就能够以一种更可能成功的方式向他们陈述我的想法。</p>\n<p>评论：首先，这个回答表明，你理解人际沟通的复杂性，知道使别人改变看法具有一定的难度。其次，这个回答还表明，你知道影响别人时运用策略很重要，而且也能够采用合理的方式说服别人。最后，这个回答还表明，你知道在沟通困难的情况下，沟通方式和沟通内容一样重要。</p>\n<p>15.你大学成绩有没有挂过科？<br>分析：HR问这个问题并不表示公司很看重你的学习成绩，关键是看你的态度。</p>\n<p>回答要点：<br>1.承认自己挂科，是自己的错。<br>2.但是，自己没有放弃，及时的补救，例如，重修以高分通过，后面拿过奖学金，参加过国际比赛。<br>3.最后来点鸡汤：一帆风顺的人生固然好，但是挫折才是人生的常态，从困难中跌倒的自己是一个不服输并且不怕失败的人，自己更有信心胜任贵公司的岗位。</p>\n<p>16.你的好友怎样评价你？</p>\n<p>分析： 通过这个问题可以了解求职者的个性。这个问题看起来与求职者的潜能无关，但它反映了一种趋势，那就是企业倾向于雇用有高尚道德标准和高超技能的人。</p>\n<p>✕ 错误回答：<br>我认为他们会说我是一个有趣的人。对我最恰当的评价就是，我喜欢努力工作和尽情娱乐。</p>\n<p>评论：这种回答听起来似乎无懈可击，但是它却存在几个问题。首先，这种回答并没有对所提问题做出答复，还会让面试人怀疑求职者没有亲密的朋友。另外，这种回答也会让面试人怀疑“尽情娱乐”的本质，从而有可能提出更多具有杀伤力的问题，比如有关酗酒和吸毒等问题。　</p>\n<p>✔ 正确回答：<br>范例1：我的朋友对我很重要。在与朋友的交往中，最重要的是，彼此之间有互相依赖的感觉。我们都很忙，并不能经常会面，但在我可以称为亲密朋友的几个人中，我们都知道，大家随时可以互相依赖。</p>\n<p>范例2：我的朋友都说我是一个可以信赖的人。因为，我一旦答应别人的事情，就一定会做到。如果我做不到，我就不会轻易许诺。</p>\n<p>范例3：我觉得我是一个比较随和的人，与不同的人都可以友好相处。在我与人相处时，我总是能站在别人的角度考虑问题。</p>\n<p>评论：这种回答反映了一种成熟感，如今的企业非常重视这种感觉。求职者的优良素质和对少数几个朋友的重视，都可以表明求职者的心理素质相当稳定。有关的故事听起来也必须真实，如果不真实就不要使用——因为这不会奏效。</p>\n<p>17.你有男/女朋友吗？<br>分析：如果这个问题是在一开始就涉及说明公司比较在乎，适龄女青年有可能在这个问题上被扣分。如果留到最后才问，常只是想对你有比较充分而全面的了解。实话实说就好，显得过份扭捏或是抗拒只会让hr留下不好的印象。</p>\n<p>✔正确回答：<br>范例1：“我还没有男朋友，没考虑这件事。”</p>\n<p>范例2：“我有男朋友，我们都来自大城市，父母也比较开明，我们已经确定了，先好好工作几年，28岁左右再结婚。”</p>\n<p>范例3：“我和男朋友打算买房子后再结婚。过几年再生孩子。”</p>\n<p>范例4：“我希望我用3-4年的时间在职业上打基础(说自己想达成的目标)，之后再考虑结婚的事情。”</p>\n<p>评论：<br>真实回答就好，这个是人之常情，如果真的要规避，那么在人员筛选前期，只要是适龄女青年即便未婚未孕也都是危险的，其实只要你能表达对工作的态度，自己有平衡好生活和工作的能力就好。</p>\n<p>还有你要知道很多公司也都是不支持办公室恋情的真正的重点在于你对待工作的态度，而不是这个问题本身。</p>\n<p>问你有没有男女朋友，1是看你短期内会不会有结婚的打算，2是看你三观正不正，会不会承担责任。你回答有，hr会考虑你会不会结婚影不影响工作，如果有这方面趋势他可能就考虑不录用你了。如果回答有过，他问你分手原因是看你会不会承担责任，背不背锅，哪怕是对方劈腿了，你也最好回答是性格不合分开的。回答没有也可以，说出理由，比如现在不想考虑恋爱问题什么的，有逻辑即可。</p>\n<p> 18.你还有什么问题要问我吗？<br>分析：这绝对不是一个可有可无的问题，考察的是你对于这份工作的了解程度以及你的思辨、反应能力。所以不能说“没有问题”，也不建议觉得是“最后一问”就放松自己，打听一些东家长、李家短的八卦，会扣掉印象分哦!</p>\n<p>✕ 错误回答：<br>范例1：没有了。<br>范例2：目前我这个岗位的工资水平是怎么样的？<br>范例3：嘿嘿，我刚才看到咱们总监，很帅的，结婚了吗?<br>范例4：你们公司平常的加班时间多吗?</p>\n<p>✔正确回答：<br>范例1：关于我这个岗位，公司会有培训的机会吗?<br>主要表现你的这种想要努力学习的样子，以及积极上进的态度。这一点来说是HR比较喜欢的，因为他们肯定愿意要一些能够学习，并且想要学习的员工。</p>\n<p>范例2：这个岗位有晋升空间吗?如果有，那么它的晋升方式是怎样的?<br>这关系你在这个岗位的职业发展问题，需要有一定的上升空间，你才会有一直在此公司做下去的想法!而且会让HR看到你的上进心，以及你真的对这个职位很满意。</p>\n<p>范例3：这个职位或所处的部门在公司的定位?<br>可以了解到你这个职位在公司的价值，以及所占的比重!这一点关系到你这个职位的前景发展，和被重视的程度。</p>\n<p>范例4：这个岗位具体需要负责的工作是哪些?<br>其实虽然很多时候岗位的名称都一样，但其实负责的工作内容却大不一样。比如说以前H妹儿也是编辑，但是负责的内容除了什么稿件的写作发布，还要外出采访，跑线下活动。而和现在负责的内容完全不一样。所以这也是你判断自己，适不适合这个职位的一个重要依据。</p>\n','2019-07-01 01:00:17','2019-10-05 21:50:03',1,0,1,1,0,'面试','问你有没有男女朋友，1是看你短期内会不会有结婚的打算，2是看你三观正不正，会不会承担责任。你回答有，hr会考虑你会不会结婚影不影响工作，如果有这方面趋势他可能就考虑不录用你了。如果回答有过，他问你分手原因是看你会不会承担责任，背不背锅，哪怕是对方劈腿了，你也最好回答是性格不合分开的。回答没有也可以，说出理由，比如现在不想考虑恋爱问题什么的，有逻辑即可','1.你有什么兴趣爱好？\n分析：你以为面试官问你兴趣爱好只是想跟你闲聊找话题吗?Too Simple!从兴趣爱好入手可以对人才进行全面的评估。表现出一个工作狂形象，或者只是喜欢刷微博微信等对工作毫无帮助的社交狂人，是很难获得好感的。\n\n✕ 错误回答：\n范例1：我工作太忙了，实在没时间发展什么兴趣爱好。\n范例2：我喜欢看电视剧，和闺蜜喝下午茶，还喜欢研究星座……\n\n✔正确回答：\n根据你应聘的职位酌情回答你的爱好。如果你应聘设计师，那你肯定热爱画画和与艺术有关的活动;如果你应聘一个高管职位，那么在徒步旅行的团体中充当积极活跃的角色，肯定证明你具有团队号召力。当然，这些都要建立在实话实说的基础上。\n\n\n2.你未来五年的职业规划是什么？\n分析：类似这样职场规划类的问题，HR最核心的关注点有三个：1.自我认识：你对自己是否了解，了解的靠谱吗?2.动机和价值观：你是否能接受我们并不一定能给你公平的职业发展机会这个现实？3.组织承诺：你到底能在我们这踏实干几年？\n\n✕ 错误回答：\n我不知道。我想养活自己先，尽力做好本职工作，希望在*年内达到什么职位，*年内做到管理层，收入要翻几倍（虽然说得都是实在话，不过并不是hr想要的回答）\n\n✔正确回答：\n范例1：“先做好本职工作，争取让自己的专业水平得到提升，同时多学习管理知识，等待公司有合适机会的时候争取得到职位职级的提升。长远来看，希望自己的工作能为公司创造价值，并在自己擅长的领域实现自我的职业理想。”\n\n范例2：“感谢你提出这么深刻的问题。我的兴趣是×××，优势是×××，因此我选择了×××行业职位，这是一个可以把我的兴趣和工作结合起来的行业，是我非常喜欢的，所以会很用心对待×××岗位，持续学到更多的知识，后续可以在XXX行业/XXX岗位独当一面独立负责XXXX事务,解决XXXX问题。”\n\n评论：求职者要综合考虑到自己的兴趣、技能，职业的目标，以及为实现目标所需要的计划。关于未来的规划，不要说外在的职位和收入，尽量说内在的积累和成长。好的回答，既能看到你有事业心(成就动机)，又能看到你有平和的心态，不用担心你一言不合就裸辞。\n\n\n3 .你觉得自己有什么缺点？\n分析：这个问题在各行各业的面试中经常出现，尤其是注重与人打交道的行业，出现频率还是比较高的，这个问题主要是考察应聘者的自我认知以及性格是否适合公司文化。同时，这类问题也是需要大家提前准备的，千万不要在临场的时候不经大脑的说出一些让自己追悔莫及的答案。\n\n✕ 错误回答：\n范例1：我觉得自己没什么缺点，一定要说的话就是特别爱加班，不注意身体……\n范例2：我最大的缺点是太拼了，不懂得平衡工作和生活，之前熬夜加班，身体吃不消就病倒了……\n范例3：我最大的缺点是智商有余情商不足，不太会察言观色\n范例4：我觉得我最大的缺点就是善良，比较容易心软……\n\n评论：太老实和太虚伪的都出局!HR问你的缺点，并非是要你深刻剖析自己痛定思痛，而是为了考察这个人才是否具有自知之明的同时又有扬长避短的能力，换句话说，就是看你“够不够机智”。\n\n首先，要知道哪些是雷区，是一定不能说的缺点，比如：懒、脾气古怪、不喜欢合作等等;在大雷区下，还有一些小雷区，就是针对特定职业的。如果你应聘的是会计，你就不能说自己不拘小节;如果你应聘销售，就不能说自己缺点是内向、不善言辞;如果你是设计师，不能说自己缺乏创新精神等等。其次，不要去谈和工作不相关的缺点，比如洁癖、厨艺不好、挑食等等。最后，不要说那些无法改善的缺点，比如一看书就困、算数必须用计算器，这种缺点本身很正常，要是每个人的缺点都能改善都成完人了，但是在面试里拿出来说就是你的不对了。\n\n✔正确回答：\n范例1： 喜欢追求细节导致项目/作业未能按期完成。通过时间管理能力改变工作方式，先完成框架再改善细节得以解决。\n\n范例2：不知如何拒绝，同事要求帮忙一概揽下，影响自身工作进度。通过多任务处理能力设定优先顺序，以该优先顺序表向求助同事展示自己手上工作，并给其一个自己在何时可以给予帮助的时间估计，让求助人自行决定是否求助，问题解决。\n\n范例3：我做任何事情都需要提前规划好，我也会按照自己的项目日程开展工作，这样的工作方式让我做事情的时候很有信心，而不会有焦虑感。(开始说缺点了:)但是如果一个任务的目标过于模糊，或者我的项目团队其他成员过于缺乏计划性，也会让我受不了。无论是工作中还是生活中，所以我的一些没有计划性的朋友往往说我是活在日历上的人，我的男(女)朋友也会觉得有时候我过于苛求，有时候这也给我带来很多烦恼，比如出行计划的安排他们往往觉得我安排的过细和缺乏弹性。\n\n范例4：自己的成就动机比较高，让你总有冲动去调整更高的挑战与目标。当领导交给你一份工作，无论因为组织内部如流程、授权的原因，还是个人的能力原因，没有完成的，(开始说缺点了:)你就会很沮丧，很不开心，感觉到很受挫。你就很羡慕那些在工作中无论遇到什么挫败感，总能保持心如止水的人，我希望自己努力掌握心理自我调适的能力。(这里要说的适度，不要太过分说)\n\n评论：建议实话实说你确实存在的缺点，同时表明这个缺点正在改正中，最好的方式是说缺点的同时能带出一个优点。举个例子，说自己凡事爱钻牛角尖，有的时候会因为一个项目策划和同事争论很久(带出优点：爱工作，有坚持)，但是后来发现其实各有各的道理，现在正在努力学习加强和其他同事的沟通(缺点正在改正)。\n\n\n4.你觉得自己有什么优点？\n分析：对这个问题，没经验的应届生求职者往往急于表现自己的优点，恨不得把从小到大所获取的荣誉奖项统统报出来。其实，考官对求职者的回答只关注两点。第一，求职者没有撒谎，而是真实地阐述了自己的优点。第二，他所阐述的优点，恰好是这个职位所需要的素质。\n\n✕ 错误回答：\n范例1：我好像没什么优点......\n\n范例2：我有很强的时间管理能力，做事有条理，效率很高，并能出色的完成工作，我对此充满自豪感。\n\n范例3：我最大的优点就是有耐心，对于枯燥的工作能够耐心地一遍又一遍重复做。\n\n范例4：我最大的优点就是认真负责，领导交给我的任务我都能按时完成，并且得到领导的表扬与认可。\n\n评论：优点是一个相对好回答的问题，每一个人身上都有很多优点，比如细心、适应能力强、善于学习等等。需要提醒大家的是，要尽可能说一些和工作相关的优点，比如孝顺、体贴之类的就不要说了; 切记的是，一定要举例子啊同学们。觉得自己还不错的优点，然后讲一段别太长又让人感觉还算真实的故事，就OK了，不需要多出彩，但至少不要为自己减分就好。\n\n✔正确回答：\n范例1：我比较有条理。\n上大学时别的同学都喜欢借我的笔记，我的个人物品和工作文件都很有规律，我不在办公室的时候，同事们很容易就能找到他们想要的文件，包括电脑上的文件。我觉得有条理是一种习惯，只要坚持每个人都可以做到。\n\n范例2：我做事很有计划性。\n在生活方面，比如说，在要去超市买东西之前，我一定会列一个购物清单，把需要买的东西全记在纸上。以后每买一样就勾掉一样，这样不会忘记要买的物品，也不会在超市里面瞎逛，而且还能够节约很多时间和金钱。在工作方面，在每一天的早晨，我都会思考今天该做些什么，然后列一张日程表，之后，就按这些表来做事，生活就会变得井然有序了。我有一本形影不离的工作日记，每天早晨，我都会把前一天写好的工作计划再翻看一遍，而在一天的工作结束后，他要对这一天的工作进行总结，同时把下一天的计划再做出来。\n\n范例3：我真的觉得自己人缘很好。\n我喜欢帮助别人，让别人快乐。我和陌生人沟通毫无障碍，因为我知道如何与陌生人谈论他们感兴趣的话题。这也是这个岗位吸引我的地方之一，因为我知道这个岗位十分注重对客户的服务，我相信自己可以胜任。\n\n范例4：我比较善于带领别人一起工作。\n我担任过班长，学生会干部，从无到有创建了系青年志愿者组织，还创建了一个很大的IT社团萤火虫俱乐部。同学们都说和我一起工作干劲很高，我想最主要的原因是因为我善于调动每个人的积极性。我觉得一个人无论才能大小，都希望能肩负一定的责任，所以在团队工作中，我十分重视让每个人都能展示自己的才能。\n\n评论：在回答这个问题的时候，要遵从以下步骤：(1)找出自己的三至五个优点;(2)每个优点找出N多个例子， 举例最好来自学习、工作和生活等三个方面， 而不是仅只来自一个方面;(3)在这三到五个优点之中， 精选出一两个和所申请职位最吻合的优点。\n\n\n 5.你在工作中遇到最困难的是什么？如何解决的？\n分析：这是考察人的实际问题解决的能力及流程。工作遇到问题是常见的现象，不遇到问题才不正常。我们应该冷静合理的分析问题，才能更好的解决问题。\n\n✕ 错误回答：\n暂时还没遇到过。\n\n✔正确回答：\n曾经我遇到过×××问题。首先，我会对这个困难工作进行适当的分析，找出难的原因是什么?然后，我会向身边有经验的同事或朋友请教，如果是原理方面的问题的话，同时也会向书本求知。这是其一途径。其二的话，我也会向我的领导请教，领导之所以会成为我的领导，就是因为在处理问题方面的经验、方式和方法比较出色，我会虚心学习。最后，对待这个困难问题，我会及时总结。以备下次碰到类似的问题能够予以很好的解决。\n\n评论：很多工作究竟怎么执行，只有真正投入进去才会知道，很多障碍也是只有执行者才能了解。这个问题要怎么回答呢?最好的方式就是跟其他涉及到具体工作的问题一起，别太夸张，诚实一点。做过什么，结果如何，遇到过什么困难，如何克服，不要讲任何自己没有把握的东西。\n\n\n6.公司为什么要聘用你？\n分析：HR的目的：考核求职者换位思考的能力，能否站在公司的立场考虑问题，也进一步考核求职者对岗位和自我的认知程度。\n\n回答要点：\n根据岗位要求和面试官之前的问题分析岗位需要什么样的人;\n强调自己基本符合要求;\n强调自己非常想加入公司，可以适当地恭维一下公司;\n可以说如果我应聘成功，我将带给公司带来什么(具体结合岗位和个人说)。\n\n✔正确回答：\n我认为公司需要一个xx的人。我具备xxx能力，符合公司的岗位要求，我非常期待能加入公司，通过自己的努力与公司一起成长。成为公司xx领域未来的专家!\n\n评论：任何公司都希望找到一个符合岗位要求的人，同时也希望求职者对公司有足够的了解。\n\n\n7.作为应届毕业生，你将如何胜任工作？\n分析：HR的目的：这是典型的下马威题，也算是简单的压力面试。重点考核的是求职者的心态，有无胜任工作的思路和自信度，以及责任心。\n\n回答要点：\n正视自己没有经验，但这并不是劣势;\n集合岗位要求强调自己的能力以及责任心;\n强调自己的拥有其他人没有的优势;\n强调自己是潜力股。\n\n✔正确回答：\n的确如您所说我确实欠缺经验，但这也会是我的优势，我会毫无保留的学习，投入我的热情，大学期间我争取到两次机会在这个行业里实习，结合理论知识，通过实践积累一定的经验，诚然这经验不足以和工作过的人比，但我确定喜欢这份工作，我做了充足的准备。同时我的责任心和学习能力以及较勤奋，会帮助我更好的胜任岗位，请您放心，我一定能胜任这个职位，和公司一起成长。\n\n\n评论：对于刚毕业的学生，主考官往往会提出这样的问题，面试问题你是应届毕业生，缺乏经验，怎样胜任这项工作。明明知道应届毕业生没有工作经验，却还要问这样的问题，说明主考官并不真正在乎“经验”，而是想考察求职者的应变能力。 求职者在回答这个问题的时候，要告诉主考官这样的信息：你是个诚恳、果敢和敬业的人。工作经验的不足，可以通过发挥你的积极、勤奋的工作态度在最短的时间内弥补。\n\n\n8.你期望的薪酬是多少？\n分析：这个问题只会出现在HR面当中，有可能是第一面，也有可能是最后一面。前者没什么，就是随便问问;后者就表示你已经通过了面试，大概没什么问题了，咱们来聊聊钱这件小事吧，谈得拢就过来上班。但无论是哪一种，很多人都会遇到一个问题：不知道怎么开口。\n\n回答要点：\n首先是你要了解这个行业，这个职位的大概工资是多少，最好能知道这家公司的工资是多少;然后根据自己的实力、你对这家公司这份工作的期望值，报价给一个范围。\n\n评论：怎么开价，取决于你对自己的定位，也取决于你对面试表现的判断。如果你觉得公司正好处于要人的紧迫阶段，而且负责人对你很满意，大可开得高一些。如果不够自信，那按照招聘启事上面的价格开就好了。不要害羞，谈价钱没有什么可害羞的，要捍卫好自己的利益。\n\n\n 9.你对加班的看法？\n分析：实际上好多公司问这个问题，并不证明一定要加班，只是想测试你是否愿意为公司奉献。\n\n✔正确回答：\n如果是工作需要我会义不容辞加班，但同时，我也会提高工作效率，减少不必要的加班。\n\n\n10.你希望与什么样的上级共事？\n分析：通过应聘者对上级的“希望”可以判断出应聘者对自我要求的意识，这既上一个陷阱，又是一次机会。最好回避对上级具体的希望，多谈对自己的要求。\n\n✔正确回答：\n做为刚步入社会的新人，我应该多要求自己尽快熟悉环境、适应环境，而不应该对环境提出什么要求，只要能发挥我的专长就可以了。\n\n11.你为什么觉得自己能够在这个职位上取得成就？\n分析：这是一个相当宽泛的问题，它给求职者提供了一个机会，可以让求职者表明自己的热情和挑战欲。对这个问题的回答将为面试人在判断求职者是否对这个职位有足够的动力和自信心方面提供关键信息。\n\n✕ 错误回答：\n我不知道。我擅长做很多事情。如果我能得到并且决定接受这份工作，我确信自己可以把它做得相当好,因为我过去一直都很成功。\n\n评论：尽管表面上听起来这种回答可以接受，但是它在几个方面都有欠缺。首先，这种语言很无力。像“擅长做很多事情”以及“相当好”之类的话，都无法反映你的进取心，而如果不能表现出足够的进取心，你就很难进入最好的企业。另外，将过去做过的所有事情同这个职位联系起来，这意味着求职者对这一特定职位没有足够的成就欲望和真正的热情。\n\n✔正确回答：\n从我的经历来看，这是我的职业生涯中最适合我的一份工作。几年来，我一直在研究这个领域并且关注贵公司，一直希望能有这样的面试机会。我拥有必备的技能（简单讲述一个故事来加以说明），我非常适合这一职位，也确实能做好这份工作。\n\n评论：这是一个很有说服力的回答，因为它可以告诉面试人，这个求职者拥有足够的技能和知识来完成这项工作。他所讲的故事表明了求职者的技能，也验证了他最初的陈述。最后，求职者表示了“做好这份工作”的愿望，这证明了他具备对这份工作的热情和进取心。\n\n\n 12.你最大的长处和弱点分别是什么?这些长处和弱点对你在企业的业绩会有什么样的影响？\n分析：这个问题的最大陷阱在于，第一个问题实际上是两个问题，而且还要加上一个后续问题。这两个问题的陷阱并不在于你是否能认真地看待自己的长处，也不在于你是否能正确认识自己的弱点。记住，你的回答不仅是向面试人说明你的优势和劣势，也能在总体上表现你的价值观和对自身价值的看法。\n　　\n✕ 错误回答：\n从长处来说，我实在找不出什么突出的方面，我认为我的技能是非常广泛的。至于弱点，我想，如果某个项目时间拖得太久，我可能会感到厌倦。\n\n评论：这种回答的最大问题在于，求职者实际上是拒绝回答问题的第一部分。对第二部分的回答暗示了求职者可能缺乏热情。另外，基于对这一问题前两个部分的回答，求职者对后面的问题很难再做出令人满意的回答。\n\n✔ 正确回答：\n从长处来说，我相信我最大的优点是我有一个高度理性的头脑，能够从混乱中整理出头绪来。我最大的弱点是，对那些没有秩序感的人，可能缺乏足够的耐心。我相信我的组织才能可以帮助企业更快地实现目标，而且有时候，我处理复杂问题的能力也能影响我的同事。\n　　　\n评论：这个回答做到了“一箭三雕”。首先，它确实表明了求职者的最大长处。其次，它所表达的弱点实际上很容易被理解为长处。最后，它指出了这个求职者的长处和弱点对企业和其他员工的好处。\n\n\n13.你曾经参加过哪些竞争活动？这些活动值得吗？\n分析：通过调查你经历过的实际竞争场景，可以反映你对竞争环境的适应程度，也可以反映你的自信心。当竞争成为关键因素时，正是讨论小组活动或企业业务的一个绝好机会。\n\n✕ 错误回答：\n从本质上说，我是一个竞争性很强的人。我认为，在所有我做过的事情中，我实际上都采取了一种竞争性的态度。毕竟，只有这样你才能在竞争激烈的企业界生存，对吧？　　\n\n评论： 这样的求职者阅读了太多关于鲨鱼和汉斯之类的故事，他这样回答让人感觉在企业界不是你死就是我活。尽管企业界是高度竞争的，但是企业中的人憎恨别人把自己看成是凶猛的梭子鱼。　\n\n✔ 正确回答：\n我喜欢小组运动，我一直都尽我所能参加这些活动。我过去经常打篮球，现在有时候也打。同小组一起工作、为实现共同目标而努力、在竞争中争取胜利……这些事情确实非常令人兴奋。\n　\n评论：这种回答表明，求职者能够正确看待竞争。这意味着他（她）能够利用竞争力量在竞争中取胜，而不会毁掉同事的工作成果。　\n\n\n14.你怎样影响其他人接受你的看法？\n\n分析：你的回答将告诉面试人，首先，你对影响别人有什么看法。其次，你影响别人的能力究竟有多大。\n\n✕ 错误回答：\n一般情况下，这取决于这种想法的价值。如果这是一个好想法而且我所交往的人是通情达理的，那么，一般情况下，让别人接受我的想法不会太难。　\n　\n评论： 这种回答的问题在于，它并没有解决实际问题。这个问题实质上问的是你怎样对待那些不赞同你的看法的人。这个回答表明，你愿意在一种和谐的工作环境中工作，不喜欢不和谐的工作氛围。　\n\n✔ 正确回答：\n这是多年来我一直非常努力探索的一个领域。对于好的想法，甚至是伟大的想法，人们有时并不接受。我现在认识到这样一个事实，那就是你表达想法的方式同想法本身一样重要。当我试图影响别人时，我一般会假设自己处在他们的位置上，让自己从他们的角度来看待问题。然后我就能够以一种更可能成功的方式向他们陈述我的想法。\n\n评论：首先，这个回答表明，你理解人际沟通的复杂性，知道使别人改变看法具有一定的难度。其次，这个回答还表明，你知道影响别人时运用策略很重要，而且也能够采用合理的方式说服别人。最后，这个回答还表明，你知道在沟通困难的情况下，沟通方式和沟通内容一样重要。\n\n\n15.你大学成绩有没有挂过科？\n分析：HR问这个问题并不表示公司很看重你的学习成绩，关键是看你的态度。\n\n回答要点：\n1.承认自己挂科，是自己的错。\n2.但是，自己没有放弃，及时的补救，例如，重修以高分通过，后面拿过奖学金，参加过国际比赛。\n3.最后来点鸡汤：一帆风顺的人生固然好，但是挫折才是人生的常态，从困难中跌倒的自己是一个不服输并且不怕失败的人，自己更有信心胜任贵公司的岗位。\n\n\n\n16.你的好友怎样评价你？\n\n分析： 通过这个问题可以了解求职者的个性。这个问题看起来与求职者的潜能无关，但它反映了一种趋势，那就是企业倾向于雇用有高尚道德标准和高超技能的人。\n\n✕ 错误回答：\n我认为他们会说我是一个有趣的人。对我最恰当的评价就是，我喜欢努力工作和尽情娱乐。\n\n评论：这种回答听起来似乎无懈可击，但是它却存在几个问题。首先，这种回答并没有对所提问题做出答复，还会让面试人怀疑求职者没有亲密的朋友。另外，这种回答也会让面试人怀疑“尽情娱乐”的本质，从而有可能提出更多具有杀伤力的问题，比如有关酗酒和吸毒等问题。　\n\n✔ 正确回答：\n范例1：我的朋友对我很重要。在与朋友的交往中，最重要的是，彼此之间有互相依赖的感觉。我们都很忙，并不能经常会面，但在我可以称为亲密朋友的几个人中，我们都知道，大家随时可以互相依赖。\n\n范例2：我的朋友都说我是一个可以信赖的人。因为，我一旦答应别人的事情，就一定会做到。如果我做不到，我就不会轻易许诺。\n\n范例3：我觉得我是一个比较随和的人，与不同的人都可以友好相处。在我与人相处时，我总是能站在别人的角度考虑问题。\n\n评论：这种回答反映了一种成熟感，如今的企业非常重视这种感觉。求职者的优良素质和对少数几个朋友的重视，都可以表明求职者的心理素质相当稳定。有关的故事听起来也必须真实，如果不真实就不要使用——因为这不会奏效。\n\n\n\n17.你有男/女朋友吗？\n分析：如果这个问题是在一开始就涉及说明公司比较在乎，适龄女青年有可能在这个问题上被扣分。如果留到最后才问，常只是想对你有比较充分而全面的了解。实话实说就好，显得过份扭捏或是抗拒只会让hr留下不好的印象。\n\n✔正确回答：\n范例1：“我还没有男朋友，没考虑这件事。”\n\n范例2：“我有男朋友，我们都来自大城市，父母也比较开明，我们已经确定了，先好好工作几年，28岁左右再结婚。”\n\n范例3：“我和男朋友打算买房子后再结婚。过几年再生孩子。”\n\n范例4：“我希望我用3-4年的时间在职业上打基础(说自己想达成的目标)，之后再考虑结婚的事情。”\n\n评论：\n真实回答就好，这个是人之常情，如果真的要规避，那么在人员筛选前期，只要是适龄女青年即便未婚未孕也都是危险的，其实只要你能表达对工作的态度，自己有平衡好生活和工作的能力就好。\n\n还有你要知道很多公司也都是不支持办公室恋情的真正的重点在于你对待工作的态度，而不是这个问题本身。\n\n问你有没有男女朋友，1是看你短期内会不会有结婚的打算，2是看你三观正不正，会不会承担责任。你回答有，hr会考虑你会不会结婚影不影响工作，如果有这方面趋势他可能就考虑不录用你了。如果回答有过，他问你分手原因是看你会不会承担责任，背不背锅，哪怕是对方劈腿了，你也最好回答是性格不合分开的。回答没有也可以，说出理由，比如现在不想考虑恋爱问题什么的，有逻辑即可。\n\n\n 18.你还有什么问题要问我吗？\n分析：这绝对不是一个可有可无的问题，考察的是你对于这份工作的了解程度以及你的思辨、反应能力。所以不能说“没有问题”，也不建议觉得是“最后一问”就放松自己，打听一些东家长、李家短的八卦，会扣掉印象分哦!\n\n✕ 错误回答：\n范例1：没有了。\n范例2：目前我这个岗位的工资水平是怎么样的？\n范例3：嘿嘿，我刚才看到咱们总监，很帅的，结婚了吗?\n范例4：你们公司平常的加班时间多吗?\n\n✔正确回答：\n范例1：关于我这个岗位，公司会有培训的机会吗?\n主要表现你的这种想要努力学习的样子，以及积极上进的态度。这一点来说是HR比较喜欢的，因为他们肯定愿意要一些能够学习，并且想要学习的员工。\n\n范例2：这个岗位有晋升空间吗?如果有，那么它的晋升方式是怎样的?\n这关系你在这个岗位的职业发展问题，需要有一定的上升空间，你才会有一直在此公司做下去的想法!而且会让HR看到你的上进心，以及你真的对这个职位很满意。\n\n\n范例3：这个职位或所处的部门在公司的定位?\n可以了解到你这个职位在公司的价值，以及所占的比重!这一点关系到你这个职位的前景发展，和被重视的程度。\n\n范例4：这个岗位具体需要负责的工作是哪些?\n其实虽然很多时候岗位的名称都一样，但其实负责的工作内容却大不一样。比如说以前H妹儿也是编辑，但是负责的内容除了什么稿件的写作发布，还要外出采访，跑线下活动。而和现在负责的内容完全不一样。所以这也是你判断自己，适不适合这个职位的一个重要依据。\n\n',1),(1561914117035401,0,1,'1570026120886013','买卖股票的最佳时机','<h2 id=\"h2-u9898u76EEu63CFu8FF0\"><a name=\"题目描述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>题目描述</h2><p>给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。</p>\n<p>如果你最多只允许完成一笔交易（即买入和卖出一支股票），设计一个算法来计算你所能获取的最大利润。</p>\n<p>注意你不能在买入股票前卖出股票。</p>\n<p>示例 1:<br>输入: [7,1,5,3,6,4]<br>输出: 5<br>解释: 在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。<br>     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格。</p>\n<p>示例 2:<br>输入: [7,6,4,3,1]<br>输出: 0<br>解释: 在这种情况下, 没有交易完成, 所以最大利润为 0。</p>\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"com\">#include</span><span class=\"pln\"> </span><span class=\"str\">&lt;iostream&gt;</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"com\">#include</span><span class=\"pln\"> </span><span class=\"str\">&lt;vector&gt;</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"com\">#include</span><span class=\"pln\"> </span><span class=\"str\">&lt;algorithm&gt;</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"kwd\">using</span><span class=\"pln\"> </span><span class=\"kwd\">namespace</span><span class=\"pln\"> std</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"></code></li><li class=\"L6\"><code class=\"lang-cpp\"></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Solution</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"kwd\">public</span><span class=\"pun\">:</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> maxProfit</span><span class=\"pun\">(</span><span class=\"typ\">vector</span><span class=\"str\">&lt;int&gt;</span><span class=\"pun\">&amp;</span><span class=\"pln\"> prices</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> len </span><span class=\"pun\">=</span><span class=\"pln\"> prices</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">();</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">len </span><span class=\"pun\">&lt;</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> </span><span class=\"typ\">Min</span><span class=\"pun\">=</span><span class=\"pln\">prices</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">],</span><span class=\"typ\">Max</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> i</span><span class=\"pun\">=</span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">&lt;</span><span class=\"pln\">len</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">            </span><span class=\"typ\">Max</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> max</span><span class=\"pun\">(</span><span class=\"typ\">Max</span><span class=\"pun\">,</span><span class=\"pln\">prices</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]-</span><span class=\"typ\">Min</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pln\">            </span><span class=\"typ\">Min</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> min</span><span class=\"pun\">(</span><span class=\"typ\">Min</span><span class=\"pun\">,</span><span class=\"pln\">prices</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]);</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"typ\">Max</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> maxProfit2</span><span class=\"pun\">(</span><span class=\"typ\">vector</span><span class=\"str\">&lt;int&gt;</span><span class=\"pun\">&amp;</span><span class=\"pln\"> prices</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> last </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> profit </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">int</span><span class=\"pun\">)</span><span class=\"pln\">prices</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"pun\">++</span><span class=\"pln\">i</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">            last </span><span class=\"pun\">=</span><span class=\"pln\"> max</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> last </span><span class=\"pun\">+</span><span class=\"pln\"> prices</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\"> prices</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]);</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pln\">            profit </span><span class=\"pun\">=</span><span class=\"pln\"> max</span><span class=\"pun\">(</span><span class=\"pln\">profit</span><span class=\"pun\">,</span><span class=\"pln\"> last</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> profit</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"pun\">};</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"typ\">int</span><span class=\"pln\"> main</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> a</span><span class=\"pun\">[</span><span class=\"lit\">6</span><span class=\"pun\">]=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"lit\">7</span><span class=\"pun\">,</span><span class=\"lit\">6</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">,</span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">};</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">vector</span><span class=\"str\">&lt;int&gt;</span><span class=\"pln\"> va</span><span class=\"pun\">(</span><span class=\"pln\">a</span><span class=\"pun\">,</span><span class=\"pln\">a</span><span class=\"pun\">+</span><span class=\"lit\">6</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">Solution</span><span class=\"pln\"> su</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">    printf</span><span class=\"pun\">(</span><span class=\"str\">\"%d\"</span><span class=\"pun\">,</span><span class=\"pln\">su</span><span class=\"pun\">.</span><span class=\"pln\">maxProfit</span><span class=\"pun\">(</span><span class=\"pln\">va</span><span class=\"pun\">));</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pun\">}</span></code></li></ol></pre>\n','2019-07-01 01:01:57','2019-10-05 21:49:56',0,0,1,1,0,'动态规划','如果你最多只允许完成一笔交易（即买入和卖出一支股票），设计一个算法来计算你所能获取的最大利润。','##题目描述\n给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。\n\n如果你最多只允许完成一笔交易（即买入和卖出一支股票），设计一个算法来计算你所能获取的最大利润。\n\n注意你不能在买入股票前卖出股票。\n\n示例 1:\n输入: [7,1,5,3,6,4]\n输出: 5\n解释: 在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。\n     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格。\n\n示例 2:\n输入: [7,6,4,3,1]\n输出: 0\n解释: 在这种情况下, 没有交易完成, 所以最大利润为 0。\n```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\n\nclass Solution {\npublic:\n    int maxProfit(vector<int>& prices) {\n        int len = prices.size();\n        if(len < 1) return 0;\n\n        int Min=prices[0],Max=0;\n        for(int i=1; i<len; i++) {\n            Max = max(Max,prices[i]-Min);\n            Min = min(Min,prices[i]);\n        }\n\n        return Max;\n    }\n    \n    int maxProfit2(vector<int>& prices) {\n        int last = 0, profit = 0;\n        for (int i = 0; i < (int)prices.size() - 1; ++i) {\n            last = max(0, last + prices[i+1] - prices[i]);\n            profit = max(profit, last);\n        }\n        return profit;\n    }\n   \n};\n\nint main() {\n    int a[6]= {7,6,4,3,1};\n    vector<int> va(a,a+6);\n\n    Solution su;\n    printf(\"%d\",su.maxProfit(va));\n}\n```',1),(1561914137145248,0,1,'1561914017459047','AdminArticleController描述','<h2 id=\"h2-u9898u76EEu63CFu8FF0\"><a name=\"题目描述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>题目描述</h2><p>给定仅有小写字母组成的字符串数组 A，返回列表中的每个字符串中都显示的全部字符（包括重复字符）组成的列表。例如，如果一个字符在每个字符串中出现 3 次，但不是 4 次，则需要在最终答案中包含该字符 3 次。<br>你可以按任意顺序返回答案。</p>\n<p>示例 1：<br>输入：[“bella”,”label”,”roller”]<br>输出：[“e”,”l”,”l”]</p>\n<p>示例 2：<br>输入：[“cool”,”lock”,”cook”]<br>输出：[“c”,”o”]</p>\n<p>提示：<br>1 &lt;= A.length &lt;= 100<br>1 &lt;= A[i].length &lt;= 100<br>A[i][j] 是小写字母</p>\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> top</span><span class=\"pun\">.</span><span class=\"pln\">yms</span><span class=\"pun\">.</span><span class=\"pln\">server</span><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">.</span><span class=\"pln\">admin</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">beans</span><span class=\"pun\">.</span><span class=\"pln\">factory</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Autowired</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">.</span><span class=\"pln\">bind</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">PostMapping</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">.</span><span class=\"pln\">bind</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">RequestBody</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">.</span><span class=\"pln\">bind</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">RequestMapping</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">.</span><span class=\"pln\">bind</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">RestController</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> top</span><span class=\"pun\">.</span><span class=\"pln\">yms</span><span class=\"pun\">.</span><span class=\"pln\">server</span><span class=\"pun\">.</span><span class=\"pln\">entity</span><span class=\"pun\">.</span><span class=\"typ\">Article</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> top</span><span class=\"pun\">.</span><span class=\"pln\">yms</span><span class=\"pun\">.</span><span class=\"pln\">server</span><span class=\"pun\">.</span><span class=\"pln\">entity</span><span class=\"pun\">.</span><span class=\"typ\">Result</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> top</span><span class=\"pun\">.</span><span class=\"pln\">yms</span><span class=\"pun\">.</span><span class=\"pln\">server</span><span class=\"pun\">.</span><span class=\"pln\">entity</span><span class=\"pun\">.</span><span class=\"typ\">Tag</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> top</span><span class=\"pun\">.</span><span class=\"pln\">yms</span><span class=\"pun\">.</span><span class=\"pln\">server</span><span class=\"pun\">.</span><span class=\"pln\">entity</span><span class=\"pun\">.</span><span class=\"typ\">TagLinkArticle</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> top</span><span class=\"pun\">.</span><span class=\"pln\">yms</span><span class=\"pun\">.</span><span class=\"pln\">server</span><span class=\"pun\">.</span><span class=\"pln\">entity</span><span class=\"pun\">.</span><span class=\"pln\">article</span><span class=\"pun\">.</span><span class=\"typ\">ArticleListEntity</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> top</span><span class=\"pun\">.</span><span class=\"pln\">yms</span><span class=\"pun\">.</span><span class=\"pln\">server</span><span class=\"pun\">.</span><span class=\"pln\">service</span><span class=\"pun\">.</span><span class=\"typ\">ArticleService</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> top</span><span class=\"pun\">.</span><span class=\"pln\">yms</span><span class=\"pun\">.</span><span class=\"pln\">server</span><span class=\"pun\">.</span><span class=\"pln\">service</span><span class=\"pun\">.</span><span class=\"typ\">CategoryService</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> top</span><span class=\"pun\">.</span><span class=\"pln\">yms</span><span class=\"pun\">.</span><span class=\"pln\">server</span><span class=\"pun\">.</span><span class=\"pln\">service</span><span class=\"pun\">.</span><span class=\"typ\">TagLinkArticleService</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> top</span><span class=\"pun\">.</span><span class=\"pln\">yms</span><span class=\"pun\">.</span><span class=\"pln\">server</span><span class=\"pun\">.</span><span class=\"pln\">service</span><span class=\"pun\">.</span><span class=\"typ\">TagService</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> top</span><span class=\"pun\">.</span><span class=\"pln\">yms</span><span class=\"pun\">.</span><span class=\"pln\">server</span><span class=\"pun\">.</span><span class=\"pln\">utils</span><span class=\"pun\">.</span><span class=\"typ\">DateHelper</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> top</span><span class=\"pun\">.</span><span class=\"pln\">yms</span><span class=\"pun\">.</span><span class=\"pln\">server</span><span class=\"pun\">.</span><span class=\"pln\">utils</span><span class=\"pun\">.</span><span class=\"typ\">IdGenerator</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">ArrayList</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">HashMap</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">List</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Map</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"lit\">@RestController</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"lit\">@RequestMapping</span><span class=\"pun\">(</span><span class=\"str\">\"/admin/article\"</span><span class=\"pun\">)</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">AdminArticleController</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Autowired</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">ArticleService</span><span class=\"pln\"> articleService</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Autowired</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">TagLinkArticleService</span><span class=\"pln\"> tagLinkArticleService</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Autowired</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">CategoryService</span><span class=\"pln\"> categoryService</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Autowired</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">TagService</span><span class=\"pln\"> tagService</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">/***</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"com\">     * 1.使用IdGenerator获取id; 2.作者id由前端传来(authorId); 3.文章分类id由前端传入(articleCategoryId)</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"com\">     *</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"com\">     * 4.tagId使用IdGenerator生成(生成后同时向t_l_a表插入),tag_id传入的数据格式可能是 python,java,c++;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"com\">     *</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"com\">     * 5.title由前台传入; 6.content由前台传入; 7.createdTime和updateTime由后台生成; 8.browseNum默认位0(add时前端传入)</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"com\">     *</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"com\">     * 9.likeNum默认位0(add时前端传入); isPublic默认位1表示公开 0表示私有(前端传入); 10.发布状态publishStates 默认为1表示公开 0表示私有(前端传入);</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"com\">     *</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"com\">     * 11.isDel默认为0表示未删除 1为删除(前台传入); 12.keywords表示检索关键字 为前台传入; 13.markdownDoc由前台传入</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"com\">     * 14.abstractContent 抽象描述 （前台传入）</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"com\">     *</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"com\">     */</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@PostMapping</span><span class=\"pun\">(</span><span class=\"str\">\"/add\"</span><span class=\"pun\">)</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">Result</span><span class=\"pln\"> add</span><span class=\"pun\">(</span><span class=\"lit\">@RequestBody</span><span class=\"pln\"> </span><span class=\"typ\">Article</span><span class=\"pln\"> article</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Result</span><span class=\"pln\"> res</span><span class=\"pun\">=</span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">article </span><span class=\"pun\">!=</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">long</span><span class=\"pln\"> articleId </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">IdGenerator</span><span class=\"pun\">.</span><span class=\"pln\">getArticleId</span><span class=\"pun\">();</span><span class=\"com\">//使用IdGenerator生成16位的id</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">            article</span><span class=\"pun\">.</span><span class=\"pln\">setId</span><span class=\"pun\">(</span><span class=\"pln\">articleId</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">            article</span><span class=\"pun\">.</span><span class=\"pln\">setTagId</span><span class=\"pun\">(</span><span class=\"pln\">handleTag</span><span class=\"pun\">(</span><span class=\"pln\">article</span><span class=\"pun\">.</span><span class=\"pln\">getTagId</span><span class=\"pun\">(),</span><span class=\"pln\">articleId</span><span class=\"pun\">));</span><span class=\"com\">//处理tag信息</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"com\">/*设置创建时间和更新时间*/</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            article</span><span class=\"pun\">.</span><span class=\"pln\">setCreatedTime</span><span class=\"pun\">(</span><span class=\"typ\">DateHelper</span><span class=\"pun\">.</span><span class=\"pln\">getYYYY_MM_DD_HH_MM_SS</span><span class=\"pun\">());</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">            article</span><span class=\"pun\">.</span><span class=\"pln\">setUpdateTime</span><span class=\"pun\">(</span><span class=\"typ\">DateHelper</span><span class=\"pun\">.</span><span class=\"pln\">getYYYY_MM_DD_HH_MM_SS</span><span class=\"pun\">());</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"com\">//执行添加文章信息到数据库操作</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">            articleService</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">article</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">            res </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Result</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">,</span><span class=\"str\">\"add article success\"</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">            res </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Result</span><span class=\"pun\">(</span><span class=\"kwd\">false</span><span class=\"pun\">,</span><span class=\"str\">\"article data is null\"</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code class=\"lang-java\"></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> res</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@RequestMapping</span><span class=\"pun\">(</span><span class=\"str\">\"/update\"</span><span class=\"pun\">)</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">Result</span><span class=\"pln\"> update</span><span class=\"pun\">(</span><span class=\"lit\">@RequestBody</span><span class=\"pln\"> </span><span class=\"typ\">Article</span><span class=\"pln\"> article</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Result</span><span class=\"pln\"> res</span><span class=\"pun\">=</span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">article </span><span class=\"pun\">!=</span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            article</span><span class=\"pun\">.</span><span class=\"pln\">setTagId</span><span class=\"pun\">(</span><span class=\"pln\">handleTag</span><span class=\"pun\">(</span><span class=\"pln\">article</span><span class=\"pun\">.</span><span class=\"pln\">getTagId</span><span class=\"pun\">(),</span><span class=\"pln\">article</span><span class=\"pun\">.</span><span class=\"pln\">getId</span><span class=\"pun\">()));</span><span class=\"com\">//处理tag信息</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">            article</span><span class=\"pun\">.</span><span class=\"pln\">setUpdateTime</span><span class=\"pun\">(</span><span class=\"typ\">DateHelper</span><span class=\"pun\">.</span><span class=\"pln\">getYYYY_MM_DD_HH_MM_SS</span><span class=\"pun\">());</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">            articleService</span><span class=\"pun\">.</span><span class=\"pln\">update</span><span class=\"pun\">(</span><span class=\"pln\">article</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            res </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Result</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">,</span><span class=\"str\">\"update article success\"</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">            res </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Result</span><span class=\"pun\">(</span><span class=\"kwd\">false</span><span class=\"pun\">,</span><span class=\"str\">\"article data is null\"</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> res</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"com\">     * 传入的是数据如 {python,c++,java}</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"com\">     * &lt;p&gt;&lt;/p&gt;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"com\">     * &lt;h2&gt;描述:&lt;/h2&gt;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"com\">     * &lt;p&gt;1.根据传入tag =&gt;{python,c++,java}.如果数据库中存在这些标签则直接读取标签的tagId;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"com\">     * 如果数据库中不存在改标签,则使用IdGenerator生成15位的tagId;&lt;/p&gt;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"com\">     * &lt;p&gt;&lt;/p&gt;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"com\">     * &lt;p&gt;2.并将tagId与articleId存入t_l_a表中&lt;/p&gt;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"com\">     * &lt;p&gt;&lt;/p&gt;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"com\">     * &lt;p&gt;3.返回如{1561719934210540,1561719934210093,1561719934210671}的tagId字符串&lt;/p&gt;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"com\">     *</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"com\">     * @param tag</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"com\">     * @param articleId</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"com\">     * @return 如{1561719934210540,1561719934210093,1561719934210671}</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"com\">     *</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"com\">     */</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> handleTag</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> tag</span><span class=\"pun\">,</span><span class=\"kwd\">long</span><span class=\"pln\"> articleId</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pun\">[]</span><span class=\"pln\"> split </span><span class=\"pun\">=</span><span class=\"pln\"> tag</span><span class=\"pun\">.</span><span class=\"pln\">split</span><span class=\"pun\">(</span><span class=\"str\">\",\"</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">StringBuffer</span><span class=\"pln\"> tagIds </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">StringBuffer</span><span class=\"pun\">(</span><span class=\"str\">\"\"</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">&lt;</span><span class=\"pln\">split</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"com\">//必须先判断当前tag名称在数据库是否存在 如果存在就不添加取已经存在的tagId(数据库存在的),并且不忘tag表添加数据库</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">Tag</span><span class=\"pln\"> tag1 </span><span class=\"pun\">=</span><span class=\"pln\"> tagService</span><span class=\"pun\">.</span><span class=\"pln\">findByTagName</span><span class=\"pun\">(</span><span class=\"pln\">split</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]);</span><span class=\"com\">//使用tag名称前往数据库查询</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">long</span><span class=\"pln\"> tagId</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">tag1 </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"com\">//如果数据库tag表中不存在该标签</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">                tagId </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">IdGenerator</span><span class=\"pun\">.</span><span class=\"pln\">getTagId</span><span class=\"pun\">();</span><span class=\"com\">//获取一个生成的tag_id</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">                tagService</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Tag</span><span class=\"pun\">(</span><span class=\"pln\">tagId</span><span class=\"pun\">,</span><span class=\"pln\">split</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">],</span><span class=\"pln\"> </span><span class=\"typ\">DateHelper</span><span class=\"pun\">.</span><span class=\"pln\">getYYYY_MM_DD_HH_MM_SS</span><span class=\"pun\">()));</span><span class=\"com\">//存入数据库tag表中</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">                tagId </span><span class=\"pun\">=</span><span class=\"pln\"> tag1</span><span class=\"pun\">.</span><span class=\"pln\">getId</span><span class=\"pun\">();</span><span class=\"com\">//获取该标签在数据库已经存在的id</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"com\">//将tag与文章的关系 添加到数据库t_l_a表中</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">            tagLinkArticleService</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">TagLinkArticle</span><span class=\"pun\">(</span><span class=\"pln\">tagId</span><span class=\"pun\">,</span><span class=\"pln\">articleId</span><span class=\"pun\">));</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pln\"> </span><span class=\"pun\">!=</span><span class=\"pln\"> split</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">)</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">                tagIds</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">tagId</span><span class=\"pun\">+</span><span class=\"str\">\",\"</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">else</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">                tagIds</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">tagId</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> tagIds</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">();</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"com\">     * 获取所有的文章,修改信息后</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"com\">     * @return</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"com\">     */</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@RequestMapping</span><span class=\"pun\">(</span><span class=\"str\">\"/findAll\"</span><span class=\"pun\">)</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">ArticleListEntity</span><span class=\"pun\">&gt;</span><span class=\"pln\"> findAll</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">Article</span><span class=\"pun\">&gt;</span><span class=\"pln\"> allArticleList </span><span class=\"pun\">=</span><span class=\"pln\"> articleService</span><span class=\"pun\">.</span><span class=\"pln\">findAll</span><span class=\"pun\">();</span><span class=\"com\">//从数据库中获取所有文章数据</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">ArticleListEntity</span><span class=\"pun\">&gt;</span><span class=\"pln\"> articleListEntities </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ArrayList</span><span class=\"pun\">&lt;&gt;();</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Article</span><span class=\"pln\"> article</span><span class=\"pun\">:</span><span class=\"pln\"> allArticleList</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"com\">//根据article的categoryId向categoryService的findOne方法查找该Id的名字</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">String</span><span class=\"pln\"> categoryName </span><span class=\"pun\">=</span><span class=\"pln\"> categoryService</span><span class=\"pun\">.</span><span class=\"pln\">findOne</span><span class=\"pun\">(</span><span class=\"pln\">article</span><span class=\"pun\">.</span><span class=\"pln\">getArticleCategoryId</span><span class=\"pun\">()).</span><span class=\"pln\">getCategoryName</span><span class=\"pun\">();</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">String</span><span class=\"pln\"> tagName </span><span class=\"pun\">=</span><span class=\"pln\"> tagIdToTagName</span><span class=\"pun\">(</span><span class=\"pln\">article</span><span class=\"pun\">.</span><span class=\"pln\">getTagId</span><span class=\"pun\">());</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"com\">//将数据添加到articleListEntities中</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">            articleListEntities</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ArticleListEntity</span><span class=\"pun\">(</span><span class=\"pln\">article</span><span class=\"pun\">.</span><span class=\"pln\">getId</span><span class=\"pun\">(),</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">                    article</span><span class=\"pun\">.</span><span class=\"pln\">getTitle</span><span class=\"pun\">(),</span><span class=\"pln\">categoryName</span><span class=\"pun\">,</span><span class=\"pln\">tagName</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">                    article</span><span class=\"pun\">.</span><span class=\"pln\">getLikeNum</span><span class=\"pun\">(),</span><span class=\"pln\">article</span><span class=\"pun\">.</span><span class=\"pln\">getUpdateTime</span><span class=\"pun\">()));</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> articleListEntities</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"com\">     * 将tagId序列转换位tagName序列</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"com\">     * &lt;p&gt;例如:&lt;/p&gt;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"com\">     * &lt;p&gt;{123324,234234,234562} =&gt; {PHP,Java,C++}&lt;/p&gt;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"com\">     * @param tagId {123324,234234,234562}</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"com\">     * @return {PHP,Java,C++}</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"com\">     */</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> tagIdToTagName</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> tagId</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">tagId </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"str\">\"\"</span><span class=\"pun\">.</span><span class=\"pln\">equals</span><span class=\"pun\">(</span><span class=\"pln\">tagId</span><span class=\"pun\">)))</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"str\">\"\"</span><span class=\"pun\">;</span><span class=\"com\">//判断如tagId为空或者空字符串那么直接返回</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pun\">[]</span><span class=\"pln\"> split </span><span class=\"pun\">=</span><span class=\"pln\"> tagId</span><span class=\"pun\">.</span><span class=\"pln\">split</span><span class=\"pun\">(</span><span class=\"str\">\",\"</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">StringBuffer</span><span class=\"pln\"> stringBuffer </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">StringBuffer</span><span class=\"pun\">();</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> split</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"com\">//这一部分要换成Redis缓存(现在用的是数据库查询tag标签名)</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">            stringBuffer</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">tagService</span><span class=\"pun\">.</span><span class=\"pln\">findOne</span><span class=\"pun\">(</span><span class=\"typ\">Long</span><span class=\"pun\">.</span><span class=\"pln\">parseLong</span><span class=\"pun\">(</span><span class=\"pln\">split</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">])).</span><span class=\"pln\">getTagName</span><span class=\"pun\">()+</span><span class=\"str\">\",\"</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        stringBuffer</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">tagService</span><span class=\"pun\">.</span><span class=\"pln\">findOne</span><span class=\"pun\">(</span><span class=\"typ\">Long</span><span class=\"pun\">.</span><span class=\"pln\">parseLong</span><span class=\"pun\">(</span><span class=\"pln\">split</span><span class=\"pun\">[</span><span class=\"pln\">split</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">])).</span><span class=\"pln\">getTagName</span><span class=\"pun\">());</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> stringBuffer</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">();</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@RequestMapping</span><span class=\"pun\">(</span><span class=\"str\">\"/findOne\"</span><span class=\"pun\">)</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">Article</span><span class=\"pln\"> findOne</span><span class=\"pun\">(</span><span class=\"lit\">@RequestBody</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pln\"> searchMap</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> idStr </span><span class=\"pun\">=</span><span class=\"pln\"> searchMap</span><span class=\"pun\">.</span><span class=\"pln\">get</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">).</span><span class=\"pln\">toString</span><span class=\"pun\">();</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">long</span><span class=\"pln\"> id </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Long</span><span class=\"pun\">.</span><span class=\"pln\">parseLong</span><span class=\"pun\">(</span><span class=\"pln\">idStr</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Article</span><span class=\"pln\"> one </span><span class=\"pun\">=</span><span class=\"pln\"> articleService</span><span class=\"pun\">.</span><span class=\"pln\">findOne</span><span class=\"pun\">(</span><span class=\"pln\">id</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">one </span><span class=\"pun\">!=</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">            one</span><span class=\"pun\">.</span><span class=\"pln\">setTagId</span><span class=\"pun\">(</span><span class=\"pln\">tagIdToTagName</span><span class=\"pun\">(</span><span class=\"pln\">one</span><span class=\"pun\">.</span><span class=\"pln\">getTagId</span><span class=\"pun\">()));</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> one</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n','2019-07-01 01:02:17','2019-10-05 21:49:46',0,0,1,1,0,'SpringBoot','给定仅有小写字母组成的字符串数组 A，返回列表中的每个字符串中都显示的全部字符（包括重复字符）组成的列表。例如，如果一个字符在每个字符串中出现 3 次，但不是 4 次，则需要在最终答案中包含该字符 3 次。\n你可以按任意顺序返回答案。','##题目描述\n给定仅有小写字母组成的字符串数组 A，返回列表中的每个字符串中都显示的全部字符（包括重复字符）组成的列表。例如，如果一个字符在每个字符串中出现 3 次，但不是 4 次，则需要在最终答案中包含该字符 3 次。\n你可以按任意顺序返回答案。\n\n示例 1：\n输入：[\"bella\",\"label\",\"roller\"]\n输出：[\"e\",\"l\",\"l\"]\n\n示例 2：\n输入：[\"cool\",\"lock\",\"cook\"]\n输出：[\"c\",\"o\"]\n\n提示：\n1 <= A.length <= 100\n1 <= A[i].length <= 100\nA[i][j] 是小写字母\n```java\npackage top.yms.server.controller.admin;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport top.yms.server.entity.Article;\nimport top.yms.server.entity.Result;\nimport top.yms.server.entity.Tag;\nimport top.yms.server.entity.TagLinkArticle;\nimport top.yms.server.entity.article.ArticleListEntity;\nimport top.yms.server.service.ArticleService;\nimport top.yms.server.service.CategoryService;\nimport top.yms.server.service.TagLinkArticleService;\nimport top.yms.server.service.TagService;\nimport top.yms.server.utils.DateHelper;\nimport top.yms.server.utils.IdGenerator;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@RestController\n@RequestMapping(\"/admin/article\")\npublic class AdminArticleController {\n\n    @Autowired\n    private ArticleService articleService;\n\n    @Autowired\n    private TagLinkArticleService tagLinkArticleService;\n\n    @Autowired\n    private CategoryService categoryService;\n\n    @Autowired\n    private TagService tagService;\n\n    /***\n     * 1.使用IdGenerator获取id; 2.作者id由前端传来(authorId); 3.文章分类id由前端传入(articleCategoryId)\n     *\n     * 4.tagId使用IdGenerator生成(生成后同时向t_l_a表插入),tag_id传入的数据格式可能是 python,java,c++;\n     *\n     * 5.title由前台传入; 6.content由前台传入; 7.createdTime和updateTime由后台生成; 8.browseNum默认位0(add时前端传入)\n     *\n     * 9.likeNum默认位0(add时前端传入); isPublic默认位1表示公开 0表示私有(前端传入); 10.发布状态publishStates 默认为1表示公开 0表示私有(前端传入);\n     *\n     * 11.isDel默认为0表示未删除 1为删除(前台传入); 12.keywords表示检索关键字 为前台传入; 13.markdownDoc由前台传入\n     * 14.abstractContent 抽象描述 （前台传入）\n     *\n     */\n    @PostMapping(\"/add\")\n    public Result add(@RequestBody Article article) {\n        Result res=null;\n\n        if(article != null) {\n            long articleId = IdGenerator.getArticleId();//使用IdGenerator生成16位的id\n            article.setId(articleId);\n            article.setTagId(handleTag(article.getTagId(),articleId));//处理tag信息\n\n            /*设置创建时间和更新时间*/\n            article.setCreatedTime(DateHelper.getYYYY_MM_DD_HH_MM_SS());\n            article.setUpdateTime(DateHelper.getYYYY_MM_DD_HH_MM_SS());\n\n            //执行添加文章信息到数据库操作\n            articleService.add(article);\n\n            res = new Result(true,\"add article success\");\n\n        } else {\n            res = new Result(false,\"article data is null\");\n        }\n\n        return res;\n    }\n\n    @RequestMapping(\"/update\")\n    public Result update(@RequestBody Article article) {\n        Result res=null;\n\n        if (article !=null) {\n            article.setTagId(handleTag(article.getTagId(),article.getId()));//处理tag信息\n            article.setUpdateTime(DateHelper.getYYYY_MM_DD_HH_MM_SS());\n\n            articleService.update(article);\n\n            res = new Result(true,\"update article success\");\n        } else {\n            res = new Result(false,\"article data is null\");\n        }\n\n        return res;\n    }\n\n    /**\n     * 传入的是数据如 {python,c++,java}\n     * <p></p>\n     * <h2>描述:</h2>\n     * <p>1.根据传入tag =>{python,c++,java}.如果数据库中存在这些标签则直接读取标签的tagId;\n     * 如果数据库中不存在改标签,则使用IdGenerator生成15位的tagId;</p>\n     * <p></p>\n     * <p>2.并将tagId与articleId存入t_l_a表中</p>\n     * <p></p>\n     * <p>3.返回如{1561719934210540,1561719934210093,1561719934210671}的tagId字符串</p>\n     *\n     * @param tag\n     * @param articleId\n     * @return 如{1561719934210540,1561719934210093,1561719934210671}\n     *\n     */\n    private String handleTag(String tag,long articleId) {\n\n        String[] split = tag.split(\",\");\n        StringBuffer tagIds = new StringBuffer(\"\");\n        for(int i=0; i<split.length; i++) {\n\n            //必须先判断当前tag名称在数据库是否存在 如果存在就不添加取已经存在的tagId(数据库存在的),并且不忘tag表添加数据库\n            Tag tag1 = tagService.findByTagName(split[i]);//使用tag名称前往数据库查询\n\n            long tagId;\n            if(tag1 == null) {//如果数据库tag表中不存在该标签\n                tagId = IdGenerator.getTagId();//获取一个生成的tag_id\n                tagService.add(new Tag(tagId,split[i], DateHelper.getYYYY_MM_DD_HH_MM_SS()));//存入数据库tag表中\n            } else {\n                tagId = tag1.getId();//获取该标签在数据库已经存在的id\n            }\n\n            //将tag与文章的关系 添加到数据库t_l_a表中\n            tagLinkArticleService.add(new TagLinkArticle(tagId,articleId));\n\n\n            if(i+1 != split.length)\n                tagIds.append(tagId+\",\");\n            else\n                tagIds.append(tagId);\n        }\n\n        return tagIds.toString();\n\n    }\n\n\n    /**\n     * 获取所有的文章,修改信息后\n     * @return\n     */\n    @RequestMapping(\"/findAll\")\n    public List<ArticleListEntity> findAll() {\n        List<Article> allArticleList = articleService.findAll();//从数据库中获取所有文章数据\n\n        List<ArticleListEntity> articleListEntities = new ArrayList<>();\n\n        for (Article article: allArticleList) {\n            //根据article的categoryId向categoryService的findOne方法查找该Id的名字\n            String categoryName = categoryService.findOne(article.getArticleCategoryId()).getCategoryName();\n\n            String tagName = tagIdToTagName(article.getTagId());\n\n            //将数据添加到articleListEntities中\n            articleListEntities.add(new ArticleListEntity(article.getId(),\n                    article.getTitle(),categoryName,tagName,\n                    article.getLikeNum(),article.getUpdateTime()));\n        }\n\n        return articleListEntities;\n    }\n\n    /**\n     * 将tagId序列转换位tagName序列\n     * <p>例如:</p>\n     * <p>{123324,234234,234562} => {PHP,Java,C++}</p>\n     * @param tagId {123324,234234,234562}\n     * @return {PHP,Java,C++}\n     */\n    private String tagIdToTagName(String tagId) {\n        if (tagId == null || (\"\".equals(tagId))) return \"\";//判断如tagId为空或者空字符串那么直接返回\n\n        String[] split = tagId.split(\",\");\n        StringBuffer stringBuffer = new StringBuffer();\n\n        for (int i = 0; i < split.length-1; i++) {\n            //这一部分要换成Redis缓存(现在用的是数据库查询tag标签名)\n            stringBuffer.append(tagService.findOne(Long.parseLong(split[i])).getTagName()+\",\");\n        }\n        stringBuffer.append(tagService.findOne(Long.parseLong(split[split.length-1])).getTagName());\n\n        return stringBuffer.toString();\n    }\n\n    @RequestMapping(\"/findOne\")\n    public Article findOne(@RequestBody Map searchMap) {\n        String idStr = searchMap.get(\"id\").toString();\n        long id = Long.parseLong(idStr);\n        Article one = articleService.findOne(id);\n        if (one != null) {\n            one.setTagId(tagIdToTagName(one.getTagId()));\n        }\n\n        return one;\n    }\n\n}\n\n```',1),(1561914144244130,0,1,'1570026826927064','强大的Postman --- API管理工具','<p>Postman是大家常用的API管理及测试工具。<br>他可能比你想象中的更强大。<br>个人最近研究了一波，简单总结一下。</p>\n<p>Postman工具有chrome扩展和独立客户端，推荐安装独立客户端。<br>Postman有个workspace的概念，workspace 分 personal 和 team类型。<br>personal workspace 只能查看和管理自己的的API，team workspace 可添加成员和设置成员权限，成员之间可共同管理API。<br><a href=\"https://upload-images.jianshu.io/upload_images/71414-e56b0ffce470a77a.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" title=\"image1\"><img src=\"https://upload-images.jianshu.io/upload_images/71414-e56b0ffce470a77a.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" alt=\"image1\" title=\"image1\"></a></p>\n<p>每个workspace可管理多个collection，我们可以发布collection，即生成在线API文档。<br><a href=\"https://upload-images.jianshu.io/upload_images/71414-58f464ccf5925497.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" title=\"image2\"><img src=\"https://upload-images.jianshu.io/upload_images/71414-58f464ccf5925497.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" alt=\"image2\" title=\"image2\"></a></p>\n<p>collection及每个collection包含的API中的描述支持markdown<br>每个API支持写测试用例，下图 snippet 提供了很多测试示例<br><a href=\"https://upload-images.jianshu.io/upload_images/71414-424b0f2f52bfd009.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" title=\"image3\"><img src=\"https://upload-images.jianshu.io/upload_images/71414-424b0f2f52bfd009.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" alt=\"image3\" title=\"image3\"></a></p>\n','2019-07-01 01:02:24','2019-10-05 21:49:36',0,0,1,1,0,'postman','Postman工具有chrome扩展和独立客户端，推荐安装独立客户端。\nPostman有个workspace的概念，workspace 分 personal 和 team类型。\npersonal workspace 只能查看和管理自己的的API，team workspace 可添加成员和设置成员权限，成员之间可共同管理API。','Postman是大家常用的API管理及测试工具。\n他可能比你想象中的更强大。\n个人最近研究了一波，简单总结一下。\n\nPostman工具有chrome扩展和独立客户端，推荐安装独立客户端。\nPostman有个workspace的概念，workspace 分 personal 和 team类型。\npersonal workspace 只能查看和管理自己的的API，team workspace 可添加成员和设置成员权限，成员之间可共同管理API。\n[![image1](https://upload-images.jianshu.io/upload_images/71414-e56b0ffce470a77a.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp \"image1\")](https://upload-images.jianshu.io/upload_images/71414-e56b0ffce470a77a.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp \"image1\")\n\n每个workspace可管理多个collection，我们可以发布collection，即生成在线API文档。\n[![image2](https://upload-images.jianshu.io/upload_images/71414-58f464ccf5925497.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp \"image2\")](https://upload-images.jianshu.io/upload_images/71414-58f464ccf5925497.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp \"image2\")\n\ncollection及每个collection包含的API中的描述支持markdown\n每个API支持写测试用例，下图 snippet 提供了很多测试示例\n[![image3](https://upload-images.jianshu.io/upload_images/71414-424b0f2f52bfd009.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp \"image3\")](https://upload-images.jianshu.io/upload_images/71414-424b0f2f52bfd009.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp \"image3\")\n',1),(1561914149979667,0,2,'1570027246674082','“启心”教育','<p>情绪教育的影响开始于摇篮时期。著名的哈佛大学儿科医师T.贝里·布雷泽尔顿（T.Berry Brazelten）博士对婴儿的基本人生观进行了简单的诊断测试。他把两块积木交给8个月大的婴儿，然后向婴儿示意，他希望婴儿怎样把两块积木组合在一起。布雷泽尔顿认为，对人生充满希望、对自身能力很自信的婴儿会这样：<br>拿起一块积木，含在嘴里，然后用它擦擦头发，把它扔到桌子的另一边，留心观察你会不会帮她捡回来。如果你捡了回来，婴儿把两块积木放在一起，完成了布置的任务。然后她会抬头看着你，眼睛扑闪扑闪，带着期望的神情，好像在说：“告诉我我是多么棒！”<br><a href=\"https://upload-images.jianshu.io/upload_images/12028144-a67065a0b029cea1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" title=\"image1\"><img src=\"https://upload-images.jianshu.io/upload_images/12028144-a67065a0b029cea1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image1\" title=\"image1\"></a><br>这样的婴儿从成年人那里获得了很多认可和鼓励，他们期望战胜生活中的小小困难。与此相反的是，如果婴儿来自惨淡、混乱的家庭，得不到家庭的关爱，在面对同样简单的任务时，他们会表现出期望失败的迹象。并不是说这些婴儿无法把积木组合在一起，他们明白大人的要求，并有能力遵从这些要求。不过，布雷泽尔顿的报告指出，即使这些婴儿完成任务，他们的表现也是畏畏缩缩的，好像在说：“我不行。看，我失败了。”这些孩子可能有着失败主义的人生观，他们不会期望从老师那里得到鼓励和关注，觉得学校无趣，很可能中途辍学。<br><img src=\"https://upload-images.jianshu.io/upload_images/12028144-b985decb52debb6f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image2\" title=\"image2\"><br>自信而乐观的孩子和期望失败的孩子，他们人生观的差异在人生的头几年开始形成。布雷泽尔顿建议，父母“必须清楚他们自身的行为可以培养孩子的自信心、好奇心、学习兴趣以及对局限的认识”，这些素质可以帮助孩子获得成功。有越来越多的研究显示，学习成绩很大程度上取决于孩子入学前形成的情绪性格。我们在第六章了解到，4岁的孩子忍住冲动不抓软糖，这种能力预告了14年后他们SAT考试的分数高出平均水平210分。<br><img src=\"https://upload-images.jianshu.io/upload_images/12028144-88cbe69b65f4993b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image3\" title=\"image3\"><br>塑造情绪智力要素的先机在人生的最早几年，尽管情绪智力的形成贯穿了个体的求学阶段。孩子后来获得的情绪能力建立在早年情绪智力的基础之上。第六章曾经介绍，情绪能力是所有学习活动必不可少的基础。美国国家临床婴儿项目中心的报告指出，孩子掌握的知识和超前的阅读能力对其学习成绩的预测作用没有情绪和社交测试结果那么显著。情绪和社交测试内容包括自信、兴趣，知道什么是得体行为以及如何控制行为不轨的冲动，耐心等待，听从指示，善于向老师求助，和其他孩子相处时懂得如何表达需求。<br><img src=\"https://upload-images.jianshu.io/upload_images/12028144-7cbbab95c4fd10fc.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"imag5\" title=\"imag5\"><br>孩子是否做好了入学准备取决于他们是否具备了学习能力——一切知识的基础。该报告列举了这项关键能力的七大要素，这些要素都与情绪智力有关。<br>1.自信心。控制和掌握自己的身体、行为和世界的感觉；孩子认为自己所从事的活动获得成功的可能性较大，而且成年人会提供帮助。<br>2.好奇心。认为探寻事物本质是积极、有趣的。<br>3.意向性。产生影响的意愿及能力，并且持之以恒。意向性又与竞争力、有效性的感觉相关。<br>4.自控。与年龄匹配的调整和控制自身行为的能力，以及内在控制的感觉。<br>5.关联性。与他人相互理解、交往的能力。<br>6.沟通能力。用语言与他人交流想法、感受与概念的意愿和能力。沟通能力又与对他人的信任感以及与他人（包括成年人）相处时的愉悦有关。<br>7.合作性。在群体活动中协调自身与他人需要的能力。<br>刚刚上幼儿园的孩子是否具有这些能力很大程度上取决于孩子的父母和幼儿园老师是否给予孩子足够的关怀，对孩子进行“启心”教育——也就是情绪方面的启智项目。</p>\n','2019-07-01 01:02:30','2019-10-05 21:49:28',4,0,1,1,0,'情商','情绪教育的影响开始于摇篮时期。著名的哈佛大学儿科医师T.贝里·布雷泽尔顿（T.Berry Brazelten）博士对婴儿的基本人生观进行了简单的诊断测试。他把两块积木交给8个月大的婴儿，然后向婴儿示意，他希望婴儿怎样把两块积木组合在一起。布雷泽尔顿认为，对人生充满希望、对自身能力很自信的婴儿会这....','情绪教育的影响开始于摇篮时期。著名的哈佛大学儿科医师T.贝里·布雷泽尔顿（T.Berry Brazelten）博士对婴儿的基本人生观进行了简单的诊断测试。他把两块积木交给8个月大的婴儿，然后向婴儿示意，他希望婴儿怎样把两块积木组合在一起。布雷泽尔顿认为，对人生充满希望、对自身能力很自信的婴儿会这样：\n拿起一块积木，含在嘴里，然后用它擦擦头发，把它扔到桌子的另一边，留心观察你会不会帮她捡回来。如果你捡了回来，婴儿把两块积木放在一起，完成了布置的任务。然后她会抬头看着你，眼睛扑闪扑闪，带着期望的神情，好像在说：“告诉我我是多么棒！”\n[![image1](https://upload-images.jianshu.io/upload_images/12028144-a67065a0b029cea1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240 \"image1\")](https://upload-images.jianshu.io/upload_images/12028144-a67065a0b029cea1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240 \"image1\")\n这样的婴儿从成年人那里获得了很多认可和鼓励，他们期望战胜生活中的小小困难。与此相反的是，如果婴儿来自惨淡、混乱的家庭，得不到家庭的关爱，在面对同样简单的任务时，他们会表现出期望失败的迹象。并不是说这些婴儿无法把积木组合在一起，他们明白大人的要求，并有能力遵从这些要求。不过，布雷泽尔顿的报告指出，即使这些婴儿完成任务，他们的表现也是畏畏缩缩的，好像在说：“我不行。看，我失败了。”这些孩子可能有着失败主义的人生观，他们不会期望从老师那里得到鼓励和关注，觉得学校无趣，很可能中途辍学。\n![image2](https://upload-images.jianshu.io/upload_images/12028144-b985decb52debb6f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240 \"image2\")\n自信而乐观的孩子和期望失败的孩子，他们人生观的差异在人生的头几年开始形成。布雷泽尔顿建议，父母“必须清楚他们自身的行为可以培养孩子的自信心、好奇心、学习兴趣以及对局限的认识”，这些素质可以帮助孩子获得成功。有越来越多的研究显示，学习成绩很大程度上取决于孩子入学前形成的情绪性格。我们在第六章了解到，4岁的孩子忍住冲动不抓软糖，这种能力预告了14年后他们SAT考试的分数高出平均水平210分。\n![image3](https://upload-images.jianshu.io/upload_images/12028144-88cbe69b65f4993b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240 \"image3\")\n塑造情绪智力要素的先机在人生的最早几年，尽管情绪智力的形成贯穿了个体的求学阶段。孩子后来获得的情绪能力建立在早年情绪智力的基础之上。第六章曾经介绍，情绪能力是所有学习活动必不可少的基础。美国国家临床婴儿项目中心的报告指出，孩子掌握的知识和超前的阅读能力对其学习成绩的预测作用没有情绪和社交测试结果那么显著。情绪和社交测试内容包括自信、兴趣，知道什么是得体行为以及如何控制行为不轨的冲动，耐心等待，听从指示，善于向老师求助，和其他孩子相处时懂得如何表达需求。\n![imag5](https://upload-images.jianshu.io/upload_images/12028144-7cbbab95c4fd10fc.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240 \"imag5\")\n孩子是否做好了入学准备取决于他们是否具备了学习能力——一切知识的基础。该报告列举了这项关键能力的七大要素，这些要素都与情绪智力有关。\n1.自信心。控制和掌握自己的身体、行为和世界的感觉；孩子认为自己所从事的活动获得成功的可能性较大，而且成年人会提供帮助。\n2.好奇心。认为探寻事物本质是积极、有趣的。\n3.意向性。产生影响的意愿及能力，并且持之以恒。意向性又与竞争力、有效性的感觉相关。\n4.自控。与年龄匹配的调整和控制自身行为的能力，以及内在控制的感觉。\n5.关联性。与他人相互理解、交往的能力。\n6.沟通能力。用语言与他人交流想法、感受与概念的意愿和能力。沟通能力又与对他人的信任感以及与他人（包括成年人）相处时的愉悦有关。\n7.合作性。在群体活动中协调自身与他人需要的能力。\n刚刚上幼儿园的孩子是否具有这些能力很大程度上取决于孩子的父母和幼儿园老师是否给予孩子足够的关怀，对孩子进行“启心”教育——也就是情绪方面的启智项目。',1),(1561914160528620,0,1,'1561914017491098','【从入门到放弃-ZooKeeper】ZooKeeper实战-分布式队列','<h3 id=\"h3-u524Du8A00\"><a name=\"前言\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>前言</h3><p>上文【<a href=\"https://links.jianshu.com/go?to=https%3A%2F%2Fyq.aliyun.com%2Fgo%2FarticleRenderRedirect%3Furl%3Dhttps%253A%252F%252Fnc2era.com%252Feda11ef4.html\" title=\"从入门到放弃-ZooKeeper\">从入门到放弃-ZooKeeper</a>】ZooKeeper入门中，我们学习了ZooKeeper的简单安装和cli使用。<br>接下来我们开始基于java API的实战编程。本文先来写一个分布式队列的代码实现。</p>\n<p>设计<br>我们来写一个先进先出的分布式无界公平队列。参考我们之前介绍的【从入门到放弃-Java】并发编程-JUC-ConcurrentLinkedQueue和【从入门到放弃-Java】并发编程-JUC-LinkedBlockingQueue。我们直接继承AbstractQueue类，并实现Queue接口。<br>主要重写offer、poll、peek、size方法。<br>我们使用ZooKeeper的持久化顺序节点来实现分布式队列。<br>offer是入队，入队时新创建一个持久化顺序节点，节点后缀会根据ZooKeeper的特性自动累加。<br>poll的出队，获取根节点下的所有节点，根据后缀数字排序，数组最小的是最先入队的，因此要最先出队。<br>peek，获取到最下入队的数据，和poll的区别是，peek只获取数据，不出队，不删除已经消费的节点。<br>size获取队列长度，实现方式是，获取根节点下的节点数量即可。这个方法在并发时可能会有问题。慎用。</p>\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"com\">//继承AbstractQueue类并实现Queue接口</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">DistributedQueue</span><span class=\"pun\">&lt;</span><span class=\"pln\">E</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">extends</span><span class=\"pln\"> </span><span class=\"typ\">AbstractQueue</span><span class=\"pun\">&lt;</span><span class=\"pln\">E</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">implements</span><span class=\"pln\"> </span><span class=\"typ\">Queue</span><span class=\"pun\">&lt;</span><span class=\"pln\">E</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">Logger</span><span class=\"pln\"> logger </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">LoggerFactory</span><span class=\"pun\">.</span><span class=\"pln\">getLogger</span><span class=\"pun\">(</span><span class=\"typ\">DistributedQueue</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//ZooKeeper客户端，进行ZooKeeper操作</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">ZooKeeper</span><span class=\"pln\"> zooKeeper</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//根节点名称</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> dir</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//数据节点名称，顺序节点在插入口会变为 node{00000000xx} 格式</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> node</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//ZooKeeper鉴权信息</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"pln\">ACL</span><span class=\"pun\">&gt;</span><span class=\"pln\"> acls</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"com\">     * Constructor.</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"com\">     *</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"com\">     * @param zooKeeper the zoo keeper</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"com\">     * @param dir       the dir</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"com\">     * @param node      the node</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"com\">     * @param acls      the acls</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"com\">     */</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">   </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">DistributedQueue</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">ZooKeeper</span><span class=\"pln\"> zooKeeper</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> dir</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> node</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"pln\">ACL</span><span class=\"pun\">&gt;</span><span class=\"pln\"> acls</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">zooKeeper </span><span class=\"pun\">=</span><span class=\"pln\"> zooKeeper</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">dir </span><span class=\"pun\">=</span><span class=\"pln\"> dir</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">node </span><span class=\"pun\">=</span><span class=\"pln\"> node</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">acls </span><span class=\"pun\">=</span><span class=\"pln\"> acls</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        init</span><span class=\"pun\">();</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> init</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"com\">//需要先判断根节点是否存在，不存在的话，创建子节点时会出错。</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">try</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">Stat</span><span class=\"pln\"> stat </span><span class=\"pun\">=</span><span class=\"pln\"> zooKeeper</span><span class=\"pun\">.</span><span class=\"pln\">exists</span><span class=\"pun\">(</span><span class=\"pln\">dir</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">stat </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">                zooKeeper</span><span class=\"pun\">.</span><span class=\"pln\">create</span><span class=\"pun\">(</span><span class=\"pln\">dir</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">,</span><span class=\"pln\"> acls</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">CreateMode</span><span class=\"pun\">.</span><span class=\"pln\">PERSISTENT</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">catch</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Exception</span><span class=\"pln\"> e</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">            logger</span><span class=\"pun\">.</span><span class=\"pln\">error</span><span class=\"pun\">(</span><span class=\"str\">\"[DistributedQueue#init] error : \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> e</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">(),</span><span class=\"pln\"> e</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n','2019-07-01 01:02:40','2019-10-05 21:47:13',0,0,1,1,0,'技术','ZooKeeper入门中，我们学习了ZooKeeper的简单安装和cli使用。\n接下来我们开始基于java API的实战编程。本文先来写一个分布式队列的代码.....','###前言\n上文【[从入门到放弃-ZooKeeper](https://links.jianshu.com/go?to=https%3A%2F%2Fyq.aliyun.com%2Fgo%2FarticleRenderRedirect%3Furl%3Dhttps%253A%252F%252Fnc2era.com%252Feda11ef4.html \"从入门到放弃-ZooKeeper\")】ZooKeeper入门中，我们学习了ZooKeeper的简单安装和cli使用。\n接下来我们开始基于java API的实战编程。本文先来写一个分布式队列的代码实现。\n\n设计\n我们来写一个先进先出的分布式无界公平队列。参考我们之前介绍的【从入门到放弃-Java】并发编程-JUC-ConcurrentLinkedQueue和【从入门到放弃-Java】并发编程-JUC-LinkedBlockingQueue。我们直接继承AbstractQueue类，并实现Queue接口。\n主要重写offer、poll、peek、size方法。\n我们使用ZooKeeper的持久化顺序节点来实现分布式队列。\noffer是入队，入队时新创建一个持久化顺序节点，节点后缀会根据ZooKeeper的特性自动累加。\npoll的出队，获取根节点下的所有节点，根据后缀数字排序，数组最小的是最先入队的，因此要最先出队。\npeek，获取到最下入队的数据，和poll的区别是，peek只获取数据，不出队，不删除已经消费的节点。\nsize获取队列长度，实现方式是，获取根节点下的节点数量即可。这个方法在并发时可能会有问题。慎用。\n```java\n//继承AbstractQueue类并实现Queue接口\npublic class DistributedQueue<E> extends AbstractQueue<E> implements Queue<E> {\n    private static Logger logger = LoggerFactory.getLogger(DistributedQueue.class);\n\n    //ZooKeeper客户端，进行ZooKeeper操作\n    private ZooKeeper zooKeeper;\n\n    //根节点名称\n    private String dir;\n\n    //数据节点名称，顺序节点在插入口会变为 node{00000000xx} 格式\n    private String node;\n\n    //ZooKeeper鉴权信息\n    private List<ACL> acls;\n\n    /**\n     * Constructor.\n     *\n     * @param zooKeeper the zoo keeper\n     * @param dir       the dir\n     * @param node      the node\n     * @param acls      the acls\n     */\n   public DistributedQueue (ZooKeeper zooKeeper, String dir, String node, List<ACL> acls) {\n        this.zooKeeper = zooKeeper;\n        this.dir = dir;\n        this.node = node;\n        this.acls = acls;\n        init();\n    }\n\n    private void init() {\n        //需要先判断根节点是否存在，不存在的话，创建子节点时会出错。\n        try {\n            Stat stat = zooKeeper.exists(dir, false);\n            if (stat == null) {\n                zooKeeper.create(dir, null, acls, CreateMode.PERSISTENT);\n            }\n        } catch (Exception e) {\n            logger.error(\"[DistributedQueue#init] error : \" + e.toString(), e);\n        }\n    }\n}\n```',1),(1561914284622172,0,5,'1570283218111074','什么都不做的人才不会犯错','<h4 id=\"h4-u4EC0u4E48u90FDu4E0Du505Au7684u4EBAu624Du4E0Du4F1Au72AFu9519\"><a name=\"什么都不做的人才不会犯错\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>什么都不做的人才不会犯错</h4><p>我的最后一位导师说过：“如果你不经常犯错，表明你冒的风险不够，没有付出最大的努力。”</p>\n<p>导师们能激发出我们身上最大的潜力。他们会要求我们去冒险。他们会告诉我们一些这样的道理：一个不去冒险的人，只是一个一事无成、一无所有的无名小卒。导师们能用自己的话语打动我们。我们也应该为自己的想法能被打动感到高兴。因为这恰好体现出我们的活力。</p>\n<p>通向成功的道路上布满荆棘。只有一路前行，不惧怕错误，生活才会将五彩缤纷展示在我们面前。之后我们才会知道，这一切就是命运的安排。我们所经历的一切也都有其意义。我们所有的经验和经历都会化成一股力量，汇入我们正要完成的使命中。一切都有其意义。我们只需要识别出这些意义。我们所犯过的每一个错误，都会对我们有所帮助。每一个我们过去认识过的人，都会指引我们去认识新的人，获得新的机会。但是要识别出这其中的关联，主要还是在于我们自己。这一切都有一个前提：我们必须克服各种类型的恐惧，持续学习和成长。</p>\n<p>这样一个态度带给你的回报，会超越你所有的期待。</p>\n<h4 id=\"h4-u80FDu91CFu8D34u58EB\"><a name=\"能量贴士\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>能量贴士</h4><p>请现在就做出决定，你是否想实现财务自由。<br>● 不到最好，永不满足。<br>● 你应该提升你对机会的感知能力。<br>● 你参加比赛是为了赢得比赛。<br>● 每一件小事都有其对你有利的意义。一切都十分重要。<br>● 你的生活准则应该是：成为最好的自己。<br>● 你不应该害怕犯错误。<br>● 想要变得十分富有，你就必须建立自己的企业。<br>在你做出决定之后，我想在下一章的内容中向你展示，你如何才能保证自己不被“吓倒”。你会发现，你能为自己创造出一种有助于自己，能以最佳方式支持你的境况。</p>\n','2019-07-01 01:04:44','2019-10-05 21:46:58',2,0,1,1,0,'经济','通向成功的道路上布满荆棘。只有一路前行，不惧怕错误，生活才会将五彩缤纷展示在我们面前。之后我们才会知道，这一切就是命运的安排。我们所经历的一切也都有其意义。我们所有的经验和经历都会化成一股力量，汇入我们正要完成的使命中。一切都有其意义。我们只需要识别出这些意义。','#### 什么都不做的人才不会犯错\n\n我的最后一位导师说过：“如果你不经常犯错，表明你冒的风险不够，没有付出最大的努力。”\n\n导师们能激发出我们身上最大的潜力。他们会要求我们去冒险。他们会告诉我们一些这样的道理：一个不去冒险的人，只是一个一事无成、一无所有的无名小卒。导师们能用自己的话语打动我们。我们也应该为自己的想法能被打动感到高兴。因为这恰好体现出我们的活力。\n\n通向成功的道路上布满荆棘。只有一路前行，不惧怕错误，生活才会将五彩缤纷展示在我们面前。之后我们才会知道，这一切就是命运的安排。我们所经历的一切也都有其意义。我们所有的经验和经历都会化成一股力量，汇入我们正要完成的使命中。一切都有其意义。我们只需要识别出这些意义。我们所犯过的每一个错误，都会对我们有所帮助。每一个我们过去认识过的人，都会指引我们去认识新的人，获得新的机会。但是要识别出这其中的关联，主要还是在于我们自己。这一切都有一个前提：我们必须克服各种类型的恐惧，持续学习和成长。\n\n这样一个态度带给你的回报，会超越你所有的期待。\n\n#### 能量贴士\n请现在就做出决定，你是否想实现财务自由。\n● 不到最好，永不满足。\n● 你应该提升你对机会的感知能力。\n● 你参加比赛是为了赢得比赛。\n● 每一件小事都有其对你有利的意义。一切都十分重要。\n● 你的生活准则应该是：成为最好的自己。\n● 你不应该害怕犯错误。\n● 想要变得十分富有，你就必须建立自己的企业。\n在你做出决定之后，我想在下一章的内容中向你展示，你如何才能保证自己不被“吓倒”。你会发现，你能为自己创造出一种有助于自己，能以最佳方式支持你的境况。',1),(1561914291722114,0,1,'1561914017524099,1561910658528091','不用加减乘除做加法','<h4 id=\"h4-u9898u76EEu63CFu8FF0\"><a name=\"题目描述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>题目描述</h4><p>写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。</p>\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Solution</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"typ\">Add</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> num1</span><span class=\"pun\">,</span><span class=\"kwd\">int</span><span class=\"pln\"> num2</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> sum </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"com\">//不带进位的结果</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> carry </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"com\">//进位</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">       </span><span class=\"kwd\">while</span><span class=\"pun\">(</span><span class=\"pln\">num2 </span><span class=\"pun\">!=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">){</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">           sum </span><span class=\"pun\">=</span><span class=\"pln\"> num1 </span><span class=\"pun\">^</span><span class=\"pln\"> num2</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">           carry </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">num1 </span><span class=\"pun\">&amp;</span><span class=\"pln\"> num2</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">           num1 </span><span class=\"pun\">=</span><span class=\"pln\"> sum</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">           num2 </span><span class=\"pun\">=</span><span class=\"pln\"> carry</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">       </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> num1</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n','2019-07-01 01:04:51','2019-10-05 21:45:36',0,0,1,1,0,'Java,算法','写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号','#### 题目描述\n写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。\n\n```java\npublic class Solution {\n    public int Add(int num1,int num2) {\n        int sum = 0;//不带进位的结果\n        int carry = 0;//进位\n       while(num2 != 0){\n           sum = num1 ^ num2;\n           carry = (num1 & num2) << 1;\n           num1 = sum;\n           num2 = carry;\n       }\n        \n        return num1;\n    }\n}\n```',1),(1561914297707201,0,3,'1561914017524099,1561910658528091','正则表达式匹配','<h4 id=\"h4-u9898u76EEu63CFu8FF0\"><a name=\"题目描述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>题目描述</h4><p>请实现一个函数用来匹配包括’.’和’<em>‘的正则表达式。模式中的字符’.’表示任意一个字符，而’</em>‘表示它前面的字符可以出现任意次（包含0次）。 在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串”aaa”与模式”a.a”和”ab<em>ac</em>a”匹配，但是与”aa.a”和”ab*a”均不匹配</p>\n<h4 id=\"h4-u89E3u9898u601Du8DEF\"><a name=\"解题思路\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>解题思路</h4><p>当模式中的第二个字符不是“*”时：<br>1、如果字符串第一个字符和模式中的第一个字符相匹配，那么字符串和模式都后移一个字符，然后匹配剩余的。<br>2、如果 字符串第一个字符和模式中的第一个字符相不匹配，直接返回false。</p>\n<p>而当模式中的第二个字符是“*”时：<br>如果字符串第一个字符跟模式第一个字符不匹配，则模式后移2个字符，继续匹配。如果字符串第一个字符跟模式第一个字符匹配，可以有3种匹配方式：<br>1、模式后移2字符，相当于x被忽略；<br>2、字符串后移1字符，模式后移2字符；<br>3、字符串后移1字符，模式不变，即继续匹配字符下一位，因为可以匹配多位</p>\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Solution</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"com\">//https://blog.csdn.net/qq_30242987/article/details/94021921</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">boolean</span><span class=\"pln\"> match</span><span class=\"pun\">(</span><span class=\"kwd\">char</span><span class=\"pun\">[]</span><span class=\"pln\"> str</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">char</span><span class=\"pun\">[]</span><span class=\"pln\"> pattern</span><span class=\"pun\">)</span><span class=\"pln\">    </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> sindex </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> pindex </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> matchCore</span><span class=\"pun\">(</span><span class=\"pln\">str</span><span class=\"pun\">,</span><span class=\"pln\"> sindex</span><span class=\"pun\">,</span><span class=\"pln\"> pindex</span><span class=\"pun\">,</span><span class=\"pln\"> pattern</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">boolean</span><span class=\"pln\"> matchCore</span><span class=\"pun\">(</span><span class=\"kwd\">char</span><span class=\"pun\">[]</span><span class=\"pln\"> str</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> sindex</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> pindex</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">char</span><span class=\"pun\">[]</span><span class=\"pln\"> pattern</span><span class=\"pun\">){</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"com\">//有效性检验：str到尾，pattern到尾，匹配成功</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">sindex </span><span class=\"pun\">&gt;=</span><span class=\"pln\"> str</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> pindex </span><span class=\"pun\">==</span><span class=\"pln\"> pattern</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">)</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"com\">//pattern先到尾，匹配失败</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">pindex </span><span class=\"pun\">&gt;=</span><span class=\"pln\"> pattern</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> sindex </span><span class=\"pun\">&lt;</span><span class=\"pln\"> str</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">)</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"com\">//模式第2个是*，且字符串第1个跟模式第1个匹配,分3种匹配模式；如不匹配，模式后移2位</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">pindex</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\"> pattern</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> pattern</span><span class=\"pun\">[</span><span class=\"pln\">pindex</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"str\">\'*\'</span><span class=\"pun\">){</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">sindex </span><span class=\"pun\">&lt;</span><span class=\"pln\"> str</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">str</span><span class=\"pun\">[</span><span class=\"pln\">sindex</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">==</span><span class=\"pln\"> pattern</span><span class=\"pun\">[</span><span class=\"pln\">pindex</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> pattern</span><span class=\"pun\">[</span><span class=\"pln\">pindex</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"str\">\'.\'</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">){</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> matchCore</span><span class=\"pun\">(</span><span class=\"pln\">str</span><span class=\"pun\">,</span><span class=\"pln\"> sindex</span><span class=\"pun\">,</span><span class=\"pln\"> pindex</span><span class=\"pun\">+</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> pattern</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"com\">//模式后移2，视为x*匹配0个字符</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">                        </span><span class=\"pun\">||</span><span class=\"pln\">  matchCore</span><span class=\"pun\">(</span><span class=\"pln\">str</span><span class=\"pun\">,</span><span class=\"pln\"> sindex</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> pindex</span><span class=\"pun\">+</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> pattern </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"com\">//视为模式匹配1个字符</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">                        </span><span class=\"pun\">||</span><span class=\"pln\"> matchCore</span><span class=\"pun\">(</span><span class=\"pln\">str</span><span class=\"pun\">,</span><span class=\"pln\"> sindex</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> pindex</span><span class=\"pun\">,</span><span class=\"pln\"> pattern</span><span class=\"pun\">);</span><span class=\"com\">//*匹配1个，再匹配str中的下一个</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> matchCore</span><span class=\"pun\">(</span><span class=\"pln\">str</span><span class=\"pun\">,</span><span class=\"pln\"> sindex</span><span class=\"pun\">,</span><span class=\"pln\"> pindex</span><span class=\"pun\">+</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> pattern</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">// 当前字母无法匹配的情况，所以也视为匹配了0次</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"com\">//模式第2个不是*，且字符串第1个跟模式第1个匹配，则都后移1位，否则直接返回false</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">sindex </span><span class=\"pun\">&lt;</span><span class=\"pln\"> str</span><span class=\"pun\">.</span><span class=\"pln\">length </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">str</span><span class=\"pun\">[</span><span class=\"pln\">sindex</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">==</span><span class=\"pln\"> pattern</span><span class=\"pun\">[</span><span class=\"pln\">pindex</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> pattern</span><span class=\"pun\">[</span><span class=\"pln\">pindex</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"str\">\'.\'</span><span class=\"pun\">))</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> matchCore</span><span class=\"pun\">(</span><span class=\"pln\">str</span><span class=\"pun\">,</span><span class=\"pln\"> sindex</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> pindex</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> pattern</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n','2019-07-01 01:04:57','2019-10-05 21:44:18',0,0,1,1,0,'Java,算法','请实现一个函数用来匹配包括\'.\'和\'*\'的正则表达式。模式中的字符\'.\'表示任意一个字符，而\'*\'表示它前面的字符可以出现任意次（包含0次）。 在本题中，匹配是指字符串的所有字符匹配整个模式','#### 题目描述\n请实现一个函数用来匹配包括\'.\'和\'*\'的正则表达式。模式中的字符\'.\'表示任意一个字符，而\'*\'表示它前面的字符可以出现任意次（包含0次）。 在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串\"aaa\"与模式\"a.a\"和\"ab*ac*a\"匹配，但是与\"aa.a\"和\"ab*a\"均不匹配\n\n#### 解题思路\n当模式中的第二个字符不是“*”时：\n1、如果字符串第一个字符和模式中的第一个字符相匹配，那么字符串和模式都后移一个字符，然后匹配剩余的。\n2、如果 字符串第一个字符和模式中的第一个字符相不匹配，直接返回false。\n\n而当模式中的第二个字符是“*”时：\n如果字符串第一个字符跟模式第一个字符不匹配，则模式后移2个字符，继续匹配。如果字符串第一个字符跟模式第一个字符匹配，可以有3种匹配方式：\n1、模式后移2字符，相当于x被忽略；\n2、字符串后移1字符，模式后移2字符；\n3、字符串后移1字符，模式不变，即继续匹配字符下一位，因为可以匹配多位\n```java\nclass Solution {//https://blog.csdn.net/qq_30242987/article/details/94021921\n    public boolean match(char[] str, char[] pattern)    {\n        int sindex = 0, pindex = 0;\n        return matchCore(str, sindex, pindex, pattern);\n    }\n    public boolean matchCore(char[] str, int sindex, int pindex, char[] pattern){\n        //有效性检验：str到尾，pattern到尾，匹配成功\n        if(sindex >= str.length && pindex == pattern.length)\n            return true;\n        //pattern先到尾，匹配失败\n        if(pindex >= pattern.length && sindex < str.length)\n            return false;\n        //模式第2个是*，且字符串第1个跟模式第1个匹配,分3种匹配模式；如不匹配，模式后移2位\n        if(pindex+1 < pattern.length && pattern[pindex+1] == \'*\'){\n            if(sindex < str.length && (str[sindex] == pattern[pindex] || pattern[pindex] == \'.\') ){\n                return matchCore(str, sindex, pindex+2, pattern) //模式后移2，视为x*匹配0个字符\n                        ||  matchCore(str, sindex+1, pindex+2, pattern ) //视为模式匹配1个字符\n                        || matchCore(str, sindex+1, pindex, pattern);//*匹配1个，再匹配str中的下一个\n            }else{\n                return matchCore(str, sindex, pindex+2, pattern); // 当前字母无法匹配的情况，所以也视为匹配了0次\n            }\n        }\n        //模式第2个不是*，且字符串第1个跟模式第1个匹配，则都后移1位，否则直接返回false\n        if(sindex < str.length && (str[sindex] == pattern[pindex] || pattern[pindex] == \'.\'))\n            return matchCore(str, sindex+1, pindex+1, pattern);\n        return false;\n    }\n}\n```',1),(1561914304389005,0,3,'1561910658528091,1561914017524099','字符流中第一个不重复的字符','<h4 id=\"h4-u9898u76EEu63CFu8FF0\"><a name=\"题目描述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>题目描述</h4><p>请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符”go”时，第一个只出现一次的字符是”g”。当从该字符流中读出前六个字符“google”时，第一个只出现一次的字符是”l”。</p>\n<p>输出描述:<br>如果当前字符流没有存在出现一次的字符，返回#字符。</p>\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">ArrayList</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">HashMap</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Map</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Solution</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">ArrayList</span><span class=\"pun\">&lt;</span><span class=\"typ\">Character</span><span class=\"pun\">&gt;</span><span class=\"pln\"> characters </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ArrayList</span><span class=\"pun\">&lt;&gt;();</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">Character</span><span class=\"pun\">,</span><span class=\"typ\">Integer</span><span class=\"pun\">&gt;</span><span class=\"pln\"> map </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//Insert one char from stringstream</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"typ\">Insert</span><span class=\"pun\">(</span><span class=\"kwd\">char</span><span class=\"pln\"> ch</span><span class=\"pun\">)</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Integer</span><span class=\"pln\"> count  </span><span class=\"pun\">=</span><span class=\"pln\"> map</span><span class=\"pun\">.</span><span class=\"pln\">get</span><span class=\"pun\">(</span><span class=\"pln\">ch</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">count</span><span class=\"pun\">!=</span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            map</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">ch</span><span class=\"pun\">,</span><span class=\"pln\">count</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">            map</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">ch</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">            characters</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">ch</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//return the first appearence once char in current stringstream</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">char</span><span class=\"pln\"> </span><span class=\"typ\">FirstAppearingOnce</span><span class=\"pun\">()</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> characters</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">();</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">Integer</span><span class=\"pln\"> count </span><span class=\"pun\">=</span><span class=\"pln\"> map</span><span class=\"pun\">.</span><span class=\"pln\">get</span><span class=\"pun\">(</span><span class=\"pln\">characters</span><span class=\"pun\">.</span><span class=\"pln\">get</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">));</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">count </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> characters</span><span class=\"pun\">.</span><span class=\"pln\">get</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"str\">\'#\'</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n','2019-07-01 01:05:04','2019-10-05 21:42:14',0,0,1,1,0,'算法,Java','请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符\"go\"时，第一个只出现一次的字符是\"g\"。当从该字符流中读出前六个字符“google\"时，第一个只出现一次的字符是','#### 题目描述\n请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符\"go\"时，第一个只出现一次的字符是\"g\"。当从该字符流中读出前六个字符“google\"时，第一个只出现一次的字符是\"l\"。\n\n输出描述:\n如果当前字符流没有存在出现一次的字符，返回#字符。\n```java\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Solution {\n    private ArrayList<Character> characters = new ArrayList<>();\n    private Map<Character,Integer> map = new HashMap<>();\n\n    //Insert one char from stringstream\n    public void Insert(char ch)\n    {\n        Integer count  = map.get(ch);\n        if (count!=null) {\n            map.put(ch,count+1);\n        } else {\n            map.put(ch,1);\n            characters.add(ch);\n        }\n    }\n    //return the first appearence once char in current stringstream\n    public char FirstAppearingOnce()\n    {\n        for (int i = 0; i < characters.size(); i++) {\n            Integer count = map.get(characters.get(i));\n            if (count == 1) {\n                return characters.get(i);\n            }\n\n        }\n        return \'#\';\n    }\n}\n```',1),(1561914313573045,0,1,'1561910658552046,1561914017524099','链表中环的入口结点','<h4 id=\"h4-u9898u76EEu63CFu8FF0\"><a name=\"题目描述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>题目描述</h4><p>给一个链表，若其中包含环，请找出该链表的环的入口结点，否则，输出null。</p>\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">LinkedHashSet</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Set</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">ListNode</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> val</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"typ\">ListNode</span><span class=\"pln\"> next </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"typ\">ListNode</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> val</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">val </span><span class=\"pun\">=</span><span class=\"pln\"> val</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Solution</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">ListNode</span><span class=\"pln\"> </span><span class=\"typ\">EntryNodeOfLoop</span><span class=\"pun\">(</span><span class=\"typ\">ListNode</span><span class=\"pln\"> pHead</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">ListNode</span><span class=\"pln\"> node </span><span class=\"pun\">=</span><span class=\"pln\"> pHead</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Set</span><span class=\"pun\">&lt;</span><span class=\"typ\">ListNode</span><span class=\"pun\">&gt;</span><span class=\"pln\"> set </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">LinkedHashSet</span><span class=\"pun\">&lt;&gt;();</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">while</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">node</span><span class=\"pun\">!=</span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">set</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">node</span><span class=\"pun\">))</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">                node </span><span class=\"pun\">=</span><span class=\"pln\"> node</span><span class=\"pun\">.</span><span class=\"pln\">next</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> node</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> node</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n','2019-07-01 01:05:13','2019-10-05 21:41:03',0,0,1,1,0,'刷题,Java','给一个链表，若其中包含环，请找出该链表的环的入口结点，否则，输出null','#### 题目描述\n给一个链表，若其中包含环，请找出该链表的环的入口结点，否则，输出null。\n```java\nimport java.util.LinkedHashSet;\nimport java.util.Set;\n\nclass ListNode {\n    int val;\n    ListNode next = null;\n\n    ListNode(int val) {\n        this.val = val;\n    }\n}\n\npublic class Solution {\n\n    public ListNode EntryNodeOfLoop(ListNode pHead) {\n        ListNode node = pHead;\n        Set<ListNode> set = new LinkedHashSet<>();\n\n        while (node!=null) {\n            if (set.add(node)) {\n                node = node.next;\n            } else {\n                return node;\n            }\n        }\n\n        return node;\n    }\n}\n```',1),(1561914320208921,0,3,'1570200665990090','焦虑症','<h3 id=\"h3-u7126u8651u75C7\"><a name=\"焦虑症\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>焦虑症</h3><p>焦虑症（anxiety），又称为焦虑性神经症，是神经症这一大类疾病中最常见的一种，以焦虑情绪体验为主要特征。可分为慢性焦虑，即广泛性焦虑（generalized anxiety）和急性焦虑，即惊恐发作（panic attack）两种形式。主要表现为：无明确客观对象的紧张担心，坐立不安，还有植物神经功能失调症状，如心悸、手抖、出汗、尿频及运动性不安等。注意区分正常的焦虑情绪，如焦虑严重程度与客观事实或处境明显不符，或持续时间过长，则可能为病理性的焦虑。</p>\n<p>目前病因尚不明确，可能与遗传因素、个性特点、认知过程、不良生活事件、生化、躯体疾病等均有关系。</p>\n','2019-07-01 01:05:20','2019-10-05 21:51:16',78,28,1,1,0,'心理','焦虑症（anxiety），又称为焦虑性神经症，是神经症这一大类疾病中最常见的一种，以焦虑情绪体验为主要特征。可分为慢性焦虑，即广泛性焦虑（generalized anxiety）和急性焦虑，即惊恐...','### 焦虑症\n焦虑症（anxiety），又称为焦虑性神经症，是神经症这一大类疾病中最常见的一种，以焦虑情绪体验为主要特征。可分为慢性焦虑，即广泛性焦虑（generalized anxiety）和急性焦虑，即惊恐发作（panic attack）两种形式。主要表现为：无明确客观对象的紧张担心，坐立不安，还有植物神经功能失调症状，如心悸、手抖、出汗、尿频及运动性不安等。注意区分正常的焦虑情绪，如焦虑严重程度与客观事实或处境明显不符，或持续时间过长，则可能为病理性的焦虑。\n\n目前病因尚不明确，可能与遗传因素、个性特点、认知过程、不良生活事件、生化、躯体疾病等均有关系。',1),(1561914327491995,0,3,'1570200665990090','焦虑症临床表现','<h3 id=\"h3--\"><a name=\"一、临床表现\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>一、临床表现</h3><p>（一）慢性焦虑（广泛性焦虑）</p>\n<ol>\n<li>情绪症状：在没有明显诱因的情况下，患者经常出现与现实情境不符的过分担心、紧张害怕的情绪，这种紧张害怕常常没有明确的对象和内容。<br>患者感觉自己一直处于一种紧张不安、提心吊胆、恐惧、害怕、忧虑的内心体验中。</li><li>植物神经症状：头晕、胸闷、心慌、呼吸急促、口干、尿频、尿急、出汗、震颤等躯体方面的症状。</li><li>运动性不安：坐立不安、坐卧不宁、烦躁、很难静下心来。</li></ol>\n<p>（二）急性焦虑（惊恐发作）<br>1.濒死感或失控感：在正常的日常生活中，患者几乎跟正常人一样，而一旦发作时（有的有特定触发情境，如封闭空间等），患者突然出现极度恐惧的心理，体验到濒死感或失控感。<br>2.植物神经系统症状同时出现：如胸闷、心慌、呼吸困难、出汗、全身发抖等。<br>3.一般持续几分钟到数小时：发作开始突然，发作时意识清楚。<br>4.极易误诊：发作时患者往往拨打“120”急救电话，去看心内科的急诊。尽管患者看上去症状很重，但是相关检查结果大多正常，因此往往诊断不明确。发作后患者仍极度恐惧，担心自身病情，往往辗转于各大医院各个科室，做各种各样的检查，但不能确诊，既耽误了治疗也造成了医疗资源的浪费。<br>主要根据病史、家族史、临床症状、病程及体格检查、量表测查和实验室辅助检查，由专科医生诊断。其中最主要的是临床症状和病程。<br>早期筛查或自我诊断可以采用一些简单的焦虑自评量表（SAS）测评，如果分数较高，建议到精神科或心理科做进一步检查。<br>按照第3版中国精神障碍分类与诊断标准（CCMD 3），焦虑症系神经症的一个亚型，首先须符合神经症的特点，即具有一定的人格基础，起病常受心理社会因素的影响；症状没有可证实的器质性病变作基础，与病员的现实处境不相称，但病员对存在的症状感到痛苦和无能为力，自知力完整，病程多迁延。</p>\n<p>（三）惊恐发作（急性焦虑）<br>除了具备神经症的特征以外，还必须以惊恐发作为主要临床相。排除其他精神障碍，如恐惧症、抑郁症或躯体形式障碍等继发的惊恐发作；排除躯体疾病如癫痫、心脏病发作、嗜铬细胞瘤、甲亢或自发性低血糖等继发的惊恐发作。轻型症状特点符合以下4点，重型症状加上第5点：</p>\n<ol>\n<li>发作无明显诱因、无相关的特定情景，发作不可预测。</li><li>在发作间歇期，除害怕再发作外，无明显症状。</li><li>发作时表现强烈的恐惧、焦虑及明显的自主神经症状，并常有濒死恐惧、失控感等痛苦体验。</li><li>发作突然开始，迅速达到高峰，发作时意识清楚，事后能回忆。</li><li>患者因难以忍受又无法解脱，而感到痛苦。病程标准在1个月之内至少有3次上述发作，或在首次发作后继发害怕再发作的焦虑持续1个月。<br>（四）广泛性焦虑（慢性焦虑）<br>除具备神经症的特征外，还必须以持续的广泛性焦虑为主要临床相。排除甲亢、高血压、冠心病等躯体疾病的继发性焦虑；排除兴奋药物过量、催眠镇静药物，或抗焦虑药的戒断反应；排除强迫症、恐惧症、抑郁症，或精神分裂症等伴发的焦虑。轻型表现符合以下2点，重型表现加上第3点：</li><li>经常或持续的无明确对象和固定内容的恐惧或提心吊胆。</li><li>伴自主神经症状或运动性不安。</li><li>社会功能受损，病员因难以忍受又无法解脱，而感到痛苦。病程标准符合上述症状至少6个月。</li></ol>\n','2019-07-01 01:05:27','2019-10-05 21:51:10',4,0,1,1,0,'心理','在没有明显诱因的情况下，患者经常出现与现实情境不符的过分担心、紧张害怕的情绪，这种紧张害怕常常没有明确的对象和内容。\n患者感觉自己一直处于一种紧张不安、提心吊胆、恐惧、害怕、忧虑的内心体...','### 一、临床表现\n（一）慢性焦虑（广泛性焦虑）\n1. 情绪症状：在没有明显诱因的情况下，患者经常出现与现实情境不符的过分担心、紧张害怕的情绪，这种紧张害怕常常没有明确的对象和内容。\n患者感觉自己一直处于一种紧张不安、提心吊胆、恐惧、害怕、忧虑的内心体验中。\n2. 植物神经症状：头晕、胸闷、心慌、呼吸急促、口干、尿频、尿急、出汗、震颤等躯体方面的症状。\n3. 运动性不安：坐立不安、坐卧不宁、烦躁、很难静下心来。\n\n（二）急性焦虑（惊恐发作）\n1.濒死感或失控感：在正常的日常生活中，患者几乎跟正常人一样，而一旦发作时（有的有特定触发情境，如封闭空间等），患者突然出现极度恐惧的心理，体验到濒死感或失控感。\n2.植物神经系统症状同时出现：如胸闷、心慌、呼吸困难、出汗、全身发抖等。\n3.一般持续几分钟到数小时：发作开始突然，发作时意识清楚。\n4.极易误诊：发作时患者往往拨打“120”急救电话，去看心内科的急诊。尽管患者看上去症状很重，但是相关检查结果大多正常，因此往往诊断不明确。发作后患者仍极度恐惧，担心自身病情，往往辗转于各大医院各个科室，做各种各样的检查，但不能确诊，既耽误了治疗也造成了医疗资源的浪费。\n主要根据病史、家族史、临床症状、病程及体格检查、量表测查和实验室辅助检查，由专科医生诊断。其中最主要的是临床症状和病程。\n早期筛查或自我诊断可以采用一些简单的焦虑自评量表（SAS）测评，如果分数较高，建议到精神科或心理科做进一步检查。\n按照第3版中国精神障碍分类与诊断标准（CCMD 3），焦虑症系神经症的一个亚型，首先须符合神经症的特点，即具有一定的人格基础，起病常受心理社会因素的影响；症状没有可证实的器质性病变作基础，与病员的现实处境不相称，但病员对存在的症状感到痛苦和无能为力，自知力完整，病程多迁延。\n\n（三）惊恐发作（急性焦虑）\n除了具备神经症的特征以外，还必须以惊恐发作为主要临床相。排除其他精神障碍，如恐惧症、抑郁症或躯体形式障碍等继发的惊恐发作；排除躯体疾病如癫痫、心脏病发作、嗜铬细胞瘤、甲亢或自发性低血糖等继发的惊恐发作。轻型症状特点符合以下4点，重型症状加上第5点：\n1. 发作无明显诱因、无相关的特定情景，发作不可预测。\n2. 在发作间歇期，除害怕再发作外，无明显症状。\n3. 发作时表现强烈的恐惧、焦虑及明显的自主神经症状，并常有濒死恐惧、失控感等痛苦体验。\n4. 发作突然开始，迅速达到高峰，发作时意识清楚，事后能回忆。\n5. 患者因难以忍受又无法解脱，而感到痛苦。病程标准在1个月之内至少有3次上述发作，或在首次发作后继发害怕再发作的焦虑持续1个月。\n（四）广泛性焦虑（慢性焦虑）\n除具备神经症的特征外，还必须以持续的广泛性焦虑为主要临床相。排除甲亢、高血压、冠心病等躯体疾病的继发性焦虑；排除兴奋药物过量、催眠镇静药物，或抗焦虑药的戒断反应；排除强迫症、恐惧症、抑郁症，或精神分裂症等伴发的焦虑。轻型表现符合以下2点，重型表现加上第3点：\n1. 经常或持续的无明确对象和固定内容的恐惧或提心吊胆。\n2. 伴自主神经症状或运动性不安。\n3. 社会功能受损，病员因难以忍受又无法解脱，而感到痛苦。病程标准符合上述症状至少6个月。\n',1),(1563722668111892,0,1,'1561910658528091','给定一个 n 个元素有序','<h2 id=\"h2--\"><a name=\"题目描述：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>题目描述：</h2><p>给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。</p>\n<p>示例 1:<br>输入: </p>\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"pln\">nums </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[-</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"lit\">5</span><span class=\"pun\">,</span><span class=\"lit\">9</span><span class=\"pun\">,</span><span class=\"lit\">12</span><span class=\"pun\">],</span><span class=\"pln\"> target </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">9</span></code></li></ol></pre>\n<p>输出: 4<br>解释: 9 出现在 nums中并且下标为 4</p>\n<h2 id=\"h2--\"><a name=\"提示：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>提示：</h2><p>你可以假设 nums 中的所有元素是不重复的。<br>n 将在 [1, 10000]之间。<br>nums 的每个元素都将在 [-9999, 9999]之间。</p>\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-cpp\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Solution</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"kwd\">public</span><span class=\"pun\">:</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"typ\">int</span><span class=\"pln\"> search</span><span class=\"pun\">(</span><span class=\"typ\">vector</span><span class=\"str\">&lt;int&gt;</span><span class=\"pun\">&amp;</span><span class=\"pln\"> nums</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">int</span><span class=\"pln\"> target</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> numsSize </span><span class=\"pun\">=</span><span class=\"pln\"> nums</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">();</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">numsSize </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">numsSize </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pln\"> </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> nums</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">]!=</span><span class=\"pln\">target</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> left </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> right </span><span class=\"pun\">=</span><span class=\"pln\"> numsSize</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"typ\">int</span><span class=\"pln\"> mid</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-cpp\"></code></li><li class=\"L1\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">while</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">left</span><span class=\"pun\">&lt;=</span><span class=\"pln\">right</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-cpp\"><span class=\"pln\">            mid </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">left</span><span class=\"pun\">+</span><span class=\"pln\">right</span><span class=\"pun\">)/</span><span class=\"lit\">2</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-cpp\"><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">nums</span><span class=\"pun\">[</span><span class=\"pln\">mid</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">==</span><span class=\"pln\"> target</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> mid</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-cpp\"><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">nums</span><span class=\"pun\">[</span><span class=\"pln\">mid</span><span class=\"pun\">]&gt;</span><span class=\"pln\">target</span><span class=\"pun\">)</span><span class=\"pln\"> right </span><span class=\"pun\">=</span><span class=\"pln\"> mid</span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-cpp\"><span class=\"pln\">            </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">nums</span><span class=\"pun\">[</span><span class=\"pln\">mid</span><span class=\"pun\">]&lt;</span><span class=\"pln\">target</span><span class=\"pun\">)</span><span class=\"pln\"> left </span><span class=\"pun\">=</span><span class=\"pln\"> left </span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L7\"><code class=\"lang-cpp\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-cpp\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code class=\"lang-cpp\"><span class=\"pun\">};</span></code></li></ol></pre>\n','2019-07-21 23:24:28','2019-10-05 21:51:03',7,3,1,1,0,'C,C++','给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。','## 题目描述：\n给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。\n\n示例 1:\n输入: \n```cpp\nnums = [-1,0,3,5,9,12], target = 9\n```\n输出: 4\n解释: 9 出现在 nums中并且下标为 4\n\n## 提示：\n你可以假设 nums 中的所有元素是不重复的。\nn 将在 [1, 10000]之间。\nnums 的每个元素都将在 [-9999, 9999]之间。\n```cpp\nclass Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n        int numsSize = nums.size();\n        if(numsSize == 0) return -1;\n        if(numsSize == 1 && nums[0]!=target) return -1;\n \n        int left = 0;\n        int right = numsSize;\n        int mid;\n \n        while (left<=right) {\n            mid = (left+right)/2;\n            if(nums[mid] == target) return mid;\n            if(nums[mid]>target) right = mid-1;\n            else if(nums[mid]<target) left = left +1;\n        }\n        return -1;\n    }\n};\n```\n                ',1),(1563724014364145,0,1,'1570200369910086','启动Spark Shell','<h3 id=\"h3--spark-shell\"><a name=\"启动Spark Shell\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>启动Spark Shell</h3><p>spark-shell是Spark自带的交互式Shell程序，方便用户进行交互式编程，用户可以在该命令行下用scala编写spark程序。</p>\n<p>1.启动spark shell<br>/usr/local/spark-1.5.2-bin-hadoop2.6/bin/spark-shell \\<br>—master spark://node1.itcast.cn:7077 \\<br>—executor-memory 2g \\<br>—total-executor-cores 2</p>\n<p>参数说明：<br>—master spark://node1.itcast.cn:7077 指定Master的地址<br>—executor-memory 2g 指定每个worker可用内存为2G<br>—total-executor-cores 2 指定整个集群使用的cup核数为2个</p>\n<p>注意：<br>如果启动spark shell时没有指定master地址，但是也可以正常启动spark shell和执行spark shell中的程序，其实是启动了spark的local模式，该模式仅在本机启动一个进程，没有与集群建立联系。</p>\n<p>Spark Shell中已经默认将SparkContext类初始化为对象sc。用户代码如果需要用到，则直接应用sc即可</p>\n<p>2.在spark shell中编写WordCount程序<br>1.首先启动hdfs<br>2.向hdfs上传一个文件到hdfs://node1.itcast.cn:9000/words.txt<br>3.在spark shell中用scala语言编写spark程序<br>sc.textFile(“hdfs://node1.itcast.cn:9000/words.txt”).flatMap(<em>.split(“ “))<br>.map((</em>,1)).reduceByKey(<em>+</em>).saveAsTextFile(“hdfs://node1.itcast.cn:9000/out”)</p>\n<p>4.使用hdfs命令查看结果<br>hdfs dfs -ls hdfs://node1.itcast.cn:9000/out/p*</p>\n<p>说明：<br>sc是SparkContext对象，该对象时提交spark程序的入口<br>textFile(hdfs://node1.itcast.cn:9000/words.txt)是hdfs中读取数据<br>flatMap(<em>.split(“ “))先map在压平<br>map((</em>,1))将单词和1构成元组<br>reduceByKey(<em>+</em>)按照key进行reduce，并将value累加<br>saveAsTextFile(“hdfs://node1.itcast.cn:9000/out”)将结果写入到hdfs中</p>\n','2019-07-21 23:46:54','2019-10-05 21:50:47',2,0,1,1,0,'spark','spark-shell是Spark自带的交互式Shell程序，方便用户进行交互式编程，用户可以在该命令行下用scala编写spark程序','### 启动Spark Shell\nspark-shell是Spark自带的交互式Shell程序，方便用户进行交互式编程，用户可以在该命令行下用scala编写spark程序。\n\n1.启动spark shell\n/usr/local/spark-1.5.2-bin-hadoop2.6/bin/spark-shell \\\n--master spark://node1.itcast.cn:7077 \\\n--executor-memory 2g \\\n--total-executor-cores 2\n\n参数说明：\n--master spark://node1.itcast.cn:7077 指定Master的地址\n--executor-memory 2g 指定每个worker可用内存为2G\n--total-executor-cores 2 指定整个集群使用的cup核数为2个\n\n注意：\n如果启动spark shell时没有指定master地址，但是也可以正常启动spark shell和执行spark shell中的程序，其实是启动了spark的local模式，该模式仅在本机启动一个进程，没有与集群建立联系。\n\nSpark Shell中已经默认将SparkContext类初始化为对象sc。用户代码如果需要用到，则直接应用sc即可\n\n2.在spark shell中编写WordCount程序\n1.首先启动hdfs\n2.向hdfs上传一个文件到hdfs://node1.itcast.cn:9000/words.txt\n3.在spark shell中用scala语言编写spark程序\nsc.textFile(\"hdfs://node1.itcast.cn:9000/words.txt\").flatMap(_.split(\" \"))\n.map((_,1)).reduceByKey(_+_).saveAsTextFile(\"hdfs://node1.itcast.cn:9000/out\")\n\n4.使用hdfs命令查看结果\nhdfs dfs -ls hdfs://node1.itcast.cn:9000/out/p*\n\n说明：\nsc是SparkContext对象，该对象时提交spark程序的入口\ntextFile(hdfs://node1.itcast.cn:9000/words.txt)是hdfs中读取数据\nflatMap(_.split(\" \"))先map在压平\nmap((_,1))将单词和1构成元组\nreduceByKey(_+_)按照key进行reduce，并将value累加\nsaveAsTextFile(\"hdfs://node1.itcast.cn:9000/out\")将结果写入到hdfs中\n',1),(1571381084389359,0,5,'1570283218111074','你真正想要的是什么','<h4 id=\"h4-u4E00u4E2Au5178u578Bu7684u77DBu76FE\"><a name=\"一个典型的矛盾\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>一个典型的矛盾</h4><p>我们内心深处的设想和我们的实际生活状况往往不尽相同。我们对于生活的设想和现实之间的差距，往往就如同白天和黑夜的差别。<br><a href=\"http://localhost:8080/file/image?img=1571381026367000247dlzb2.jpg\" title=\"片片\"><img src=\"http://localhost:8080/file/image?img=1571381026367000247dlzb2.jpg\" alt=\"片片\" title=\"片片\"></a><br>我们每个人都渴望成长和幸福。在内心深处，我们都希望改变一些事情，使这个世界变得更美好。我们都确信，我们值得过上美好的生活。</p>\n<h4 id=\"h4-u4E50u89C2u4E3Bu4E49u548Cu81EAu4FE1\"><a name=\"乐观主义和自信\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>乐观主义和自信</h4><p>将你的乐观主义暂时收起来。我也乐意向你解释一下我提出该项要求的原因。乐观主义当然是一种正面的品质，它会帮助你看到所有事物的积极面。但如果只有乐观主义而不具备其他品质的话，它也不会发挥很大作用。乐观主义经常被错当成自信。</p>\n<p>乐观主义让你看到事物的积极面，而自信给你一种战胜事物黑暗面的信心。生活并不是一支只由美好明快的曲调组成的交响乐，它还有黑暗低沉的曲调。不过自信的人在面对困境时不会胆怯。<br><a href=\"https://upload-images.jianshu.io/upload_images/12028144-04e2991992f590ae.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" title=\"imgaeg\"><img src=\"https://upload-images.jianshu.io/upload_images/12028144-04e2991992f590ae.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"imgaeg\" title=\"imgaeg\"></a><br>自信指的是，一个人在自身经历的基础之上，知道他遇事可以依靠自己。一个自信的人不会因阻碍而愤懑，因为他知道他一定会破除万难达成目标。多次的事实也证明他确实能做到。如何在短期内建立自信，详情参见第三章。</p>\n<p>你的财务状况对于建立自信极为重要。财务状况可降低出现盲目乐观主义的可能性。账户余额让吹嘘无所遁形。你想建立起充足的自信，就必须管理你的财务状况。你的财务状况应该成为一个你不惧怕任何阻碍的证明。</p>\n<p>你不能让自己的财务状况破坏你的自信程度。没有自信的生活只能叫作生存。你永远都不会知道自己的潜能。你从不冒险，从不成长，从不应对处境做出反抗，从不充分开发自己真正的潜能。一个没有自信的人，只会一事无成、一无所有。</p>\n<p>所有这些都不是乐观主义，而是自信。只需看一眼账户余额，你就知道你的财务状况是你生活的保障。只需看一眼账户余额，你就立刻充满一种来自自身能力的安全感。<br>这正是本书的主题，即：管理你的财务状况，使它服务于你，而非给你带来麻烦。金钱可以使你生活艰难，也可以使你生活轻松。</p>\n','2019-10-18 14:44:44','2019-10-18 14:47:13',5,1,0,1,0,'经济','一个典型的矛盾：我们内心深处的设想和我们的实际生活状况往往不尽相同。我们对于生活的设想和现实之间的差距，往往就如同白天和黑夜的差别。\n我们每个人都渴望成长和幸福。在内心深处，我们都希望改变一些事情，使这个世界变得更美好。我们都确信，我们值得过上美好的生活。','#### 一个典型的矛盾\n我们内心深处的设想和我们的实际生活状况往往不尽相同。我们对于生活的设想和现实之间的差距，往往就如同白天和黑夜的差别。\n[![片片](http://localhost:8080/file/image?img=1571381026367000247dlzb2.jpg \"片片\")](http://localhost:8080/file/image?img=1571381026367000247dlzb2.jpg \"片片\")\n我们每个人都渴望成长和幸福。在内心深处，我们都希望改变一些事情，使这个世界变得更美好。我们都确信，我们值得过上美好的生活。\n\n#### 乐观主义和自信\n将你的乐观主义暂时收起来。我也乐意向你解释一下我提出该项要求的原因。乐观主义当然是一种正面的品质，它会帮助你看到所有事物的积极面。但如果只有乐观主义而不具备其他品质的话，它也不会发挥很大作用。乐观主义经常被错当成自信。\n\n乐观主义让你看到事物的积极面，而自信给你一种战胜事物黑暗面的信心。生活并不是一支只由美好明快的曲调组成的交响乐，它还有黑暗低沉的曲调。不过自信的人在面对困境时不会胆怯。\n[![imgaeg](https://upload-images.jianshu.io/upload_images/12028144-04e2991992f590ae.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240 \"imgaeg\")](https://upload-images.jianshu.io/upload_images/12028144-04e2991992f590ae.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240 \"imgaeg\")\n自信指的是，一个人在自身经历的基础之上，知道他遇事可以依靠自己。一个自信的人不会因阻碍而愤懑，因为他知道他一定会破除万难达成目标。多次的事实也证明他确实能做到。如何在短期内建立自信，详情参见第三章。\n\n你的财务状况对于建立自信极为重要。财务状况可降低出现盲目乐观主义的可能性。账户余额让吹嘘无所遁形。你想建立起充足的自信，就必须管理你的财务状况。你的财务状况应该成为一个你不惧怕任何阻碍的证明。\n\n你不能让自己的财务状况破坏你的自信程度。没有自信的生活只能叫作生存。你永远都不会知道自己的潜能。你从不冒险，从不成长，从不应对处境做出反抗，从不充分开发自己真正的潜能。一个没有自信的人，只会一事无成、一无所有。\n\n所有这些都不是乐观主义，而是自信。只需看一眼账户余额，你就知道你的财务状况是你生活的保障。只需看一眼账户余额，你就立刻充满一种来自自身能力的安全感。\n这正是本书的主题，即：管理你的财务状况，使它服务于你，而非给你带来麻烦。金钱可以使你生活艰难，也可以使你生活轻松。\n',0);
/*!40000 ALTER TABLE `article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blogger`
--

DROP TABLE IF EXISTS `blogger`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blogger` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(100) NOT NULL COMMENT '用户名',
  `password` varchar(255) DEFAULT NULL COMMENT '密码',
  `nick_name` varchar(255) DEFAULT NULL COMMENT '昵称',
  `desc_me` varchar(900) DEFAULT NULL COMMENT '简介',
  `profession` varchar(100) DEFAULT NULL COMMENT '职业',
  `mail` varchar(90) DEFAULT NULL COMMENT '邮箱',
  `skill` varchar(255) DEFAULT NULL COMMENT '技能',
  `experience` varchar(900) DEFAULT NULL COMMENT '经历',
  `other_blog` varchar(255) DEFAULT NULL COMMENT '其他博客',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blogger`
--

LOCK TABLES `blogger` WRITE;
/*!40000 ALTER TABLE `blogger` DISABLE KEYS */;
INSERT INTO `blogger` VALUES (1,'yms',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
/*!40000 ALTER TABLE `blogger` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `category`
--

DROP TABLE IF EXISTS `category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `category_name` varchar(30) DEFAULT NULL COMMENT '分类名称',
  `created_time` datetime NOT NULL COMMENT '添加时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `category`
--

LOCK TABLES `category` WRITE;
/*!40000 ALTER TABLE `category` DISABLE KEYS */;
INSERT INTO `category` VALUES (1,'技术文章','2019-06-28 18:55:31'),(2,'生活文章','2019-06-28 18:55:32'),(3,'心理文章','2019-06-28 18:55:33'),(4,'团队协作','2019-06-28 18:55:43'),(5,'看点经济','2019-06-28 18:55:53');
/*!40000 ALTER TABLE `category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `comment`
--

DROP TABLE IF EXISTS `comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `comment` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `article_id` bigint(20) DEFAULT NULL COMMENT '文章id',
  `username` varchar(50) DEFAULT NULL COMMENT '评论昵称',
  `content` varchar(350) DEFAULT NULL COMMENT '评论内容',
  `created_time` datetime DEFAULT NULL COMMENT '评论时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comment`
--

LOCK TABLES `comment` WRITE;
/*!40000 ALTER TABLE `comment` DISABLE KEYS */;
INSERT INTO `comment` VALUES (1,1561914320208921,'yangmingsen16@outlook.com','目前病因尚不明确，可能与遗传因素、个性特点、认知过程、不良生活事件、生化、躯体疾病等均有关系','2019-10-06 22:14:32'),(2,1561914320208921,'yangmingsen','悸、手抖、出汗、尿频及运动性不安等。注意区分正常的焦虑情绪，如焦虑严重程度与客观事实或处境明显不符，或持续时间过长','2019-10-06 22:25:12'),(3,1561914320208921,'boke','焦虑症（anxiety），又称为焦虑性神经症，是神经症这一大类疾病中最常见的一种','2019-10-06 22:30:21'),(4,1561914320208921,'kiki','可分为慢性焦虑，即广泛性焦虑（generalized anxiety）和急性焦虑，即惊恐发作（panic attack）两种形式。','2019-10-06 22:31:39'),(5,1561914327491995,'大佬','发作无明显诱因、无相关的特定情景，发作不可预测。\n在发作间歇期，除害怕再发作外，无明显症状。','2019-10-06 22:38:37'),(6,1561914327491995,'Java','发作突然开始，迅速达到高峰，发作时意识清楚，事后能回忆。\n患者因难以忍受又无法解脱，而感到痛苦。病程标准在1个月之内至少有3次上述发作，或在首次发作后继发害怕再发作的焦虑持续1个月。','2019-10-06 22:40:42'),(7,1561914327491995,'哒哒','除具备神经症的特征外，还必须以持续的广泛性焦虑为主要临床相。排除甲亢、高血压、冠心病等躯体疾病的继发性焦虑；排除兴奋药物过量、催眠镇静药物，或抗焦虑药的戒断反应；排除强迫症、恐惧症、抑郁症，或精神分裂症等伴发的焦虑。轻型表现符合以下2点','2019-10-06 22:45:22'),(8,1561914327491995,'哈哈','心病等躯体疾病的继发性焦虑；排除兴奋药物过量、催眠镇静药物，或抗焦虑药的戒断反应；排除强迫症、恐惧症、抑郁症，或精神分裂症等伴发的焦虑。轻型表现符合以下2点','2019-10-06 22:46:52'),(9,1561914327491995,'O(∩_∩)O哈！','1.濒死感或失控感：在正常的日常生活中，患者几乎跟正常人一样，而一旦发作时（有的有特定触发情境，如封闭空间等），患者突然出现极度恐惧的心理，体验到濒死感或失控感。\n2.植物神经系统症状同时出现：如胸闷、心慌、呼吸困难、出汗、全身发抖等。\n3.一般持续几分钟到数小时：发作开始突然，发作时意识清楚。','2019-10-06 22:48:03'),(10,1561914284622172,'企业','想要变得十分富有，你就必须建立自己的企业。\n在你做出决定之后，我想在下一章的内容中向你展示，你如何才能保证自己不被“吓倒”。你会发现，你能为自己创造出一种有助于自己，能以最佳方式支持你的境况。','2019-10-06 22:51:08'),(11,1561914284622172,'不会吧','不到最好，永不满足。\n● 你应该提升你对机会的感知能力。\n● 你参加比赛是为了赢得比赛。\n● 每一件小事都有其对你有利的意义。一切都十分重要。\n● 你的生活准则应该是：成为最好的自己。\n● 你不应该害怕犯错误。','2019-10-06 22:51:33'),(12,1561914284622172,'加油','我的最后一位导师说过：“如果你不经常犯错，表明你冒的风险不够，没有付出最大的努力。”','2019-10-06 22:54:03'),(13,1561914284622172,'改变','通向成功的道路上布满荆棘。只有一路前行，不惧怕错误，生活才会将五彩缤纷展示在我们面前。之后我们才会知道，这一切就是命运的安排。我们所经历的一切也都有其意义。我们所有的经验和经历都会化成一股力量，汇入我们正要完成的使命中。一切都有其意义。我们只需要识别出这些意义。我们所犯过的每一个错误，都会对我们有所帮助。每一个我们过去认识过的人，都会指引我们去认识新的人，获得新的机会。但是要识别出这其中的关联，主要还是在于我们自己。这一切都有一个前提：我们必须克服各种类型的恐惧，持续学习和成长','2019-10-06 22:54:25'),(14,1561914284622172,'成功','● 不到最好，永不满足。\n● 你应该提升你对机会的感知能力。\n● 你参加比赛是为了赢得比赛。\n● 每一件小事都有其对你有利的意义。一切都十分重要。\n● 你的生活准则应该是：成为最好的自己。\n● 你不应该害怕犯错误。\n● 想要变得十分富有，你就必须建立自己的企业。','2019-10-06 22:56:38'),(15,1561914320208921,'wiki','喜欢敲代码,感觉很爽，热爱技术。随和，有良好的协调沟通能力，有团队合作精神。对新鲜事物感兴趣，有较强的自学能力。','2019-10-07 11:09:53'),(16,1561914320208921,'hello','一个基于互联网免费技能学习的网站。平台实现了视频教程，笔记记录，问答专区等。','2019-10-07 11:10:34'),(17,1561914304389005,'欧开开','what this?','2019-10-15 11:18:49'),(18,1561914320208921,'~~~~(>_<)~~~~','不可以的','2019-10-15 19:29:03'),(19,1561914320208921,'O(∩_∩)O哈哈~','胜多负少的','2019-10-15 20:16:39'),(20,1563722668111892,'主程序','水电费发送到','2019-10-15 20:33:03'),(59,1563722668111892,'三大','','2019-10-15 20:34:37'),(60,1563722668111892,'是的的','好好','2019-10-18 14:35:36');
/*!40000 ALTER TABLE `comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `event`
--

DROP TABLE IF EXISTS `event`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `event_name` varchar(255) DEFAULT NULL COMMENT '事件名称',
  `time` datetime DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `event`
--

LOCK TABLES `event` WRITE;
/*!40000 ALTER TABLE `event` DISABLE KEYS */;
/*!40000 ALTER TABLE `event` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `notice`
--

DROP TABLE IF EXISTS `notice`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notice` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` varchar(500) DEFAULT NULL COMMENT '公告内容',
  `created_time` datetime DEFAULT NULL COMMENT '创建时间',
  `id_del` varchar(10) DEFAULT NULL COMMENT '是否删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `notice`
--

LOCK TABLES `notice` WRITE;
/*!40000 ALTER TABLE `notice` DISABLE KEYS */;
/*!40000 ALTER TABLE `notice` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_l_a`
--

DROP TABLE IF EXISTS `t_l_a`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_l_a` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tag_id` bigint(20) DEFAULT NULL COMMENT 'tag_id',
  `article_id` bigint(20) DEFAULT NULL COMMENT 'article_id',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=202 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_l_a`
--

LOCK TABLES `t_l_a` WRITE;
/*!40000 ALTER TABLE `t_l_a` DISABLE KEYS */;
INSERT INTO `t_l_a` VALUES (1,1561910658515056,1561910658422460),(2,1561910658528091,1561910658422460),(3,1561910658552046,1561910658422460),(4,1561910658515056,1561910878245518),(5,1561910658528091,1561910878245518),(6,1561910658552046,1561910878245518),(7,1561910658515056,1561911122875688),(8,1561910658528091,1561911122875688),(9,1561910658552046,1561911122875688),(166,1561910658552046,1561914313573045),(167,1561914017524099,1561914313573045),(168,1561910658528091,1561914304389005),(169,1561914017524099,1561914304389005),(170,1561914017524099,1561914297707201),(171,1561910658528091,1561914297707201),(172,1561914017524099,1561914291722114),(173,1561910658528091,1561914291722114),(174,1570283218111074,1561914284622172),(175,1561914017491098,1561914160528620),(176,1570027246674082,1561914149979667),(177,1570026826927064,1561914144244130),(178,1561914017459047,1561914137145248),(179,1570026120886013,1561914117035401),(180,1570025913174092,1561914017428453),(181,1570025913174092,1561913932979080),(182,1570025913174092,1561913855573644),(183,1570025913186047,1561913855573644),(184,1561910658515056,1561913821619104),(185,1561910658528091,1561913821619104),(186,1561913821636049,1561913821619104),(187,1561913712282076,1561913821619104),(188,1561913821677061,1561913821619104),(189,1561910658515056,1561913712138354),(190,1561910658528091,1561913712138354),(191,1561913712258076,1561913712138354),(192,1561913712282076,1561913712138354),(193,1561910658515056,1561911293772922),(194,1561910658528091,1561911293772922),(195,1561910658552046,1561911293772922),(196,1570200369910086,1563724014364145),(197,1561910658528091,1563722668111892),(198,1570200665990090,1561914327491995),(199,1570200665990090,1561914320208921),(201,1570283218111074,1571381084389359);
/*!40000 ALTER TABLE `t_l_a` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tag`
--

DROP TABLE IF EXISTS `tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tag` (
  `id` bigint(20) NOT NULL,
  `tag_name` varchar(30) DEFAULT NULL COMMENT '标签名称',
  `created_time` datetime DEFAULT NULL COMMENT '添加时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tag`
--

LOCK TABLES `tag` WRITE;
/*!40000 ALTER TABLE `tag` DISABLE KEYS */;
INSERT INTO `tag` VALUES (1561910658515056,'C++','2019-07-01 00:04:18'),(1561910658528091,'算法','2019-07-01 00:04:18'),(1561910658552046,'刷题','2019-07-01 00:04:18'),(1561913712258076,'二分','2019-07-01 00:55:12'),(1561913712282076,'遍历','2019-07-01 00:55:12'),(1561913821636049,'树','2019-07-01 00:57:01'),(1561913821677061,'二叉树','2019-07-01 00:57:01'),(1561914017459047,'springboot','2019-07-01 01:00:17'),(1561914017491098,'技术','2019-07-01 01:00:17'),(1561914017524099,'Java','2019-07-01 01:00:17'),(1570025913174092,'面试','2019-10-02 22:18:33'),(1570025913186047,'HR','2019-10-02 22:18:33'),(1570026120886013,'动态规划','2019-10-02 22:22:00'),(1570026826927064,'postman','2019-10-02 22:33:46'),(1570027246674082,'情商','2019-10-02 22:40:46'),(1570200369910086,'spark','2019-10-04 22:46:09'),(1570200665990090,'心理','2019-10-04 22:51:05'),(1570283218111074,'经济','2019-10-05 21:46:58');
/*!40000 ALTER TABLE `tag` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-10-18 15:12:09
